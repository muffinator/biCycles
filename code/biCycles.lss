
biCycles.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e48  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800100  00800100  00000ebc  2**0
                  ALLOC
  2 .stab         0000156c  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d74  00000000  00000000  00002428  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 1f 05 	jmp	0xa3e	; 0xa3e <__ctors_end>
   4:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
   8:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
   c:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  10:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  14:	0c 94 1b 06 	jmp	0xc36	; 0xc36 <__vector_5>
  18:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  1c:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  20:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  24:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  28:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  2c:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  30:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  34:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  38:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  3c:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  40:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  44:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  48:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  4c:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  50:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  54:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  58:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  5c:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  60:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>
  64:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__bad_interrupt>

00000068 <big_one>:
  68:	00 00 00 00 00 00 00 80 c0 e0 e0 f0 f0 f0 f0 f0     ................
  78:	f0 f0 f0 f0 f0 e0 e0 c0 80 00 00 00 00 00 00 00     ................
  88:	00 00 00 80 f0 fc ff ff ff 1f 07 03 01 00 00 00     ................
  98:	00 00 00 01 01 03 0f 3f ff ff fe f8 e0 00 00 00     .......?........
  a8:	00 00 c0 ff ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
  c0:	1f ff ff ff ff fc 00 00 00 00 0f ff ff ff ff ff     ................
	...
  e0:	c0 ff ff ff ff ff 00 00 00 00 00 07 7f ff ff ff     ................
  f0:	f8 c0 80 00 00 00 00 00 00 00 00 00 00 00 80 f0     ................
 100:	ff ff ff ff 1f 01 00 00 00 00 00 00 00 01 03 07     ................
 110:	0f 1f 3f 3e 3e 3c 7c 7c 7c 7c 7c 3c 3e 3f 1f 1f     ..?>><|||||<>?..
 120:	0f 07 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
 138:	80 e0 f0 f0 f0 f0 00 00 00 00 00 00 00 00 00 00     ................
 148:	00 00 00 00 00 00 c0 c0 e0 e0 f0 f8 f8 fc 7e 3f     ..............~?
 158:	1f ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
 168:	00 00 00 00 00 00 07 07 03 03 01 01 00 00 00 00     ................
 178:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
 198:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
 1b8:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
 1d8:	00 3f 3f 3f 3f 3f 00 00 00 00 00 00 00 00 00 00     .?????..........
 1e8:	00 00 00 00 00 00 80 c0 c0 e0 e0 f0 f0 f0 f0 f0     ................
 1f8:	f0 f0 f0 f0 f0 f0 e0 e0 c0 c0 80 00 00 00 00 00     ................
 208:	00 00 00 f0 fc ff ff ff 1f 07 03 01 01 00 00 00     ................
 218:	00 00 00 00 01 03 03 0f ff ff ff fe fc c0 00 00     ................
	...
 23c:	80 c0 e0 f8 ff ff ff 3f 1f 01 00 00 00 00 00 00     .......?........
 24c:	00 00 00 00 00 00 00 80 c0 c0 e0 f0 f8 fc fe 7f     ................
 25c:	3f 1f 0f 07 03 01 00 00 00 00 00 00 00 00 00 00     ?...............
 26c:	c0 e0 f0 f8 fc fe 7f 3f 1f 0f 07 03 01 01 00 00     .......?........
	...
 288:	00 00 3c 3f 3f 3f 3f 3f 3f 3e 3e 3e 3e 3e 3e 3e     ..<??????>>>>>>>
 298:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 00 00     >>>>>>>>>>>>>>..
 2a8:	00 00 00 00 00 00 80 c0 c0 e0 e0 f0 f0 f0 f0 f0     ................
 2b8:	f0 f0 f0 f0 f0 e0 e0 c0 80 00 00 00 00 00 00 00     ................
 2c8:	00 00 00 70 7c 7f 7f 7f 3f 07 03 01 01 00 00 00     ...p|...?.......
 2d8:	00 00 00 01 01 07 1f ff ff ff fe f8 00 00 00 00     ................
	...
 2f4:	00 e0 e0 e0 e0 e0 e0 f0 f8 fc ff 3f 3f 1f 0f 03     ...........??...
	...
 314:	00 03 03 03 01 03 03 03 03 07 0f 1f ff ff fe fc     ................
 324:	f8 e0 00 00 00 00 00 78 f8 fc fc fc e0 80 00 00     .......x........
	...
 33c:	00 00 80 c0 f8 ff ff ff ff 3f 00 00 00 00 00 00     .........?......
 34c:	01 03 07 0f 1f 1f 3f 3e 3c 7c 7c 7c 7c 7c 7c 3c     ......?><||||||<
 35c:	3e 3f 1f 1f 0f 07 07 01 00 00 00 00 00 00 00 00     >?..............
	...
 378:	00 80 c0 f0 f0 f0 f0 f0 00 00 00 00 00 00 00 00     ................
	...
 394:	c0 e0 f0 fc fe 3f 1f ff ff ff ff ff 00 00 00 00     .....?..........
	...
 3ac:	00 00 80 c0 f0 f8 fe 7f 3f 0f 07 01 00 00 00 ff     ........?.......
 3bc:	ff ff ff ff 00 00 00 00 00 00 00 00 00 c0 e0 f8     ................
 3cc:	fc ff bf 9f 87 83 80 80 80 80 80 80 80 80 80 ff     ................
 3dc:	ff ff ff ff 80 80 80 80 80 80 00 00 00 0f 0f 0f     ................
 3ec:	0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f ff     ................
 3fc:	ff ff ff ff 0f 0f 0f 0f 0f 0f 00 00 00 00 00 00     ................
	...
 418:	00 00 00 3f 3f 3f 3f 3f 00 00 00 00 00 00 00 00     ...?????........
 428:	00 00 00 00 00 00 00 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
 438:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 00 00 00 00     ................
 448:	00 00 00 00 00 80 fe ff ff ff 7f 03 01 01 01 01     ................
 458:	01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 00     ................
 468:	00 00 00 00 f0 ff ff ff ff e7 f0 f8 78 78 7c 7c     ............xx||
 478:	7c 7c 7c 7c fc f8 f8 f8 f0 e0 c0 80 00 00 00 00     ||||............
 488:	00 00 00 02 03 03 03 07 03 01 00 00 00 00 00 00     ................
 498:	00 00 00 00 00 00 01 03 1f ff ff ff ff fc 00 00     ................
 4a8:	00 00 00 78 f8 f8 f8 f8 e0 80 00 00 00 00 00 00     ...x............
 4b8:	00 00 00 00 00 00 80 c0 f0 ff ff ff ff 1f 00 00     ................
 4c8:	00 00 00 00 01 03 07 0f 1f 1f 3f 3e 3c 7c 7c 7c     ..........?><|||
 4d8:	7c 7c 3c 3c 3e 3f 1f 1f 0f 07 03 01 00 00 00 00     ||<<>?..........
	...
 4f0:	80 c0 e0 e0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 e0 e0     ................
 500:	c0 c0 80 00 00 00 00 00 00 00 00 80 f0 fc fe ff     ................
 510:	7f 1f 07 03 01 01 00 00 00 00 00 00 01 01 03 0f     ................
 520:	3f 3f 3f 3e 38 00 00 00 00 00 f0 ff ff ff ff 1f     ???>8...........
 530:	80 c0 e0 f0 f0 f8 78 78 78 78 78 f8 f8 f8 f0 f0     ......xxxxx.....
 540:	e0 c0 c0 00 00 00 00 00 00 00 ff ff ff ff ff ff     ................
 550:	3f 07 03 01 00 00 00 00 00 00 00 00 00 01 03 07     ?...............
 560:	3f ff ff ff fe f0 00 00 00 00 00 1f 7f ff ff ff     ?...............
 570:	f8 c0 80 00 00 00 00 00 00 00 00 00 00 00 00 c0     ................
 580:	f8 ff ff ff 7f 1f 00 00 00 00 00 00 00 01 03 07     ................
 590:	0f 1f 1f 3f 3e 3c 3c 7c 7c 7c 7c 3c 3e 3e 3f 1f     ...?><<||||<>>?.
 5a0:	0f 0f 07 01 00 00 00 00 00 00 00 f0 f0 f0 f0 f0     ................
 5b0:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
 5c0:	f0 f0 f0 f0 f0 f0 00 00 00 00 00 01 01 01 01 01     ................
 5d0:	01 01 01 01 01 01 01 01 01 01 01 81 e1 f1 fd ff     ................
 5e0:	ff 3f 1f 07 03 01 00 00 00 00 00 00 00 00 00 00     .?..............
 5f0:	00 00 00 00 00 00 80 e0 f8 fc ff ff 7f 1f 07 01     ................
	...
 610:	00 00 00 80 f0 fc ff ff ff 3f 07 01 00 00 00 00     .........?......
	...
 630:	00 80 fc ff ff ff ff 0f 01 00 00 00 00 00 00 00     ................
	...
 650:	00 3f 3f 3f 3f 3f 03 00 00 00 00 00 00 00 00 00     .?????..........
	...
 66c:	00 00 00 80 c0 e0 e0 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
 67c:	f0 e0 e0 c0 c0 80 00 00 00 00 00 00 00 00 00 00     ................
 68c:	f8 fe ff ff ff 1f 07 03 01 00 00 00 00 00 00 01     ................
 69c:	01 03 0f ff ff ff ff fc 00 00 00 00 00 00 00 00     ................
 6ac:	01 0f 1f 3f 3f ff fc f8 f0 e0 e0 e0 e0 e0 e0 f0     ...??...........
 6bc:	f0 f8 fe 7f 3f 1f 0f 07 00 00 00 00 00 00 00 f0     ....?...........
 6cc:	f8 fc fe ff 3f 0f 07 07 03 03 01 01 01 01 03 03     ....?...........
 6dc:	03 07 0f 1f 7f fe fe fc f0 c0 00 00 00 00 0f 7f     ................
 6ec:	ff ff ff ff c0 80 00 00 00 00 00 00 00 00 00 00     ................
 6fc:	00 00 00 80 e0 ff ff ff ff 3f 00 00 00 00 00 00     .........?......
 70c:	01 03 07 0f 1f 1f 3f 3e 3c 7c 7c 7c 7c 7c 7c 3c     ......?><||||||<
 71c:	3c 3e 3f 1f 1f 0f 07 03 00 00 00 00 00 00 00 00     <>?.............
 72c:	00 00 80 c0 c0 e0 e0 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
 73c:	f0 e0 e0 c0 80 00 00 00 00 00 00 00 00 00 00 f0     ................
 74c:	fc ff ff ff 3f 0f 07 03 01 00 00 00 00 00 00 01     ....?...........
 75c:	01 03 07 1f ff ff fe fc f0 00 00 00 00 00 07 ff     ................
 76c:	ff ff ff ff c0 00 00 00 00 00 00 00 00 00 00 00     ................
 77c:	00 00 00 c0 ff ff ff ff ff ff 00 00 00 00 00 00     ................
 78c:	03 07 0f 1f 3f 3f 7e 7c 7c f8 f8 f8 78 78 78 7c     ....??~||...xxx|
 79c:	3c 3e 1f 0f 07 ff ff ff ff ff 00 00 00 00 00 30     <>.............0
 7ac:	f0 f0 f0 f0 e0 00 00 00 00 00 00 00 00 00 00 00     ................
 7bc:	00 00 c0 f0 ff ff ff 7f 1f 01 00 00 00 00 00 00     ................
 7cc:	01 03 0f 0f 1f 3f 3e 3c 7c 7c 7c 7c 7c 7c 3c 3e     .....?><||||||<>
 7dc:	3e 1f 1f 0f 07 03 01 00 00 00 00 00                 >...........

000007e8 <lil_one>:
 7e8:	00 00 c0 f0 f8 38 1c 0c 0c 0c 1c 38 f0 e0 80 00     .....8.....8....
 7f8:	00 38 ff ff 00 00 00 00 00 00 00 00 87 ff ff 00     .8..............
 808:	00 00 0f 1f 3c 70 60 e0 e0 e0 60 70 3f 1f 07 00     ....<p`...`p?...
 818:	00 00 00 80 80 c0 c0 e0 70 fc fc 00 00 00 00 00     ........p.......
 828:	00 00 00 03 01 01 00 00 00 ff ff 00 00 00 00 00     ................
	...
 840:	00 7f 7f 00 00 00 00 00 00 00 e0 f0 78 18 1c 0c     ............x...
 850:	0c 0c 1c 18 f8 f0 e0 00 00 00 00 00 00 00 80 80     ................
 860:	c0 e0 70 38 1f 0f 07 00 00 60 78 7c 7e 6f 67 63     ..p8.....`x|~ogc
 870:	61 60 60 60 60 60 60 00 00 00 e0 f0 78 18 1c 0c     a``````.....x...
 880:	0c 0c 1c 78 f0 e0 00 00 00 00 00 00 00 00 00 18     ...x............
 890:	18 18 1c 3f f7 e3 c0 00 00 00 1c 3e 78 70 60 e0     ...?.......>xp`.
 8a0:	e0 e0 60 70 3c 3f 0f 00 00 00 00 00 00 00 80 c0     ..`p<?..........
 8b0:	e0 78 fc fc 00 00 00 00 00 80 e0 70 3c 0e 07 03     .x.........p<...
 8c0:	00 00 ff ff 00 00 00 00 00 03 03 03 03 03 03 03     ................
 8d0:	03 03 7f 7f 03 03 03 00 00 00 00 e0 fc fc 1c 1c     ................
 8e0:	1c 1c 1c 1c 1c 1c 00 00 00 00 1c 1f 1f 0c 0c 0e     ................
 8f0:	0e 0e 0e 1c 7c f8 f0 00 00 00 1c 3c 78 70 60 e0     ....|......<xp`.
 900:	e0 60 60 70 3c 1f 0f 00 00 00 c0 e0 f0 38 1c 0c     .``p<........8..
 910:	0c 0c 1c 18 78 70 40 00 00 fc ff ff 70 18 0c 0c     ....xp@.....p...
 920:	0c 0c 0c 1c 78 f8 e0 00 00 00 0f 1f 3c 70 60 60     ....x.......<p``
 930:	e0 e0 60 70 3c 3f 0f 00 00 00 1c 1c 1c 1c 1c 1c     ..`p<?..........
 940:	1c 1c 9c fc fc 7c 1c 00 00 00 00 00 00 00 c0 f0     .....|..........
 950:	fc 3f 0f 03 00 00 00 00 00 00 00 00 00 7e 7f 1f     .?...........~..
 960:	01 00 00 00 00 00 00 00 00 00 c0 f0 f8 38 1c 0c     .............8..
 970:	0c 0c 1c 38 f8 f0 00 00 00 00 c1 e7 77 3e 1c 18     ...8........w>..
 980:	18 18 1c 3e f7 e3 c0 00 00 03 1f 3f 78 70 60 e0     ...>.......?xp`.
 990:	e0 e0 60 70 78 3f 0f 00 00 00 e0 f0 78 38 1c 0c     ..`px?......x8..
 9a0:	0c 0c 1c 38 f0 e0 c0 00 00 03 1f 3f 78 e0 e0 c0     ...8.......?x...
 9b0:	c0 c0 60 70 3f ff ff 00 00 00 1c 3c 78 60 e0 e0     ..`p?......<x`..
 9c0:	e0 60 60 78 3f 1f 07 00                             .``x?...

000009c8 <menu>:
 9c8:	80 80 80 80 ef c9 fb 80 ff 89 8f 80 ff c9 c1 80     ................
 9d8:	ff c9 c1 80 ff c1 be 80 80 80 80 80 c0 f0 ff 80     ................
 9e8:	80 80 80 80 ff c1 be 80 c1 ff c1 80 ef c9 fb 80     ................
 9f8:	81 ff 81 80 80 80 80 80 c0 f0 ff 80 80 80 80 80     ................
 a08:	ff 89 ff 80 be c1 a2 80 be c1 a2 80 ff c9 c1 80     ................
 a18:	ff c0 e0 80 80 80 80 80 c0 f0 ff 80 80 80 80 80     ................
 a28:	c0 f0 ff 80 80 80 c0 f0 ff 80 c0 f0 ff 80 c0 f0     ................
 a38:	ff 80 c0 f0 ff 80                                   ......

00000a3e <__ctors_end>:
 a3e:	11 24       	eor	r1, r1
 a40:	1f be       	out	0x3f, r1	; 63
 a42:	cf ef       	ldi	r28, 0xFF	; 255
 a44:	d4 e0       	ldi	r29, 0x04	; 4
 a46:	de bf       	out	0x3e, r29	; 62
 a48:	cd bf       	out	0x3d, r28	; 61

00000a4a <__do_clear_bss>:
 a4a:	11 e0       	ldi	r17, 0x01	; 1
 a4c:	a0 e0       	ldi	r26, 0x00	; 0
 a4e:	b1 e0       	ldi	r27, 0x01	; 1
 a50:	01 c0       	rjmp	.+2      	; 0xa54 <.do_clear_bss_start>

00000a52 <.do_clear_bss_loop>:
 a52:	1d 92       	st	X+, r1

00000a54 <.do_clear_bss_start>:
 a54:	a1 30       	cpi	r26, 0x01	; 1
 a56:	b1 07       	cpc	r27, r17
 a58:	e1 f7       	brne	.-8      	; 0xa52 <.do_clear_bss_loop>
 a5a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <main>
 a5e:	0c 94 22 07 	jmp	0xe44	; 0xe44 <_exit>

00000a62 <__bad_interrupt>:
 a62:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000a66 <lcd_spi_init>:
}

void lcd_spi_init(void)
{
	//set SPI enable, master, MSB first, CPOL=0, CPHA=0, f/2
	SPCR = (1<<6)|(1<<4)|(0<<0);
 a66:	80 e5       	ldi	r24, 0x50	; 80
 a68:	8c bd       	out	0x2c, r24	; 44
	SPSR |= (1<<0);
 a6a:	8d b5       	in	r24, 0x2d	; 45
 a6c:	81 60       	ori	r24, 0x01	; 1
 a6e:	8d bd       	out	0x2d, r24	; 45
	//bring CS high
	LCD_SPI_CS_High();
 a70:	28 9a       	sbi	0x05, 0	; 5
}
 a72:	08 95       	ret

00000a74 <lcd_spi_command>:

void lcd_spi_command(unsigned char command)
{
	LCD_SPI_command();
 a74:	29 98       	cbi	0x05, 1	; 5
	//_delay_us(2);
	LCD_SPI_CS_Low();
 a76:	28 98       	cbi	0x05, 0	; 5
	SPDR = command;
 a78:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1<<SPIF)))
 a7a:	0d b4       	in	r0, 0x2d	; 45
 a7c:	07 fe       	sbrs	r0, 7
 a7e:	fd cf       	rjmp	.-6      	; 0xa7a <lcd_spi_command+0x6>
	{}
	LCD_SPI_CS_High();
 a80:	28 9a       	sbi	0x05, 0	; 5
}
 a82:	08 95       	ret

00000a84 <lcd_spi_data>:

void lcd_spi_data(unsigned char data)
{
	LCD_SPI_data();
 a84:	29 9a       	sbi	0x05, 1	; 5
	//_delay_us(2);
	LCD_SPI_CS_Low();
 a86:	28 98       	cbi	0x05, 0	; 5
	SPDR = data;
 a88:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1<<SPIF)))
 a8a:	0d b4       	in	r0, 0x2d	; 45
 a8c:	07 fe       	sbrs	r0, 7
 a8e:	fd cf       	rjmp	.-6      	; 0xa8a <lcd_spi_data+0x6>
	{}
	LCD_SPI_CS_High();
 a90:	28 9a       	sbi	0x05, 0	; 5
}
 a92:	08 95       	ret

00000a94 <lcd_init>:
}

void lcd_spi_init(void)
{
	//set SPI enable, master, MSB first, CPOL=0, CPHA=0, f/2
	SPCR = (1<<6)|(1<<4)|(0<<0);
 a94:	80 e5       	ldi	r24, 0x50	; 80
 a96:	8c bd       	out	0x2c, r24	; 44
	SPSR |= (1<<0);
 a98:	8d b5       	in	r24, 0x2d	; 45
 a9a:	81 60       	ori	r24, 0x01	; 1
 a9c:	8d bd       	out	0x2d, r24	; 45
	//bring CS high
	LCD_SPI_CS_High();
 a9e:	28 9a       	sbi	0x05, 0	; 5

void lcd_init(void)
{
	lcd_spi_init();
	//reset lcd
	PORTB &= ~(LCD_RESET);
 aa0:	2a 98       	cbi	0x05, 2	; 5
 aa2:	80 ed       	ldi	r24, 0xD0	; 208
 aa4:	97 e0       	ldi	r25, 0x07	; 7
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 aa6:	28 ec       	ldi	r18, 0xC8	; 200
 aa8:	30 e0       	ldi	r19, 0x00	; 0
 aaa:	f9 01       	movw	r30, r18
 aac:	31 97       	sbiw	r30, 0x01	; 1
 aae:	f1 f7       	brne	.-4      	; 0xaac <lcd_init+0x18>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 ab0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 ab2:	d9 f7       	brne	.-10     	; 0xaaa <lcd_init+0x16>
	_delay_ms(200);
	PORTB |= LCD_RESET;
 ab4:	2a 9a       	sbi	0x05, 2	; 5
 ab6:	80 e2       	ldi	r24, 0x20	; 32
 ab8:	9e e4       	ldi	r25, 0x4E	; 78
 aba:	01 97       	sbiw	r24, 0x01	; 1
 abc:	f1 f7       	brne	.-4      	; 0xaba <lcd_init+0x26>
	_delay_ms(10);

	//initialization sequence
	lcd_spi_command(0x40); //set scroll line
 abe:	80 e4       	ldi	r24, 0x40	; 64
 ac0:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0xa1); //set display direction
 ac4:	81 ea       	ldi	r24, 0xA1	; 161
 ac6:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0xc0); //set COM direction
 aca:	80 ec       	ldi	r24, 0xC0	; 192
 acc:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0xa4); //turn all pixels on
 ad0:	84 ea       	ldi	r24, 0xA4	; 164
 ad2:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0xa6); //turn display inversion off
 ad6:	86 ea       	ldi	r24, 0xA6	; 166
 ad8:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0xa2); //set LCD bias ratio
 adc:	82 ea       	ldi	r24, 0xA2	; 162
 ade:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0x2f); //turn on Booster
 ae2:	8f e2       	ldi	r24, 0x2F	; 47
 ae4:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0x25); //set contrast
 ae8:	85 e2       	ldi	r24, 0x25	; 37
 aea:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0x81); //set contrast
 aee:	81 e8       	ldi	r24, 0x81	; 129
 af0:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0x1b); //set contrast
 af4:	8b e1       	ldi	r24, 0x1B	; 27
 af6:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0xfa); //temp compensation
 afa:	8a ef       	ldi	r24, 0xFA	; 250
 afc:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0x90); //temp compensation
 b00:	80 e9       	ldi	r24, 0x90	; 144
 b02:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(0xaf); //Set Display Enable
 b06:	8f ea       	ldi	r24, 0xAF	; 175
 b08:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
}
 b0c:	08 95       	ret

00000b0e <lcd_draw>:

void lcd_draw(unsigned char page, unsigned char col, unsigned char data)
{
 b0e:	ff 92       	push	r15
 b10:	0f 93       	push	r16
 b12:	1f 93       	push	r17
 b14:	08 2f       	mov	r16, r24
 b16:	16 2f       	mov	r17, r22
 b18:	f4 2e       	mov	r15, r20
	lcd_spi_command(0x10 + ((col&0xf0)>>4));
 b1a:	86 2f       	mov	r24, r22
 b1c:	82 95       	swap	r24
 b1e:	8f 70       	andi	r24, 0x0F	; 15
 b20:	80 5f       	subi	r24, 0xF0	; 240
 b22:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(col&0x0f);
 b26:	81 2f       	mov	r24, r17
 b28:	8f 70       	andi	r24, 0x0F	; 15
 b2a:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	LCD_page(page);
 b2e:	80 2f       	mov	r24, r16
 b30:	80 55       	subi	r24, 0x50	; 80
 b32:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_data(data);
 b36:	8f 2d       	mov	r24, r15
 b38:	0e 94 42 05 	call	0xa84	; 0xa84 <lcd_spi_data>
}
 b3c:	1f 91       	pop	r17
 b3e:	0f 91       	pop	r16
 b40:	ff 90       	pop	r15
 b42:	08 95       	ret

00000b44 <lcd_col>:

void lcd_col(unsigned char col)
{
 b44:	1f 93       	push	r17
 b46:	18 2f       	mov	r17, r24
	lcd_spi_command(0x10 + ((col&0xf0)>>4));
 b48:	82 95       	swap	r24
 b4a:	8f 70       	andi	r24, 0x0F	; 15
 b4c:	80 5f       	subi	r24, 0xF0	; 240
 b4e:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	lcd_spi_command(col&0x0f);
 b52:	81 2f       	mov	r24, r17
 b54:	8f 70       	andi	r24, 0x0F	; 15
 b56:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
}
 b5a:	1f 91       	pop	r17
 b5c:	08 95       	ret

00000b5e <lcd_clear>:

void lcd_clear(void)
{
 b5e:	0f 93       	push	r16
 b60:	1f 93       	push	r17
 b62:	00 e0       	ldi	r16, 0x00	; 0
 b64:	0b c0       	rjmp	.+22     	; 0xb7c <lcd_clear+0x1e>
	for (char x=0;x<8;x++)
	{
		for (char y=0;y<103;y++)
		{
			lcd_draw(x,y,0x00);
 b66:	80 2f       	mov	r24, r16
 b68:	61 2f       	mov	r22, r17
 b6a:	40 e0       	ldi	r20, 0x00	; 0
 b6c:	0e 94 87 05 	call	0xb0e	; 0xb0e <lcd_draw>

void lcd_clear(void)
{
	for (char x=0;x<8;x++)
	{
		for (char y=0;y<103;y++)
 b70:	1f 5f       	subi	r17, 0xFF	; 255
 b72:	17 36       	cpi	r17, 0x67	; 103
 b74:	c1 f7       	brne	.-16     	; 0xb66 <lcd_clear+0x8>
	lcd_spi_command(col&0x0f);
}

void lcd_clear(void)
{
	for (char x=0;x<8;x++)
 b76:	0f 5f       	subi	r16, 0xFF	; 255
 b78:	08 30       	cpi	r16, 0x08	; 8
 b7a:	11 f0       	breq	.+4      	; 0xb80 <lcd_clear+0x22>
 b7c:	10 e0       	ldi	r17, 0x00	; 0
 b7e:	f3 cf       	rjmp	.-26     	; 0xb66 <lcd_clear+0x8>
		for (char y=0;y<103;y++)
		{
			lcd_draw(x,y,0x00);
		}
	}
}
 b80:	1f 91       	pop	r17
 b82:	0f 91       	pop	r16
 b84:	08 95       	ret

00000b86 <lcd_draw_menu>:
void lcd_draw_menu(void)
{
 b86:	ef 92       	push	r14
 b88:	ff 92       	push	r15
 b8a:	0f 93       	push	r16
 b8c:	1f 93       	push	r17
 b8e:	cf 93       	push	r28
 b90:	df 93       	push	r29
	LCD_page(0);
 b92:	80 eb       	ldi	r24, 0xB0	; 176
 b94:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
	char mode0 = (mode==0)*0x7f;
 b98:	80 91 00 01 	lds	r24, 0x0100
 b9c:	88 23       	and	r24, r24
 b9e:	11 f0       	breq	.+4      	; 0xba4 <lcd_draw_menu+0x1e>
 ba0:	00 e0       	ldi	r16, 0x00	; 0
 ba2:	01 c0       	rjmp	.+2      	; 0xba6 <lcd_draw_menu+0x20>
 ba4:	0f e7       	ldi	r16, 0x7F	; 127
	char mode1 = (mode==1)*0x7f;
 ba6:	80 91 00 01 	lds	r24, 0x0100
 baa:	81 30       	cpi	r24, 0x01	; 1
 bac:	11 f0       	breq	.+4      	; 0xbb2 <lcd_draw_menu+0x2c>
 bae:	ff 24       	eor	r15, r15
 bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <lcd_draw_menu+0x30>
 bb2:	9f e7       	ldi	r25, 0x7F	; 127
 bb4:	f9 2e       	mov	r15, r25
	char mode2 = (mode==2)*0x7f;
 bb6:	80 91 00 01 	lds	r24, 0x0100
 bba:	82 30       	cpi	r24, 0x02	; 2
 bbc:	11 f0       	breq	.+4      	; 0xbc2 <lcd_draw_menu+0x3c>
 bbe:	ee 24       	eor	r14, r14
 bc0:	02 c0       	rjmp	.+4      	; 0xbc6 <lcd_draw_menu+0x40>
 bc2:	8f e7       	ldi	r24, 0x7F	; 127
 bc4:	e8 2e       	mov	r14, r24
 bc6:	c8 ec       	ldi	r28, 0xC8	; 200
 bc8:	d9 e0       	ldi	r29, 0x09	; 9
 bca:	10 e0       	ldi	r17, 0x00	; 0
	for (int x=0;x<31;x++)
	{
		lcd_col(x);
 bcc:	81 2f       	mov	r24, r17
 bce:	0e 94 a2 05 	call	0xb44	; 0xb44 <lcd_col>
		lcd_spi_data(mode0^MEM_read(menu[x]));
 bd2:	fe 01       	movw	r30, r28
 bd4:	84 91       	lpm	r24, Z
 bd6:	80 27       	eor	r24, r16
 bd8:	0e 94 42 05 	call	0xa84	; 0xa84 <lcd_spi_data>
 bdc:	1f 5f       	subi	r17, 0xFF	; 255
 bde:	21 96       	adiw	r28, 0x01	; 1
{
	LCD_page(0);
	char mode0 = (mode==0)*0x7f;
	char mode1 = (mode==1)*0x7f;
	char mode2 = (mode==2)*0x7f;
	for (int x=0;x<31;x++)
 be0:	1f 31       	cpi	r17, 0x1F	; 31
 be2:	a1 f7       	brne	.-24     	; 0xbcc <lcd_draw_menu+0x46>
 be4:	cf e1       	ldi	r28, 0x1F	; 31
 be6:	d0 e0       	ldi	r29, 0x00	; 0
		lcd_col(x);
		lcd_spi_data(mode0^MEM_read(menu[x]));
	}
	for (int x=31;x<59;x++)
	{
		lcd_col(x);
 be8:	8c 2f       	mov	r24, r28
 bea:	0e 94 a2 05 	call	0xb44	; 0xb44 <lcd_col>
		lcd_spi_data(mode1^MEM_read(menu[x]));
 bee:	fe 01       	movw	r30, r28
 bf0:	e8 53       	subi	r30, 0x38	; 56
 bf2:	f6 4f       	sbci	r31, 0xF6	; 246
 bf4:	e4 91       	lpm	r30, Z
 bf6:	8e 2f       	mov	r24, r30
 bf8:	8f 25       	eor	r24, r15
 bfa:	0e 94 42 05 	call	0xa84	; 0xa84 <lcd_spi_data>
	for (int x=0;x<31;x++)
	{
		lcd_col(x);
		lcd_spi_data(mode0^MEM_read(menu[x]));
	}
	for (int x=31;x<59;x++)
 bfe:	21 96       	adiw	r28, 0x01	; 1
 c00:	cb 33       	cpi	r28, 0x3B	; 59
 c02:	d1 05       	cpc	r29, r1
 c04:	89 f7       	brne	.-30     	; 0xbe8 <lcd_draw_menu+0x62>
 c06:	cb e3       	ldi	r28, 0x3B	; 59
 c08:	d0 e0       	ldi	r29, 0x00	; 0
		lcd_col(x);
		lcd_spi_data(mode1^MEM_read(menu[x]));
	}
	for (int x=59;x<91;x++)
	{
		lcd_col(x);
 c0a:	8c 2f       	mov	r24, r28
 c0c:	0e 94 a2 05 	call	0xb44	; 0xb44 <lcd_col>
		lcd_spi_data(mode2^MEM_read(menu[x]));
 c10:	fe 01       	movw	r30, r28
 c12:	e8 53       	subi	r30, 0x38	; 56
 c14:	f6 4f       	sbci	r31, 0xF6	; 246
 c16:	e4 91       	lpm	r30, Z
 c18:	8e 2f       	mov	r24, r30
 c1a:	8e 25       	eor	r24, r14
 c1c:	0e 94 42 05 	call	0xa84	; 0xa84 <lcd_spi_data>
	for (int x=31;x<59;x++)
	{
		lcd_col(x);
		lcd_spi_data(mode1^MEM_read(menu[x]));
	}
	for (int x=59;x<91;x++)
 c20:	21 96       	adiw	r28, 0x01	; 1
 c22:	cb 35       	cpi	r28, 0x5B	; 91
 c24:	d1 05       	cpc	r29, r1
 c26:	89 f7       	brne	.-30     	; 0xc0a <lcd_draw_menu+0x84>
	{
		lcd_col(x);
		lcd_spi_data(mode2^MEM_read(menu[x]));
	}
}
 c28:	df 91       	pop	r29
 c2a:	cf 91       	pop	r28
 c2c:	1f 91       	pop	r17
 c2e:	0f 91       	pop	r16
 c30:	ff 90       	pop	r15
 c32:	ef 90       	pop	r14
 c34:	08 95       	ret

00000c36 <__vector_5>:
void lcd_draw_lilnum(unsigned char digit, unsigned char num);

volatile char mode = 0;

ISR(PCINT2_vect)
{
 c36:	1f 92       	push	r1
 c38:	0f 92       	push	r0
 c3a:	0f b6       	in	r0, 0x3f	; 63
 c3c:	0f 92       	push	r0
 c3e:	11 24       	eor	r1, r1
 c40:	2f 93       	push	r18
 c42:	3f 93       	push	r19
 c44:	4f 93       	push	r20
 c46:	5f 93       	push	r21
 c48:	6f 93       	push	r22
 c4a:	7f 93       	push	r23
 c4c:	8f 93       	push	r24
 c4e:	9f 93       	push	r25
 c50:	af 93       	push	r26
 c52:	bf 93       	push	r27
 c54:	ef 93       	push	r30
 c56:	ff 93       	push	r31
	if(PIND==0x00)
 c58:	89 b1       	in	r24, 0x09	; 9
 c5a:	88 23       	and	r24, r24
 c5c:	61 f4       	brne	.+24     	; 0xc76 <__vector_5+0x40>
	{
		mode=(mode+1)%3;
 c5e:	80 91 00 01 	lds	r24, 0x0100
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	01 96       	adiw	r24, 0x01	; 1
 c66:	63 e0       	ldi	r22, 0x03	; 3
 c68:	70 e0       	ldi	r23, 0x00	; 0
 c6a:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <__divmodhi4>
 c6e:	80 93 00 01 	sts	0x0100, r24
		lcd_draw_menu();
 c72:	0e 94 c3 05 	call	0xb86	; 0xb86 <lcd_draw_menu>
	}
}
 c76:	ff 91       	pop	r31
 c78:	ef 91       	pop	r30
 c7a:	bf 91       	pop	r27
 c7c:	af 91       	pop	r26
 c7e:	9f 91       	pop	r25
 c80:	8f 91       	pop	r24
 c82:	7f 91       	pop	r23
 c84:	6f 91       	pop	r22
 c86:	5f 91       	pop	r21
 c88:	4f 91       	pop	r20
 c8a:	3f 91       	pop	r19
 c8c:	2f 91       	pop	r18
 c8e:	0f 90       	pop	r0
 c90:	0f be       	out	0x3f, r0	; 63
 c92:	0f 90       	pop	r0
 c94:	1f 90       	pop	r1
 c96:	18 95       	reti

00000c98 <lcd_draw_bignum>:
		lcd_spi_data(mode2^MEM_read(menu[x]));
	}
}

void lcd_draw_bignum(unsigned char digit, unsigned char num)
{
 c98:	cf 92       	push	r12
 c9a:	df 92       	push	r13
 c9c:	ef 92       	push	r14
 c9e:	ff 92       	push	r15
 ca0:	0f 93       	push	r16
 ca2:	1f 93       	push	r17
 ca4:	cf 93       	push	r28
 ca6:	df 93       	push	r29
	for (int y=2; y<8;y++)
	{
		LCD_page(y);
		for (int x=0; x<32; x++)
		{
			lcd_col(x+digit*32);
 ca8:	c8 2e       	mov	r12, r24
 caa:	c2 94       	swap	r12
 cac:	cc 0c       	add	r12, r12
 cae:	40 ee       	ldi	r20, 0xE0	; 224
 cb0:	c4 22       	and	r12, r20
 cb2:	83 e0       	ldi	r24, 0x03	; 3
 cb4:	68 9f       	mul	r22, r24
 cb6:	e0 01       	movw	r28, r0
 cb8:	11 24       	eor	r1, r1
 cba:	36 e0       	ldi	r19, 0x06	; 6
 cbc:	cc 0f       	add	r28, r28
 cbe:	dd 1f       	adc	r29, r29
 cc0:	3a 95       	dec	r19
 cc2:	e1 f7       	brne	.-8      	; 0xcbc <lcd_draw_bignum+0x24>
 cc4:	c8 59       	subi	r28, 0x98	; 152
 cc6:	df 4f       	sbci	r29, 0xFF	; 255
 cc8:	22 eb       	ldi	r18, 0xB2	; 178
 cca:	d2 2e       	mov	r13, r18

void lcd_draw_bignum(unsigned char digit, unsigned char num)
{
	for (int y=2; y<8;y++)
	{
		LCD_page(y);
 ccc:	8d 2d       	mov	r24, r13
 cce:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
 cd2:	7e 01       	movw	r14, r28
 cd4:	00 e0       	ldi	r16, 0x00	; 0
 cd6:	10 e0       	ldi	r17, 0x00	; 0
		for (int x=0; x<32; x++)
		{
			lcd_col(x+digit*32);
 cd8:	8c 2d       	mov	r24, r12
 cda:	80 0f       	add	r24, r16
 cdc:	0e 94 a2 05 	call	0xb44	; 0xb44 <lcd_col>
			lcd_spi_data(MEM_read(big_one[num][y-2][x]));
 ce0:	f7 01       	movw	r30, r14
 ce2:	84 91       	lpm	r24, Z
 ce4:	0e 94 42 05 	call	0xa84	; 0xa84 <lcd_spi_data>
void lcd_draw_bignum(unsigned char digit, unsigned char num)
{
	for (int y=2; y<8;y++)
	{
		LCD_page(y);
		for (int x=0; x<32; x++)
 ce8:	0f 5f       	subi	r16, 0xFF	; 255
 cea:	1f 4f       	sbci	r17, 0xFF	; 255
 cec:	08 94       	sec
 cee:	e1 1c       	adc	r14, r1
 cf0:	f1 1c       	adc	r15, r1
 cf2:	00 32       	cpi	r16, 0x20	; 32
 cf4:	11 05       	cpc	r17, r1
 cf6:	81 f7       	brne	.-32     	; 0xcd8 <lcd_draw_bignum+0x40>
 cf8:	d3 94       	inc	r13
 cfa:	a0 96       	adiw	r28, 0x20	; 32
	}
}

void lcd_draw_bignum(unsigned char digit, unsigned char num)
{
	for (int y=2; y<8;y++)
 cfc:	f8 eb       	ldi	r31, 0xB8	; 184
 cfe:	df 16       	cp	r13, r31
 d00:	29 f7       	brne	.-54     	; 0xccc <lcd_draw_bignum+0x34>
		{
			lcd_col(x+digit*32);
			lcd_spi_data(MEM_read(big_one[num][y-2][x]));
		}
	}
}
 d02:	df 91       	pop	r29
 d04:	cf 91       	pop	r28
 d06:	1f 91       	pop	r17
 d08:	0f 91       	pop	r16
 d0a:	ff 90       	pop	r15
 d0c:	ef 90       	pop	r14
 d0e:	df 90       	pop	r13
 d10:	cf 90       	pop	r12
 d12:	08 95       	ret

00000d14 <lcd_draw_lilnum>:

void lcd_draw_lilnum(unsigned char digit, unsigned char num)
{
 d14:	cf 92       	push	r12
 d16:	df 92       	push	r13
 d18:	ef 92       	push	r14
 d1a:	ff 92       	push	r15
 d1c:	0f 93       	push	r16
 d1e:	1f 93       	push	r17
 d20:	cf 93       	push	r28
 d22:	df 93       	push	r29
	for (int y=5; y<8; y++)
	{
		LCD_page(y);
		for (int x=0; x<16; x++)
		{
			lcd_col(x+digit*16+64);
 d24:	82 95       	swap	r24
 d26:	80 7f       	andi	r24, 0xF0	; 240
 d28:	e0 e4       	ldi	r30, 0x40	; 64
 d2a:	ce 2e       	mov	r12, r30
 d2c:	c8 0e       	add	r12, r24
 d2e:	93 e0       	ldi	r25, 0x03	; 3
 d30:	69 9f       	mul	r22, r25
 d32:	e0 01       	movw	r28, r0
 d34:	11 24       	eor	r1, r1
 d36:	74 e0       	ldi	r23, 0x04	; 4
 d38:	cc 0f       	add	r28, r28
 d3a:	dd 1f       	adc	r29, r29
 d3c:	7a 95       	dec	r23
 d3e:	e1 f7       	brne	.-8      	; 0xd38 <lcd_draw_lilnum+0x24>
 d40:	c8 51       	subi	r28, 0x18	; 24
 d42:	d8 4f       	sbci	r29, 0xF8	; 248
 d44:	65 eb       	ldi	r22, 0xB5	; 181
 d46:	e6 2e       	mov	r14, r22
void lcd_draw_lilnum(unsigned char digit, unsigned char num)
{
	for (int y=5; y<8; y++)
	{
		LCD_page(y);
		for (int x=0; x<16; x++)
 d48:	50 e5       	ldi	r21, 0x50	; 80
 d4a:	d5 2e       	mov	r13, r21
 d4c:	d8 0e       	add	r13, r24

void lcd_draw_lilnum(unsigned char digit, unsigned char num)
{
	for (int y=5; y<8; y++)
	{
		LCD_page(y);
 d4e:	8e 2d       	mov	r24, r14
 d50:	0e 94 3a 05 	call	0xa74	; 0xa74 <lcd_spi_command>
 d54:	fc 2c       	mov	r15, r12
 d56:	8e 01       	movw	r16, r28
		for (int x=0; x<16; x++)
		{
			lcd_col(x+digit*16+64);
 d58:	8f 2d       	mov	r24, r15
 d5a:	0e 94 a2 05 	call	0xb44	; 0xb44 <lcd_col>
			lcd_spi_data(MEM_read(lil_one[num][y-5][x]));
 d5e:	f8 01       	movw	r30, r16
 d60:	84 91       	lpm	r24, Z
 d62:	0e 94 42 05 	call	0xa84	; 0xa84 <lcd_spi_data>
 d66:	f3 94       	inc	r15
 d68:	0f 5f       	subi	r16, 0xFF	; 255
 d6a:	1f 4f       	sbci	r17, 0xFF	; 255
void lcd_draw_lilnum(unsigned char digit, unsigned char num)
{
	for (int y=5; y<8; y++)
	{
		LCD_page(y);
		for (int x=0; x<16; x++)
 d6c:	fd 14       	cp	r15, r13
 d6e:	a1 f7       	brne	.-24     	; 0xd58 <lcd_draw_lilnum+0x44>
 d70:	e3 94       	inc	r14
 d72:	60 96       	adiw	r28, 0x10	; 16
	}
}

void lcd_draw_lilnum(unsigned char digit, unsigned char num)
{
	for (int y=5; y<8; y++)
 d74:	f8 eb       	ldi	r31, 0xB8	; 184
 d76:	ef 16       	cp	r14, r31
 d78:	51 f7       	brne	.-44     	; 0xd4e <lcd_draw_lilnum+0x3a>
		{
			lcd_col(x+digit*16+64);
			lcd_spi_data(MEM_read(lil_one[num][y-5][x]));
		}
	}
}
 d7a:	df 91       	pop	r29
 d7c:	cf 91       	pop	r28
 d7e:	1f 91       	pop	r17
 d80:	0f 91       	pop	r16
 d82:	ff 90       	pop	r15
 d84:	ef 90       	pop	r14
 d86:	df 90       	pop	r13
 d88:	cf 90       	pop	r12
 d8a:	08 95       	ret

00000d8c <main>:
		lcd_draw_menu();
	}
}

int main(void)
{
 d8c:	0f 93       	push	r16
 d8e:	1f 93       	push	r17
 d90:	cf 93       	push	r28
 d92:	df 93       	push	r29
	DDRD &= ~0x01;
 d94:	50 98       	cbi	0x0a, 0	; 10
	PORTD |= 0x01;
 d96:	58 9a       	sbi	0x0b, 0	; 11
	DDRB = 0xFF;
 d98:	8f ef       	ldi	r24, 0xFF	; 255
 d9a:	84 b9       	out	0x04, r24	; 4
	PCICR = (1<<2);
 d9c:	84 e0       	ldi	r24, 0x04	; 4
 d9e:	80 93 68 00 	sts	0x0068, r24
	PCMSK2 = 0x01;
 da2:	81 e0       	ldi	r24, 0x01	; 1
 da4:	80 93 6d 00 	sts	0x006D, r24
	lcd_init();
 da8:	0e 94 4a 05 	call	0xa94	; 0xa94 <lcd_init>
	lcd_clear();
 dac:	0e 94 af 05 	call	0xb5e	; 0xb5e <lcd_clear>
	lcd_draw_menu();
 db0:	0e 94 c3 05 	call	0xb86	; 0xb86 <lcd_draw_menu>
	sei();
 db4:	78 94       	sei
 db6:	c0 e0       	ldi	r28, 0x00	; 0
 db8:	d0 e0       	ldi	r29, 0x00	; 0
 dba:	08 ec       	ldi	r16, 0xC8	; 200
 dbc:	10 e0       	ldi	r17, 0x00	; 0
	while(1==1)
	{
		for (int x=0;x<0xff;x++)
		{
			lcd_draw_bignum(0,1);
 dbe:	80 e0       	ldi	r24, 0x00	; 0
 dc0:	61 e0       	ldi	r22, 0x01	; 1
 dc2:	0e 94 4c 06 	call	0xc98	; 0xc98 <lcd_draw_bignum>
			lcd_draw_bignum(1,2);
 dc6:	81 e0       	ldi	r24, 0x01	; 1
 dc8:	62 e0       	ldi	r22, 0x02	; 2
 dca:	0e 94 4c 06 	call	0xc98	; 0xc98 <lcd_draw_bignum>
			lcd_draw_lilnum(0,3);
 dce:	80 e0       	ldi	r24, 0x00	; 0
 dd0:	63 e0       	ldi	r22, 0x03	; 3
 dd2:	0e 94 8a 06 	call	0xd14	; 0xd14 <lcd_draw_lilnum>
			lcd_draw_menu();
 dd6:	0e 94 c3 05 	call	0xb86	; 0xb86 <lcd_draw_menu>
 dda:	88 e8       	ldi	r24, 0x88	; 136
 ddc:	93 e1       	ldi	r25, 0x13	; 19
 dde:	f8 01       	movw	r30, r16
 de0:	31 97       	sbiw	r30, 0x01	; 1
 de2:	f1 f7       	brne	.-4      	; 0xde0 <main+0x54>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 de4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 de6:	d9 f7       	brne	.-10     	; 0xdde <main+0x52>
	lcd_clear();
	lcd_draw_menu();
	sei();
	while(1==1)
	{
		for (int x=0;x<0xff;x++)
 de8:	21 96       	adiw	r28, 0x01	; 1
 dea:	cf 3f       	cpi	r28, 0xFF	; 255
 dec:	d1 05       	cpc	r29, r1
 dee:	3c f3       	brlt	.-50     	; 0xdbe <main+0x32>
 df0:	c0 e0       	ldi	r28, 0x00	; 0
 df2:	d0 e0       	ldi	r29, 0x00	; 0
 df4:	e4 cf       	rjmp	.-56     	; 0xdbe <main+0x32>

00000df6 <__divmodhi4>:
 df6:	97 fb       	bst	r25, 7
 df8:	09 2e       	mov	r0, r25
 dfa:	07 26       	eor	r0, r23
 dfc:	0a d0       	rcall	.+20     	; 0xe12 <__divmodhi4_neg1>
 dfe:	77 fd       	sbrc	r23, 7
 e00:	04 d0       	rcall	.+8      	; 0xe0a <__divmodhi4_neg2>
 e02:	0c d0       	rcall	.+24     	; 0xe1c <__udivmodhi4>
 e04:	06 d0       	rcall	.+12     	; 0xe12 <__divmodhi4_neg1>
 e06:	00 20       	and	r0, r0
 e08:	1a f4       	brpl	.+6      	; 0xe10 <__divmodhi4_exit>

00000e0a <__divmodhi4_neg2>:
 e0a:	70 95       	com	r23
 e0c:	61 95       	neg	r22
 e0e:	7f 4f       	sbci	r23, 0xFF	; 255

00000e10 <__divmodhi4_exit>:
 e10:	08 95       	ret

00000e12 <__divmodhi4_neg1>:
 e12:	f6 f7       	brtc	.-4      	; 0xe10 <__divmodhi4_exit>
 e14:	90 95       	com	r25
 e16:	81 95       	neg	r24
 e18:	9f 4f       	sbci	r25, 0xFF	; 255
 e1a:	08 95       	ret

00000e1c <__udivmodhi4>:
 e1c:	aa 1b       	sub	r26, r26
 e1e:	bb 1b       	sub	r27, r27
 e20:	51 e1       	ldi	r21, 0x11	; 17
 e22:	07 c0       	rjmp	.+14     	; 0xe32 <__udivmodhi4_ep>

00000e24 <__udivmodhi4_loop>:
 e24:	aa 1f       	adc	r26, r26
 e26:	bb 1f       	adc	r27, r27
 e28:	a6 17       	cp	r26, r22
 e2a:	b7 07       	cpc	r27, r23
 e2c:	10 f0       	brcs	.+4      	; 0xe32 <__udivmodhi4_ep>
 e2e:	a6 1b       	sub	r26, r22
 e30:	b7 0b       	sbc	r27, r23

00000e32 <__udivmodhi4_ep>:
 e32:	88 1f       	adc	r24, r24
 e34:	99 1f       	adc	r25, r25
 e36:	5a 95       	dec	r21
 e38:	a9 f7       	brne	.-22     	; 0xe24 <__udivmodhi4_loop>
 e3a:	80 95       	com	r24
 e3c:	90 95       	com	r25
 e3e:	bc 01       	movw	r22, r24
 e40:	cd 01       	movw	r24, r26
 e42:	08 95       	ret

00000e44 <_exit>:
 e44:	f8 94       	cli

00000e46 <__stop_program>:
 e46:	ff cf       	rjmp	.-2      	; 0xe46 <__stop_program>
