   1               		.file	"biCycles.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
  96               	.global	lcd_spi_init
  98               	lcd_spi_init:
  99               		.stabd	46,0,0
   1:biCycles.c    **** //      biCycles.c
   2:biCycles.c    **** //      
   3:biCycles.c    **** //      Copyright 2011 Josh <muffin@josh-laptop>
   4:biCycles.c    **** //      
   5:biCycles.c    **** //      This program is free software; you can redistribute it and/or modify
   6:biCycles.c    **** //      it under the terms of the GNU General Public License as published by
   7:biCycles.c    **** //      the Free Software Foundation; either version 2 of the License, or
   8:biCycles.c    **** //      (at your option) any later version.
   9:biCycles.c    **** //      
  10:biCycles.c    **** //      This program is distributed in the hope that it will be useful,
  11:biCycles.c    **** //      but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:biCycles.c    **** //      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:biCycles.c    **** //      GNU General Public License for more details.
  14:biCycles.c    **** //      
  15:biCycles.c    **** //      You should have received a copy of the GNU General Public License
  16:biCycles.c    **** //      along with this program; if not, write to the Free Software
  17:biCycles.c    **** //      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  18:biCycles.c    **** //      MA 02110-1301, USA.
  19:biCycles.c    **** 
  20:biCycles.c    **** #define LCD_SPI_data()		(PORTB |=(1<<1))
  21:biCycles.c    **** #define LCD_SPI_command()	(PORTB &= ~(1<<1))
  22:biCycles.c    **** #define LCD_SPI_CS_High()	(PORTB |= (1<<0))
  23:biCycles.c    **** #define LCD_SPI_CS_Low()	(PORTB &= ~(1<<0))
  24:biCycles.c    **** #define LCD_page(page)		(lcd_spi_command(0xb0+page))
  25:biCycles.c    **** #define MEM_read(byte)	(pgm_read_byte(&(byte)))
  26:biCycles.c    **** #define LCD_RESET 0x04
  27:biCycles.c    **** #define F_CPU 8000000UL
  28:biCycles.c    **** 
  29:biCycles.c    **** #include <avr/interrupt.h>
  30:biCycles.c    **** #include <util/delay.h>
  31:biCycles.c    **** #include <stdlib.h>
  32:biCycles.c    **** #include "graphics.h"
  33:biCycles.c    **** 
  34:biCycles.c    **** void lcd_spi_init(void);
  35:biCycles.c    **** void lcd_spi_command(unsigned char command);
  36:biCycles.c    **** void lcd_spi_data(unsigned char data);
  37:biCycles.c    **** void lcd_init(void);
  38:biCycles.c    **** void lcd_draw(unsigned char page, unsigned char col, unsigned char data);
  39:biCycles.c    **** void lcd_col(unsigned char col);
  40:biCycles.c    **** void lcd_clear(void);
  41:biCycles.c    **** void lcd_draw_menu(void);
  42:biCycles.c    **** void lcd_draw_bignum(unsigned char digit, unsigned char num);
  43:biCycles.c    **** void lcd_draw_lilnum(unsigned char digit, unsigned char num);
  44:biCycles.c    **** 
  45:biCycles.c    **** volatile char mode = 0;
  46:biCycles.c    **** 
  47:biCycles.c    **** ISR(PCINT2_vect)
  48:biCycles.c    **** {
  49:biCycles.c    **** 	if(PIND==0x00)
  50:biCycles.c    **** 	{
  51:biCycles.c    **** 		mode=(mode+1)%3;
  52:biCycles.c    **** 		lcd_draw_menu();
  53:biCycles.c    **** 	}
  54:biCycles.c    **** }
  55:biCycles.c    **** 
  56:biCycles.c    **** int main(void)
  57:biCycles.c    **** {
  58:biCycles.c    **** 	DDRD &= ~0x01;
  59:biCycles.c    **** 	PORTD |= 0x01;
  60:biCycles.c    **** 	DDRB = 0xFF;
  61:biCycles.c    **** 	PCICR = (1<<2);
  62:biCycles.c    **** 	PCMSK2 = 0x01;
  63:biCycles.c    **** 	lcd_init();
  64:biCycles.c    **** 	lcd_clear();
  65:biCycles.c    **** 	lcd_draw_menu();
  66:biCycles.c    **** 	sei();
  67:biCycles.c    **** 	while(1==1)
  68:biCycles.c    **** 	{
  69:biCycles.c    **** 		for (int x=0;x<0xff;x++)
  70:biCycles.c    **** 		{
  71:biCycles.c    **** 			lcd_draw_bignum(0,1);
  72:biCycles.c    **** 			lcd_draw_bignum(1,2);
  73:biCycles.c    **** 			lcd_draw_lilnum(0,3);
  74:biCycles.c    **** 			lcd_draw_menu();
  75:biCycles.c    **** 			_delay_ms(500);
  76:biCycles.c    **** 		}
  77:biCycles.c    **** 	}
  78:biCycles.c    **** }
  79:biCycles.c    **** 
  80:biCycles.c    **** void lcd_spi_init(void)
  81:biCycles.c    **** {
 101               	.LM0:
 102               	.LFBB1:
 103               	/* prologue: function */
 104               	/* frame size = 0 */
  82:biCycles.c    **** 	//set SPI enable, master, MSB first, CPOL=0, CPHA=0, f/2
  83:biCycles.c    **** 	SPCR = (1<<6)|(1<<4)|(0<<0);
 106               	.LM1:
 107 0000 80E5      		ldi r24,lo8(80)
 108 0002 8CBD      		out 76-32,r24
  84:biCycles.c    **** 	SPSR |= (1<<0);
 110               	.LM2:
 111 0004 8DB5      		in r24,77-32
 112 0006 8160      		ori r24,lo8(1)
 113 0008 8DBD      		out 77-32,r24
  85:biCycles.c    **** 	//bring CS high
  86:biCycles.c    **** 	LCD_SPI_CS_High();
 115               	.LM3:
 116 000a 289A      		sbi 37-32,0
 117               	/* epilogue start */
  87:biCycles.c    **** }
 119               	.LM4:
 120 000c 0895      		ret
 122               	.Lscope1:
 124               		.stabd	78,0,0
 127               	.global	lcd_spi_command
 129               	lcd_spi_command:
 130               		.stabd	46,0,0
  88:biCycles.c    **** 
  89:biCycles.c    **** void lcd_spi_command(unsigned char command)
  90:biCycles.c    **** {
 132               	.LM5:
 133               	.LFBB2:
 134               	/* prologue: function */
 135               	/* frame size = 0 */
  91:biCycles.c    **** 	LCD_SPI_command();
 137               	.LM6:
 138 000e 2998      		cbi 37-32,1
  92:biCycles.c    **** 	//_delay_us(2);
  93:biCycles.c    **** 	LCD_SPI_CS_Low();
 140               	.LM7:
 141 0010 2898      		cbi 37-32,0
  94:biCycles.c    **** 	SPDR = command;
 143               	.LM8:
 144 0012 8EBD      		out 78-32,r24
 145               	.L4:
  95:biCycles.c    **** 	while (!(SPSR & (1<<SPIF)))
 147               	.LM9:
 148 0014 0DB4      		in __tmp_reg__,77-32
 149 0016 07FE      		sbrs __tmp_reg__,7
 150 0018 00C0      		rjmp .L4
  96:biCycles.c    **** 	{}
  97:biCycles.c    **** 	LCD_SPI_CS_High();
 152               	.LM10:
 153 001a 289A      		sbi 37-32,0
 154               	/* epilogue start */
  98:biCycles.c    **** }
 156               	.LM11:
 157 001c 0895      		ret
 159               	.Lscope2:
 161               		.stabd	78,0,0
 164               	.global	lcd_spi_data
 166               	lcd_spi_data:
 167               		.stabd	46,0,0
  99:biCycles.c    **** 
 100:biCycles.c    **** void lcd_spi_data(unsigned char data)
 101:biCycles.c    **** {
 169               	.LM12:
 170               	.LFBB3:
 171               	/* prologue: function */
 172               	/* frame size = 0 */
 102:biCycles.c    **** 	LCD_SPI_data();
 174               	.LM13:
 175 001e 299A      		sbi 37-32,1
 103:biCycles.c    **** 	//_delay_us(2);
 104:biCycles.c    **** 	LCD_SPI_CS_Low();
 177               	.LM14:
 178 0020 2898      		cbi 37-32,0
 105:biCycles.c    **** 	SPDR = data;
 180               	.LM15:
 181 0022 8EBD      		out 78-32,r24
 182               	.L8:
 106:biCycles.c    **** 	while (!(SPSR & (1<<SPIF)))
 184               	.LM16:
 185 0024 0DB4      		in __tmp_reg__,77-32
 186 0026 07FE      		sbrs __tmp_reg__,7
 187 0028 00C0      		rjmp .L8
 107:biCycles.c    **** 	{}
 108:biCycles.c    **** 	LCD_SPI_CS_High();
 189               	.LM17:
 190 002a 289A      		sbi 37-32,0
 191               	/* epilogue start */
 109:biCycles.c    **** }
 193               	.LM18:
 194 002c 0895      		ret
 196               	.Lscope3:
 198               		.stabd	78,0,0
 200               	.global	lcd_init
 202               	lcd_init:
 203               		.stabd	46,0,0
 110:biCycles.c    **** 
 111:biCycles.c    **** void lcd_init(void)
 112:biCycles.c    **** {
 205               	.LM19:
 206               	.LFBB4:
 207               	/* prologue: function */
 208               	/* frame size = 0 */
 209               	.LBB27:
 210               	.LBB28:
  83:biCycles.c    **** 	SPCR = (1<<6)|(1<<4)|(0<<0);
 212               	.LM20:
 213 002e 80E5      		ldi r24,lo8(80)
 214 0030 8CBD      		out 76-32,r24
  84:biCycles.c    **** 	SPSR |= (1<<0);
 216               	.LM21:
 217 0032 8DB5      		in r24,77-32
 218 0034 8160      		ori r24,lo8(1)
 219 0036 8DBD      		out 77-32,r24
  86:biCycles.c    **** 	LCD_SPI_CS_High();
 221               	.LM22:
 222 0038 289A      		sbi 37-32,0
 223               	.LBE28:
 224               	.LBE27:
 113:biCycles.c    **** 	lcd_spi_init();
 114:biCycles.c    **** 	//reset lcd
 115:biCycles.c    **** 	PORTB &= ~(LCD_RESET);
 226               	.LM23:
 227 003a 2A98      		cbi 37-32,2
 228 003c 80ED      		ldi r24,lo8(2000)
 229 003e 97E0      		ldi r25,hi8(2000)
 230               	.LBB29:
 231               	.LBB30:
 232               	.LBB31:
 233               	.LBB32:
 235               	.Ltext1:
   1:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
   5:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
   8:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  11:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      distribution.
  15:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  16:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  20:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  32:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  34:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  37:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  39:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \file */
  40:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     \code
  42:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     \endcode
  44:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  45:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  53:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  60:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  62:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** */
  63:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  64:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #endif
  68:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  69:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  71:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     register.
  76:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  77:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** */
  80:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** void
  81:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** {
  83:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	);
  89:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** }
  90:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  91:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  93:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  99:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****  */
 102:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** void
 103:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** {
 105:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 237               	.LM24:
 238 0040 28EC      		ldi r18,lo8(200)
 239 0042 30E0      		ldi r19,hi8(200)
 240               	.L12:
 241 0044 F901      		movw r30,r18
 242               	/* #APP */
 243               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 244 0046 3197      		1: sbiw r30,1
 245 0048 01F4      		brne 1b
 246               	 ;  0 "" 2
 247               	/* #NOAPP */
 248               	.LBE32:
 249               	.LBE31:
 251               	.Ltext2:
   1:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5.2.1 2009/02/25 10:14:03 joerg_wunsch Exp $ */
  34:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #include <inttypes.h>
  39:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  41:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /** \file */
  42:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \code
  44:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \endcode
  48:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  49:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     used.
  53:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  63:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     routines linked into the application.
  71:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  72:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  76:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** */
  77:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  78:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  82:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef F_CPU
  84:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  88:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  89:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  92:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  93:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /**
  94:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    \ingroup util_delay
  95:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  96:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
  97:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
 101:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 102:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
 103:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 104:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 105:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 106:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 107:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 108:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****  */
 109:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** void
 110:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 111:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** {
 112:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 113:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 114:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 115:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		__ticks = 1;
 116:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 117:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	{
 118:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 119:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 121:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		{
 122:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 123:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 124:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			__ticks --;
 253               	.LM25:
 254 004a 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 256               	.LM26:
 257 004c 01F4      		brne .L12
 258               	.LBE30:
 259               	.LBE29:
 261               	.Ltext3:
 116:biCycles.c    **** 	_delay_ms(200);
 117:biCycles.c    **** 	PORTB |= LCD_RESET;
 263               	.LM27:
 264 004e 2A9A      		sbi 37-32,2
 265               	.LBB33:
 266               	.LBB34:
 267               	.LBB35:
 268               	.LBB36:
 270               	.Ltext4:
 272               	.LM28:
 273 0050 80E2      		ldi r24,lo8(20000)
 274 0052 9EE4      		ldi r25,hi8(20000)
 275               	/* #APP */
 276               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 277 0054 0197      		1: sbiw r24,1
 278 0056 01F4      		brne 1b
 279               	 ;  0 "" 2
 280               	/* #NOAPP */
 281               	.LBE36:
 282               	.LBE35:
 283               	.LBE34:
 284               	.LBE33:
 286               	.Ltext5:
 118:biCycles.c    **** 	_delay_ms(10);
 119:biCycles.c    **** 
 120:biCycles.c    **** 	//initialization sequence
 121:biCycles.c    **** 	lcd_spi_command(0x40); //set scroll line
 288               	.LM29:
 289 0058 80E4      		ldi r24,lo8(64)
 290 005a 0E94 0000 		call lcd_spi_command
 122:biCycles.c    **** 	lcd_spi_command(0xa1); //set display direction
 292               	.LM30:
 293 005e 81EA      		ldi r24,lo8(-95)
 294 0060 0E94 0000 		call lcd_spi_command
 123:biCycles.c    **** 	lcd_spi_command(0xc0); //set COM direction
 296               	.LM31:
 297 0064 80EC      		ldi r24,lo8(-64)
 298 0066 0E94 0000 		call lcd_spi_command
 124:biCycles.c    **** 	lcd_spi_command(0xa4); //turn all pixels on
 300               	.LM32:
 301 006a 84EA      		ldi r24,lo8(-92)
 302 006c 0E94 0000 		call lcd_spi_command
 125:biCycles.c    **** 	lcd_spi_command(0xa6); //turn display inversion off
 304               	.LM33:
 305 0070 86EA      		ldi r24,lo8(-90)
 306 0072 0E94 0000 		call lcd_spi_command
 126:biCycles.c    **** 	lcd_spi_command(0xa2); //set LCD bias ratio
 308               	.LM34:
 309 0076 82EA      		ldi r24,lo8(-94)
 310 0078 0E94 0000 		call lcd_spi_command
 127:biCycles.c    **** 	lcd_spi_command(0x2f); //turn on Booster
 312               	.LM35:
 313 007c 8FE2      		ldi r24,lo8(47)
 314 007e 0E94 0000 		call lcd_spi_command
 128:biCycles.c    **** 	lcd_spi_command(0x25); //set contrast
 316               	.LM36:
 317 0082 85E2      		ldi r24,lo8(37)
 318 0084 0E94 0000 		call lcd_spi_command
 129:biCycles.c    **** 	lcd_spi_command(0x81); //set contrast
 320               	.LM37:
 321 0088 81E8      		ldi r24,lo8(-127)
 322 008a 0E94 0000 		call lcd_spi_command
 130:biCycles.c    **** 	lcd_spi_command(0x1b); //set contrast
 324               	.LM38:
 325 008e 8BE1      		ldi r24,lo8(27)
 326 0090 0E94 0000 		call lcd_spi_command
 131:biCycles.c    **** 	lcd_spi_command(0xfa); //temp compensation
 328               	.LM39:
 329 0094 8AEF      		ldi r24,lo8(-6)
 330 0096 0E94 0000 		call lcd_spi_command
 132:biCycles.c    **** 	lcd_spi_command(0x90); //temp compensation
 332               	.LM40:
 333 009a 80E9      		ldi r24,lo8(-112)
 334 009c 0E94 0000 		call lcd_spi_command
 133:biCycles.c    **** 	lcd_spi_command(0xaf); //Set Display Enable
 336               	.LM41:
 337 00a0 8FEA      		ldi r24,lo8(-81)
 338 00a2 0E94 0000 		call lcd_spi_command
 339               	/* epilogue start */
 134:biCycles.c    **** }
 341               	.LM42:
 342 00a6 0895      		ret
 350               	.Lscope4:
 352               		.stabd	78,0,0
 357               	.global	lcd_draw
 359               	lcd_draw:
 360               		.stabd	46,0,0
 135:biCycles.c    **** 
 136:biCycles.c    **** void lcd_draw(unsigned char page, unsigned char col, unsigned char data)
 137:biCycles.c    **** {
 362               	.LM43:
 363               	.LFBB5:
 364 00a8 FF92      		push r15
 365 00aa 0F93      		push r16
 366 00ac 1F93      		push r17
 367               	/* prologue: function */
 368               	/* frame size = 0 */
 369 00ae 082F      		mov r16,r24
 370 00b0 162F      		mov r17,r22
 371 00b2 F42E      		mov r15,r20
 138:biCycles.c    **** 	lcd_spi_command(0x10 + ((col&0xf0)>>4));
 373               	.LM44:
 374 00b4 862F      		mov r24,r22
 375 00b6 8295      		swap r24
 376 00b8 8F70      		andi r24,lo8(15)
 377 00ba 805F      		subi r24,lo8(-(16))
 378 00bc 0E94 0000 		call lcd_spi_command
 139:biCycles.c    **** 	lcd_spi_command(col&0x0f);
 380               	.LM45:
 381 00c0 812F      		mov r24,r17
 382 00c2 8F70      		andi r24,lo8(15)
 383 00c4 0E94 0000 		call lcd_spi_command
 140:biCycles.c    **** 	LCD_page(page);
 385               	.LM46:
 386 00c8 802F      		mov r24,r16
 387 00ca 8055      		subi r24,lo8(-(-80))
 388 00cc 0E94 0000 		call lcd_spi_command
 141:biCycles.c    **** 	lcd_spi_data(data);
 390               	.LM47:
 391 00d0 8F2D      		mov r24,r15
 392 00d2 0E94 0000 		call lcd_spi_data
 393               	/* epilogue start */
 142:biCycles.c    **** }
 395               	.LM48:
 396 00d6 1F91      		pop r17
 397 00d8 0F91      		pop r16
 398 00da FF90      		pop r15
 399 00dc 0895      		ret
 401               	.Lscope5:
 403               		.stabd	78,0,0
 406               	.global	lcd_col
 408               	lcd_col:
 409               		.stabd	46,0,0
 143:biCycles.c    **** 
 144:biCycles.c    **** void lcd_col(unsigned char col)
 145:biCycles.c    **** {
 411               	.LM49:
 412               	.LFBB6:
 413 00de 1F93      		push r17
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416 00e0 182F      		mov r17,r24
 146:biCycles.c    **** 	lcd_spi_command(0x10 + ((col&0xf0)>>4));
 418               	.LM50:
 419 00e2 8295      		swap r24
 420 00e4 8F70      		andi r24,lo8(15)
 421 00e6 805F      		subi r24,lo8(-(16))
 422 00e8 0E94 0000 		call lcd_spi_command
 147:biCycles.c    **** 	lcd_spi_command(col&0x0f);
 424               	.LM51:
 425 00ec 812F      		mov r24,r17
 426 00ee 8F70      		andi r24,lo8(15)
 427 00f0 0E94 0000 		call lcd_spi_command
 428               	/* epilogue start */
 148:biCycles.c    **** }
 430               	.LM52:
 431 00f4 1F91      		pop r17
 432 00f6 0895      		ret
 434               	.Lscope6:
 436               		.stabd	78,0,0
 438               	.global	lcd_clear
 440               	lcd_clear:
 441               		.stabd	46,0,0
 149:biCycles.c    **** 
 150:biCycles.c    **** void lcd_clear(void)
 151:biCycles.c    **** {
 443               	.LM53:
 444               	.LFBB7:
 445 00f8 0F93      		push r16
 446 00fa 1F93      		push r17
 447               	/* prologue: function */
 448               	/* frame size = 0 */
 450               	.LM54:
 451 00fc 00E0      		ldi r16,lo8(0)
 452 00fe 00C0      		rjmp .L20
 453               	.L21:
 454               	.LBB37:
 455               	.LBB38:
 152:biCycles.c    **** 	for (char x=0;x<8;x++)
 153:biCycles.c    **** 	{
 154:biCycles.c    **** 		for (char y=0;y<103;y++)
 155:biCycles.c    **** 		{
 156:biCycles.c    **** 			lcd_draw(x,y,0x00);
 457               	.LM55:
 458 0100 802F      		mov r24,r16
 459 0102 612F      		mov r22,r17
 460 0104 40E0      		ldi r20,lo8(0)
 461 0106 0E94 0000 		call lcd_draw
 154:biCycles.c    **** 		for (char y=0;y<103;y++)
 463               	.LM56:
 464 010a 1F5F      		subi r17,lo8(-(1))
 465 010c 1736      		cpi r17,lo8(103)
 466 010e 01F4      		brne .L21
 467               	.LBE38:
 152:biCycles.c    **** 	for (char x=0;x<8;x++)
 469               	.LM57:
 470 0110 0F5F      		subi r16,lo8(-(1))
 471 0112 0830      		cpi r16,lo8(8)
 472 0114 01F0      		breq .L23
 473               	.L20:
 474 0116 10E0      		ldi r17,lo8(0)
 475 0118 00C0      		rjmp .L21
 476               	.L23:
 477               	/* epilogue start */
 478               	.LBE37:
 157:biCycles.c    **** 		}
 158:biCycles.c    **** 	}
 159:biCycles.c    **** }
 480               	.LM58:
 481 011a 1F91      		pop r17
 482 011c 0F91      		pop r16
 483 011e 0895      		ret
 485               	.Lscope7:
 487               		.stabd	78,0,0
 489               	.global	lcd_draw_menu
 491               	lcd_draw_menu:
 492               		.stabd	46,0,0
 160:biCycles.c    **** void lcd_draw_menu(void)
 161:biCycles.c    **** {
 494               	.LM59:
 495               	.LFBB8:
 496 0120 EF92      		push r14
 497 0122 FF92      		push r15
 498 0124 0F93      		push r16
 499 0126 1F93      		push r17
 500 0128 CF93      		push r28
 501 012a DF93      		push r29
 502               	/* prologue: function */
 503               	/* frame size = 0 */
 162:biCycles.c    **** 	LCD_page(0);
 505               	.LM60:
 506 012c 80EB      		ldi r24,lo8(-80)
 507 012e 0E94 0000 		call lcd_spi_command
 163:biCycles.c    **** 	char mode0 = (mode==0)*0x7f;
 509               	.LM61:
 510 0132 8091 0000 		lds r24,mode
 511 0136 8823      		tst r24
 512 0138 01F0      		breq .L26
 513 013a 00E0      		ldi r16,lo8(0)
 514 013c 00C0      		rjmp .L27
 515               	.L26:
 516 013e 0FE7      		ldi r16,lo8(127)
 517               	.L27:
 164:biCycles.c    **** 	char mode1 = (mode==1)*0x7f;
 519               	.LM62:
 520 0140 8091 0000 		lds r24,mode
 521 0144 8130      		cpi r24,lo8(1)
 522 0146 01F0      		breq .L28
 523 0148 FF24      		clr r15
 524 014a 00C0      		rjmp .L29
 525               	.L28:
 526 014c 9FE7      		ldi r25,lo8(127)
 527 014e F92E      		mov r15,r25
 528               	.L29:
 165:biCycles.c    **** 	char mode2 = (mode==2)*0x7f;
 530               	.LM63:
 531 0150 8091 0000 		lds r24,mode
 532 0154 8230      		cpi r24,lo8(2)
 533 0156 01F0      		breq .L30
 534 0158 EE24      		clr r14
 535 015a 00C0      		rjmp .L31
 536               	.L30:
 537 015c 8FE7      		ldi r24,lo8(127)
 538 015e E82E      		mov r14,r24
 539               	.L31:
 540 0160 C0E0      		ldi r28,lo8(menu)
 541 0162 D0E0      		ldi r29,hi8(menu)
 542 0164 10E0      		ldi r17,lo8(0)
 543               	.L32:
 544               	.LBB39:
 166:biCycles.c    **** 	for (int x=0;x<31;x++)
 167:biCycles.c    **** 	{
 168:biCycles.c    **** 		lcd_col(x);
 546               	.LM64:
 547 0166 812F      		mov r24,r17
 548 0168 0E94 0000 		call lcd_col
 549               	.LBB40:
 169:biCycles.c    **** 		lcd_spi_data(mode0^MEM_read(menu[x]));
 551               	.LM65:
 552 016c FE01      		movw r30,r28
 553               	/* #APP */
 554               	 ;  169 "biCycles.c" 1
 555 016e 8491      		lpm r24, Z
 556               		
 557               	 ;  0 "" 2
 558               	/* #NOAPP */
 559               	.LBE40:
 560 0170 8027      		eor r24,r16
 561 0172 0E94 0000 		call lcd_spi_data
 562 0176 1F5F      		subi r17,lo8(-(1))
 563 0178 2196      		adiw r28,1
 166:biCycles.c    **** 	for (int x=0;x<31;x++)
 565               	.LM66:
 566 017a 1F31      		cpi r17,lo8(31)
 567 017c 01F4      		brne .L32
 568 017e CFE1      		ldi r28,lo8(31)
 569 0180 D0E0      		ldi r29,hi8(31)
 570               	.L33:
 571               	.LBE39:
 572               	.LBB41:
 170:biCycles.c    **** 	}
 171:biCycles.c    **** 	for (int x=31;x<59;x++)
 172:biCycles.c    **** 	{
 173:biCycles.c    **** 		lcd_col(x);
 574               	.LM67:
 575 0182 8C2F      		mov r24,r28
 576 0184 0E94 0000 		call lcd_col
 577               	.LBB42:
 174:biCycles.c    **** 		lcd_spi_data(mode1^MEM_read(menu[x]));
 579               	.LM68:
 580 0188 FE01      		movw r30,r28
 581 018a E050      		subi r30,lo8(-(menu))
 582 018c F040      		sbci r31,hi8(-(menu))
 583               	/* #APP */
 584               	 ;  174 "biCycles.c" 1
 585 018e E491      		lpm r30, Z
 586               		
 587               	 ;  0 "" 2
 588               	/* #NOAPP */
 589               	.LBE42:
 590 0190 8E2F      		mov r24,r30
 591 0192 8F25      		eor r24,r15
 592 0194 0E94 0000 		call lcd_spi_data
 171:biCycles.c    **** 	for (int x=31;x<59;x++)
 594               	.LM69:
 595 0198 2196      		adiw r28,1
 596 019a CB33      		cpi r28,59
 597 019c D105      		cpc r29,__zero_reg__
 598 019e 01F4      		brne .L33
 599 01a0 CBE3      		ldi r28,lo8(59)
 600 01a2 D0E0      		ldi r29,hi8(59)
 601               	.L34:
 602               	.LBE41:
 603               	.LBB43:
 175:biCycles.c    **** 	}
 176:biCycles.c    **** 	for (int x=59;x<91;x++)
 177:biCycles.c    **** 	{
 178:biCycles.c    **** 		lcd_col(x);
 605               	.LM70:
 606 01a4 8C2F      		mov r24,r28
 607 01a6 0E94 0000 		call lcd_col
 608               	.LBB44:
 179:biCycles.c    **** 		lcd_spi_data(mode2^MEM_read(menu[x]));
 610               	.LM71:
 611 01aa FE01      		movw r30,r28
 612 01ac E050      		subi r30,lo8(-(menu))
 613 01ae F040      		sbci r31,hi8(-(menu))
 614               	/* #APP */
 615               	 ;  179 "biCycles.c" 1
 616 01b0 E491      		lpm r30, Z
 617               		
 618               	 ;  0 "" 2
 619               	/* #NOAPP */
 620               	.LBE44:
 621 01b2 8E2F      		mov r24,r30
 622 01b4 8E25      		eor r24,r14
 623 01b6 0E94 0000 		call lcd_spi_data
 176:biCycles.c    **** 	for (int x=59;x<91;x++)
 625               	.LM72:
 626 01ba 2196      		adiw r28,1
 627 01bc CB35      		cpi r28,91
 628 01be D105      		cpc r29,__zero_reg__
 629 01c0 01F4      		brne .L34
 630               	/* epilogue start */
 631               	.LBE43:
 180:biCycles.c    **** 	}
 181:biCycles.c    **** }
 633               	.LM73:
 634 01c2 DF91      		pop r29
 635 01c4 CF91      		pop r28
 636 01c6 1F91      		pop r17
 637 01c8 0F91      		pop r16
 638 01ca FF90      		pop r15
 639 01cc EF90      		pop r14
 640 01ce 0895      		ret
 662               	.Lscope8:
 664               		.stabd	78,0,0
 666               	.global	__vector_5
 668               	__vector_5:
 669               		.stabd	46,0,0
  48:biCycles.c    **** {
 671               	.LM74:
 672               	.LFBB9:
 673 01d0 1F92      		push __zero_reg__
 674 01d2 0F92      		push r0
 675 01d4 0FB6      		in r0,__SREG__
 676 01d6 0F92      		push r0
 677 01d8 1124      		clr __zero_reg__
 678 01da 2F93      		push r18
 679 01dc 3F93      		push r19
 680 01de 4F93      		push r20
 681 01e0 5F93      		push r21
 682 01e2 6F93      		push r22
 683 01e4 7F93      		push r23
 684 01e6 8F93      		push r24
 685 01e8 9F93      		push r25
 686 01ea AF93      		push r26
 687 01ec BF93      		push r27
 688 01ee EF93      		push r30
 689 01f0 FF93      		push r31
 690               	/* prologue: Signal */
 691               	/* frame size = 0 */
  49:biCycles.c    **** 	if(PIND==0x00)
 693               	.LM75:
 694 01f2 89B1      		in r24,41-32
 695 01f4 8823      		tst r24
 696 01f6 01F4      		brne .L41
  51:biCycles.c    **** 		mode=(mode+1)%3;
 698               	.LM76:
 699 01f8 8091 0000 		lds r24,mode
 700 01fc 90E0      		ldi r25,lo8(0)
 701 01fe 0196      		adiw r24,1
 702 0200 63E0      		ldi r22,lo8(3)
 703 0202 70E0      		ldi r23,hi8(3)
 704 0204 0E94 0000 		call __divmodhi4
 705 0208 8093 0000 		sts mode,r24
  52:biCycles.c    **** 		lcd_draw_menu();
 707               	.LM77:
 708 020c 0E94 0000 		call lcd_draw_menu
 709               	.L41:
 710               	/* epilogue start */
  54:biCycles.c    **** }
 712               	.LM78:
 713 0210 FF91      		pop r31
 714 0212 EF91      		pop r30
 715 0214 BF91      		pop r27
 716 0216 AF91      		pop r26
 717 0218 9F91      		pop r25
 718 021a 8F91      		pop r24
 719 021c 7F91      		pop r23
 720 021e 6F91      		pop r22
 721 0220 5F91      		pop r21
 722 0222 4F91      		pop r20
 723 0224 3F91      		pop r19
 724 0226 2F91      		pop r18
 725 0228 0F90      		pop r0
 726 022a 0FBE      		out __SREG__,r0
 727 022c 0F90      		pop r0
 728 022e 1F90      		pop __zero_reg__
 729 0230 1895      		reti
 731               	.Lscope9:
 733               		.stabd	78,0,0
 737               	.global	lcd_draw_bignum
 739               	lcd_draw_bignum:
 740               		.stabd	46,0,0
 182:biCycles.c    **** 
 183:biCycles.c    **** void lcd_draw_bignum(unsigned char digit, unsigned char num)
 184:biCycles.c    **** {
 742               	.LM79:
 743               	.LFBB10:
 744 0232 CF92      		push r12
 745 0234 DF92      		push r13
 746 0236 EF92      		push r14
 747 0238 FF92      		push r15
 748 023a 0F93      		push r16
 749 023c 1F93      		push r17
 750 023e CF93      		push r28
 751 0240 DF93      		push r29
 752               	/* prologue: function */
 753               	/* frame size = 0 */
 754               	.LBB45:
 755               	.LBB46:
 185:biCycles.c    **** 	for (int y=2; y<8;y++)
 186:biCycles.c    **** 	{
 187:biCycles.c    **** 		LCD_page(y);
 188:biCycles.c    **** 		for (int x=0; x<32; x++)
 189:biCycles.c    **** 		{
 190:biCycles.c    **** 			lcd_col(x+digit*32);
 757               	.LM80:
 758 0242 C82E      		mov r12,r24
 759 0244 C294      		swap r12
 760 0246 CC0C      		lsl r12
 761 0248 40EE      		ldi r20,lo8(-32)
 762 024a C422      		and r12,r20
 763 024c 83E0      		ldi r24,lo8(3)
 764 024e 689F      		mul r22,r24
 765 0250 E001      		movw r28,r0
 766 0252 1124      		clr r1
 767 0254 36E0      		ldi r19,6
 768 0256 CC0F      	1:	lsl r28
 769 0258 DD1F      		rol r29
 770 025a 3A95      		dec r19
 771 025c 01F4      		brne 1b
 772 025e C050      		subi r28,lo8(-(big_one))
 773 0260 D040      		sbci r29,hi8(-(big_one))
 774 0262 22EB      		ldi r18,lo8(-78)
 775 0264 D22E      		mov r13,r18
 776               	.L44:
 777               	.LBE46:
 187:biCycles.c    **** 		LCD_page(y);
 779               	.LM81:
 780 0266 8D2D      		mov r24,r13
 781 0268 0E94 0000 		call lcd_spi_command
 782 026c 7E01      		movw r14,r28
 783 026e 00E0      		ldi r16,lo8(0)
 784 0270 10E0      		ldi r17,hi8(0)
 785               	.L43:
 786               	.LBB48:
 788               	.LM82:
 789 0272 8C2D      		mov r24,r12
 790 0274 800F      		add r24,r16
 791 0276 0E94 0000 		call lcd_col
 792               	.LBB47:
 191:biCycles.c    **** 			lcd_spi_data(MEM_read(big_one[num][y-2][x]));
 794               	.LM83:
 795 027a F701      		movw r30,r14
 796               	/* #APP */
 797               	 ;  191 "biCycles.c" 1
 798 027c 8491      		lpm r24, Z
 799               		
 800               	 ;  0 "" 2
 801               	/* #NOAPP */
 802               	.LBE47:
 803 027e 0E94 0000 		call lcd_spi_data
 188:biCycles.c    **** 		for (int x=0; x<32; x++)
 805               	.LM84:
 806 0282 0F5F      		subi r16,lo8(-(1))
 807 0284 1F4F      		sbci r17,hi8(-(1))
 808 0286 0894      		sec
 809 0288 E11C      		adc r14,__zero_reg__
 810 028a F11C      		adc r15,__zero_reg__
 811 028c 0032      		cpi r16,32
 812 028e 1105      		cpc r17,__zero_reg__
 813 0290 01F4      		brne .L43
 814 0292 D394      		inc r13
 815 0294 A096      		adiw r28,32
 816               	.LBE48:
 185:biCycles.c    **** 	for (int y=2; y<8;y++)
 818               	.LM85:
 819 0296 F8EB      		ldi r31,lo8(-72)
 820 0298 DF16      		cp r13,r31
 821 029a 01F4      		brne .L44
 822               	/* epilogue start */
 823               	.LBE45:
 192:biCycles.c    **** 		}
 193:biCycles.c    **** 	}
 194:biCycles.c    **** }
 825               	.LM86:
 826 029c DF91      		pop r29
 827 029e CF91      		pop r28
 828 02a0 1F91      		pop r17
 829 02a2 0F91      		pop r16
 830 02a4 FF90      		pop r15
 831 02a6 EF90      		pop r14
 832 02a8 DF90      		pop r13
 833 02aa CF90      		pop r12
 834 02ac 0895      		ret
 836               	.Lscope10:
 838               		.stabd	78,0,0
 842               	.global	lcd_draw_lilnum
 844               	lcd_draw_lilnum:
 845               		.stabd	46,0,0
 195:biCycles.c    **** 
 196:biCycles.c    **** void lcd_draw_lilnum(unsigned char digit, unsigned char num)
 197:biCycles.c    **** {
 847               	.LM87:
 848               	.LFBB11:
 849 02ae CF92      		push r12
 850 02b0 DF92      		push r13
 851 02b2 EF92      		push r14
 852 02b4 FF92      		push r15
 853 02b6 0F93      		push r16
 854 02b8 1F93      		push r17
 855 02ba CF93      		push r28
 856 02bc DF93      		push r29
 857               	/* prologue: function */
 858               	/* frame size = 0 */
 859               	.LBB49:
 860               	.LBB50:
 198:biCycles.c    **** 	for (int y=5; y<8; y++)
 199:biCycles.c    **** 	{
 200:biCycles.c    **** 		LCD_page(y);
 201:biCycles.c    **** 		for (int x=0; x<16; x++)
 202:biCycles.c    **** 		{
 203:biCycles.c    **** 			lcd_col(x+digit*16+64);
 862               	.LM88:
 863 02be 8295      		swap r24
 864 02c0 807F      		andi r24,lo8(-16)
 865 02c2 E0E4      		ldi r30,lo8(64)
 866 02c4 CE2E      		mov r12,r30
 867 02c6 C80E      		add r12,r24
 868 02c8 93E0      		ldi r25,lo8(3)
 869 02ca 699F      		mul r22,r25
 870 02cc E001      		movw r28,r0
 871 02ce 1124      		clr r1
 872 02d0 74E0      		ldi r23,4
 873 02d2 CC0F      	1:	lsl r28
 874 02d4 DD1F      		rol r29
 875 02d6 7A95      		dec r23
 876 02d8 01F4      		brne 1b
 877 02da C050      		subi r28,lo8(-(lil_one))
 878 02dc D040      		sbci r29,hi8(-(lil_one))
 879 02de 65EB      		ldi r22,lo8(-75)
 880 02e0 E62E      		mov r14,r22
 201:biCycles.c    **** 		for (int x=0; x<16; x++)
 882               	.LM89:
 883 02e2 50E5      		ldi r21,lo8(80)
 884 02e4 D52E      		mov r13,r21
 885 02e6 D80E      		add r13,r24
 886               	.L50:
 887               	.LBE50:
 200:biCycles.c    **** 		LCD_page(y);
 889               	.LM90:
 890 02e8 8E2D      		mov r24,r14
 891 02ea 0E94 0000 		call lcd_spi_command
 892 02ee FC2C      		mov r15,r12
 893 02f0 8E01      		movw r16,r28
 894               	.L49:
 895               	.LBB52:
 897               	.LM91:
 898 02f2 8F2D      		mov r24,r15
 899 02f4 0E94 0000 		call lcd_col
 900               	.LBB51:
 204:biCycles.c    **** 			lcd_spi_data(MEM_read(lil_one[num][y-5][x]));
 902               	.LM92:
 903 02f8 F801      		movw r30,r16
 904               	/* #APP */
 905               	 ;  204 "biCycles.c" 1
 906 02fa 8491      		lpm r24, Z
 907               		
 908               	 ;  0 "" 2
 909               	/* #NOAPP */
 910               	.LBE51:
 911 02fc 0E94 0000 		call lcd_spi_data
 912 0300 F394      		inc r15
 913 0302 0F5F      		subi r16,lo8(-(1))
 914 0304 1F4F      		sbci r17,hi8(-(1))
 201:biCycles.c    **** 		for (int x=0; x<16; x++)
 916               	.LM93:
 917 0306 FD14      		cp r15,r13
 918 0308 01F4      		brne .L49
 919 030a E394      		inc r14
 920 030c 6096      		adiw r28,16
 921               	.LBE52:
 198:biCycles.c    **** 	for (int y=5; y<8; y++)
 923               	.LM94:
 924 030e F8EB      		ldi r31,lo8(-72)
 925 0310 EF16      		cp r14,r31
 926 0312 01F4      		brne .L50
 927               	/* epilogue start */
 928               	.LBE49:
 205:biCycles.c    **** 		}
 206:biCycles.c    **** 	}
 207:biCycles.c    **** }
 930               	.LM95:
 931 0314 DF91      		pop r29
 932 0316 CF91      		pop r28
 933 0318 1F91      		pop r17
 934 031a 0F91      		pop r16
 935 031c FF90      		pop r15
 936 031e EF90      		pop r14
 937 0320 DF90      		pop r13
 938 0322 CF90      		pop r12
 939 0324 0895      		ret
 941               	.Lscope11:
 943               		.stabd	78,0,0
 945               	.global	main
 947               	main:
 948               		.stabd	46,0,0
  57:biCycles.c    **** {
 950               	.LM96:
 951               	.LFBB12:
 952 0326 0F93      		push r16
 953 0328 1F93      		push r17
 954 032a CF93      		push r28
 955 032c DF93      		push r29
 956               	/* prologue: function */
 957               	/* frame size = 0 */
  58:biCycles.c    **** 	DDRD &= ~0x01;
 959               	.LM97:
 960 032e 5098      		cbi 42-32,0
  59:biCycles.c    **** 	PORTD |= 0x01;
 962               	.LM98:
 963 0330 589A      		sbi 43-32,0
  60:biCycles.c    **** 	DDRB = 0xFF;
 965               	.LM99:
 966 0332 8FEF      		ldi r24,lo8(-1)
 967 0334 84B9      		out 36-32,r24
  61:biCycles.c    **** 	PCICR = (1<<2);
 969               	.LM100:
 970 0336 84E0      		ldi r24,lo8(4)
 971 0338 8093 6800 		sts 104,r24
  62:biCycles.c    **** 	PCMSK2 = 0x01;
 973               	.LM101:
 974 033c 81E0      		ldi r24,lo8(1)
 975 033e 8093 6D00 		sts 109,r24
  63:biCycles.c    **** 	lcd_init();
 977               	.LM102:
 978 0342 0E94 0000 		call lcd_init
  64:biCycles.c    **** 	lcd_clear();
 980               	.LM103:
 981 0346 0E94 0000 		call lcd_clear
  65:biCycles.c    **** 	lcd_draw_menu();
 983               	.LM104:
 984 034a 0E94 0000 		call lcd_draw_menu
  66:biCycles.c    **** 	sei();
 986               	.LM105:
 987               	/* #APP */
 988               	 ;  66 "biCycles.c" 1
 989 034e 7894      		sei
 990               	 ;  0 "" 2
 991               	/* #NOAPP */
 992 0350 C0E0      		ldi r28,lo8(0)
 993 0352 D0E0      		ldi r29,hi8(0)
 994               	.LBB53:
 995               	.LBB54:
 996               	.LBB55:
 997               	.LBB56:
 998               	.LBB57:
 1000               	.Ltext6:
 1002               	.LM106:
 1003 0354 08EC      		ldi r16,lo8(200)
 1004 0356 10E0      		ldi r17,hi8(200)
 1005               	.L61:
 1006               	.LBE57:
 1007               	.LBE56:
 1008               	.LBE55:
 1009               	.LBE54:
 1011               	.Ltext7:
  71:biCycles.c    **** 			lcd_draw_bignum(0,1);
 1013               	.LM107:
 1014 0358 80E0      		ldi r24,lo8(0)
 1015 035a 61E0      		ldi r22,lo8(1)
 1016 035c 0E94 0000 		call lcd_draw_bignum
  72:biCycles.c    **** 			lcd_draw_bignum(1,2);
 1018               	.LM108:
 1019 0360 81E0      		ldi r24,lo8(1)
 1020 0362 62E0      		ldi r22,lo8(2)
 1021 0364 0E94 0000 		call lcd_draw_bignum
  73:biCycles.c    **** 			lcd_draw_lilnum(0,3);
 1023               	.LM109:
 1024 0368 80E0      		ldi r24,lo8(0)
 1025 036a 63E0      		ldi r22,lo8(3)
 1026 036c 0E94 0000 		call lcd_draw_lilnum
  74:biCycles.c    **** 			lcd_draw_menu();
 1028               	.LM110:
 1029 0370 0E94 0000 		call lcd_draw_menu
 1030 0374 88E8      		ldi r24,lo8(5000)
 1031 0376 93E1      		ldi r25,hi8(5000)
 1032               	.L55:
 1033               	.LBB61:
 1034               	.LBB60:
 1035               	.LBB59:
 1036               	.LBB58:
 1038               	.Ltext8:
 1040               	.LM111:
 1041 0378 F801      		movw r30,r16
 1042               	/* #APP */
 1043               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 1044 037a 3197      		1: sbiw r30,1
 1045 037c 01F4      		brne 1b
 1046               	 ;  0 "" 2
 1047               	/* #NOAPP */
 1048               	.LBE58:
 1049               	.LBE59:
 1051               	.Ltext9:
 1053               	.LM112:
 1054 037e 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 1056               	.LM113:
 1057 0380 01F4      		brne .L55
 1058               	.LBE60:
 1059               	.LBE61:
 1061               	.Ltext10:
  69:biCycles.c    **** 		for (int x=0;x<0xff;x++)
 1063               	.LM114:
 1064 0382 2196      		adiw r28,1
 1065 0384 CF3F      		cpi r28,255
 1066 0386 D105      		cpc r29,__zero_reg__
 1067 0388 04F0      		brlt .L61
 1068 038a C0E0      		ldi r28,lo8(0)
 1069 038c D0E0      		ldi r29,hi8(0)
 1070 038e 00C0      		rjmp .L61
 1071               	.LBE53:
 1088               	.Lscope12:
 1090               		.stabd	78,0,0
 1091               	.global	big_one
 1092               		.section	.progmem.data,"a",@progbits
 1095               	big_one:
 1096 0000 00        		.byte	0
 1097 0001 00        		.byte	0
 1098 0002 00        		.byte	0
 1099 0003 00        		.byte	0
 1100 0004 00        		.byte	0
 1101 0005 00        		.byte	0
 1102 0006 00        		.byte	0
 1103 0007 80        		.byte	-128
 1104 0008 C0        		.byte	-64
 1105 0009 E0        		.byte	-32
 1106 000a E0        		.byte	-32
 1107 000b F0        		.byte	-16
 1108 000c F0        		.byte	-16
 1109 000d F0        		.byte	-16
 1110 000e F0        		.byte	-16
 1111 000f F0        		.byte	-16
 1112 0010 F0        		.byte	-16
 1113 0011 F0        		.byte	-16
 1114 0012 F0        		.byte	-16
 1115 0013 F0        		.byte	-16
 1116 0014 F0        		.byte	-16
 1117 0015 E0        		.byte	-32
 1118 0016 E0        		.byte	-32
 1119 0017 C0        		.byte	-64
 1120 0018 80        		.byte	-128
 1121 0019 00        		.byte	0
 1122 001a 00        		.byte	0
 1123 001b 00        		.byte	0
 1124 001c 00        		.byte	0
 1125 001d 00        		.byte	0
 1126 001e 00        		.byte	0
 1127 001f 00        		.byte	0
 1128 0020 00        		.byte	0
 1129 0021 00        		.byte	0
 1130 0022 00        		.byte	0
 1131 0023 80        		.byte	-128
 1132 0024 F0        		.byte	-16
 1133 0025 FC        		.byte	-4
 1134 0026 FF        		.byte	-1
 1135 0027 FF        		.byte	-1
 1136 0028 FF        		.byte	-1
 1137 0029 1F        		.byte	31
 1138 002a 07        		.byte	7
 1139 002b 03        		.byte	3
 1140 002c 01        		.byte	1
 1141 002d 00        		.byte	0
 1142 002e 00        		.byte	0
 1143 002f 00        		.byte	0
 1144 0030 00        		.byte	0
 1145 0031 00        		.byte	0
 1146 0032 00        		.byte	0
 1147 0033 01        		.byte	1
 1148 0034 01        		.byte	1
 1149 0035 03        		.byte	3
 1150 0036 0F        		.byte	15
 1151 0037 3F        		.byte	63
 1152 0038 FF        		.byte	-1
 1153 0039 FF        		.byte	-1
 1154 003a FE        		.byte	-2
 1155 003b F8        		.byte	-8
 1156 003c E0        		.byte	-32
 1157 003d 00        		.byte	0
 1158 003e 00        		.byte	0
 1159 003f 00        		.byte	0
 1160 0040 00        		.byte	0
 1161 0041 00        		.byte	0
 1162 0042 C0        		.byte	-64
 1163 0043 FF        		.byte	-1
 1164 0044 FF        		.byte	-1
 1165 0045 FF        		.byte	-1
 1166 0046 FF        		.byte	-1
 1167 0047 FF        		.byte	-1
 1168 0048 00        		.byte	0
 1169 0049 00        		.byte	0
 1170 004a 00        		.byte	0
 1171 004b 00        		.byte	0
 1172 004c 00        		.byte	0
 1173 004d 00        		.byte	0
 1174 004e 00        		.byte	0
 1175 004f 00        		.byte	0
 1176 0050 00        		.byte	0
 1177 0051 00        		.byte	0
 1178 0052 00        		.byte	0
 1179 0053 00        		.byte	0
 1180 0054 00        		.byte	0
 1181 0055 00        		.byte	0
 1182 0056 00        		.byte	0
 1183 0057 00        		.byte	0
 1184 0058 1F        		.byte	31
 1185 0059 FF        		.byte	-1
 1186 005a FF        		.byte	-1
 1187 005b FF        		.byte	-1
 1188 005c FF        		.byte	-1
 1189 005d FC        		.byte	-4
 1190 005e 00        		.byte	0
 1191 005f 00        		.byte	0
 1192 0060 00        		.byte	0
 1193 0061 00        		.byte	0
 1194 0062 0F        		.byte	15
 1195 0063 FF        		.byte	-1
 1196 0064 FF        		.byte	-1
 1197 0065 FF        		.byte	-1
 1198 0066 FF        		.byte	-1
 1199 0067 FF        		.byte	-1
 1200 0068 00        		.byte	0
 1201 0069 00        		.byte	0
 1202 006a 00        		.byte	0
 1203 006b 00        		.byte	0
 1204 006c 00        		.byte	0
 1205 006d 00        		.byte	0
 1206 006e 00        		.byte	0
 1207 006f 00        		.byte	0
 1208 0070 00        		.byte	0
 1209 0071 00        		.byte	0
 1210 0072 00        		.byte	0
 1211 0073 00        		.byte	0
 1212 0074 00        		.byte	0
 1213 0075 00        		.byte	0
 1214 0076 00        		.byte	0
 1215 0077 00        		.byte	0
 1216 0078 C0        		.byte	-64
 1217 0079 FF        		.byte	-1
 1218 007a FF        		.byte	-1
 1219 007b FF        		.byte	-1
 1220 007c FF        		.byte	-1
 1221 007d FF        		.byte	-1
 1222 007e 00        		.byte	0
 1223 007f 00        		.byte	0
 1224 0080 00        		.byte	0
 1225 0081 00        		.byte	0
 1226 0082 00        		.byte	0
 1227 0083 07        		.byte	7
 1228 0084 7F        		.byte	127
 1229 0085 FF        		.byte	-1
 1230 0086 FF        		.byte	-1
 1231 0087 FF        		.byte	-1
 1232 0088 F8        		.byte	-8
 1233 0089 C0        		.byte	-64
 1234 008a 80        		.byte	-128
 1235 008b 00        		.byte	0
 1236 008c 00        		.byte	0
 1237 008d 00        		.byte	0
 1238 008e 00        		.byte	0
 1239 008f 00        		.byte	0
 1240 0090 00        		.byte	0
 1241 0091 00        		.byte	0
 1242 0092 00        		.byte	0
 1243 0093 00        		.byte	0
 1244 0094 00        		.byte	0
 1245 0095 00        		.byte	0
 1246 0096 80        		.byte	-128
 1247 0097 F0        		.byte	-16
 1248 0098 FF        		.byte	-1
 1249 0099 FF        		.byte	-1
 1250 009a FF        		.byte	-1
 1251 009b FF        		.byte	-1
 1252 009c 1F        		.byte	31
 1253 009d 01        		.byte	1
 1254 009e 00        		.byte	0
 1255 009f 00        		.byte	0
 1256 00a0 00        		.byte	0
 1257 00a1 00        		.byte	0
 1258 00a2 00        		.byte	0
 1259 00a3 00        		.byte	0
 1260 00a4 00        		.byte	0
 1261 00a5 01        		.byte	1
 1262 00a6 03        		.byte	3
 1263 00a7 07        		.byte	7
 1264 00a8 0F        		.byte	15
 1265 00a9 1F        		.byte	31
 1266 00aa 3F        		.byte	63
 1267 00ab 3E        		.byte	62
 1268 00ac 3E        		.byte	62
 1269 00ad 3C        		.byte	60
 1270 00ae 7C        		.byte	124
 1271 00af 7C        		.byte	124
 1272 00b0 7C        		.byte	124
 1273 00b1 7C        		.byte	124
 1274 00b2 7C        		.byte	124
 1275 00b3 3C        		.byte	60
 1276 00b4 3E        		.byte	62
 1277 00b5 3F        		.byte	63
 1278 00b6 1F        		.byte	31
 1279 00b7 1F        		.byte	31
 1280 00b8 0F        		.byte	15
 1281 00b9 07        		.byte	7
 1282 00ba 01        		.byte	1
 1283 00bb 00        		.byte	0
 1284 00bc 00        		.byte	0
 1285 00bd 00        		.byte	0
 1286 00be 00        		.byte	0
 1287 00bf 00        		.byte	0
 1288 00c0 00        		.byte	0
 1289 00c1 00        		.byte	0
 1290 00c2 00        		.byte	0
 1291 00c3 00        		.byte	0
 1292 00c4 00        		.byte	0
 1293 00c5 00        		.byte	0
 1294 00c6 00        		.byte	0
 1295 00c7 00        		.byte	0
 1296 00c8 00        		.byte	0
 1297 00c9 00        		.byte	0
 1298 00ca 00        		.byte	0
 1299 00cb 00        		.byte	0
 1300 00cc 00        		.byte	0
 1301 00cd 00        		.byte	0
 1302 00ce 00        		.byte	0
 1303 00cf 00        		.byte	0
 1304 00d0 80        		.byte	-128
 1305 00d1 E0        		.byte	-32
 1306 00d2 F0        		.byte	-16
 1307 00d3 F0        		.byte	-16
 1308 00d4 F0        		.byte	-16
 1309 00d5 F0        		.byte	-16
 1310 00d6 00        		.byte	0
 1311 00d7 00        		.byte	0
 1312 00d8 00        		.byte	0
 1313 00d9 00        		.byte	0
 1314 00da 00        		.byte	0
 1315 00db 00        		.byte	0
 1316 00dc 00        		.byte	0
 1317 00dd 00        		.byte	0
 1318 00de 00        		.byte	0
 1319 00df 00        		.byte	0
 1320 00e0 00        		.byte	0
 1321 00e1 00        		.byte	0
 1322 00e2 00        		.byte	0
 1323 00e3 00        		.byte	0
 1324 00e4 00        		.byte	0
 1325 00e5 00        		.byte	0
 1326 00e6 C0        		.byte	-64
 1327 00e7 C0        		.byte	-64
 1328 00e8 E0        		.byte	-32
 1329 00e9 E0        		.byte	-32
 1330 00ea F0        		.byte	-16
 1331 00eb F8        		.byte	-8
 1332 00ec F8        		.byte	-8
 1333 00ed FC        		.byte	-4
 1334 00ee 7E        		.byte	126
 1335 00ef 3F        		.byte	63
 1336 00f0 1F        		.byte	31
 1337 00f1 FF        		.byte	-1
 1338 00f2 FF        		.byte	-1
 1339 00f3 FF        		.byte	-1
 1340 00f4 FF        		.byte	-1
 1341 00f5 FF        		.byte	-1
 1342 00f6 00        		.byte	0
 1343 00f7 00        		.byte	0
 1344 00f8 00        		.byte	0
 1345 00f9 00        		.byte	0
 1346 00fa 00        		.byte	0
 1347 00fb 00        		.byte	0
 1348 00fc 00        		.byte	0
 1349 00fd 00        		.byte	0
 1350 00fe 00        		.byte	0
 1351 00ff 00        		.byte	0
 1352 0100 00        		.byte	0
 1353 0101 00        		.byte	0
 1354 0102 00        		.byte	0
 1355 0103 00        		.byte	0
 1356 0104 00        		.byte	0
 1357 0105 00        		.byte	0
 1358 0106 07        		.byte	7
 1359 0107 07        		.byte	7
 1360 0108 03        		.byte	3
 1361 0109 03        		.byte	3
 1362 010a 01        		.byte	1
 1363 010b 01        		.byte	1
 1364 010c 00        		.byte	0
 1365 010d 00        		.byte	0
 1366 010e 00        		.byte	0
 1367 010f 00        		.byte	0
 1368 0110 00        		.byte	0
 1369 0111 FF        		.byte	-1
 1370 0112 FF        		.byte	-1
 1371 0113 FF        		.byte	-1
 1372 0114 FF        		.byte	-1
 1373 0115 FF        		.byte	-1
 1374 0116 00        		.byte	0
 1375 0117 00        		.byte	0
 1376 0118 00        		.byte	0
 1377 0119 00        		.byte	0
 1378 011a 00        		.byte	0
 1379 011b 00        		.byte	0
 1380 011c 00        		.byte	0
 1381 011d 00        		.byte	0
 1382 011e 00        		.byte	0
 1383 011f 00        		.byte	0
 1384 0120 00        		.byte	0
 1385 0121 00        		.byte	0
 1386 0122 00        		.byte	0
 1387 0123 00        		.byte	0
 1388 0124 00        		.byte	0
 1389 0125 00        		.byte	0
 1390 0126 00        		.byte	0
 1391 0127 00        		.byte	0
 1392 0128 00        		.byte	0
 1393 0129 00        		.byte	0
 1394 012a 00        		.byte	0
 1395 012b 00        		.byte	0
 1396 012c 00        		.byte	0
 1397 012d 00        		.byte	0
 1398 012e 00        		.byte	0
 1399 012f 00        		.byte	0
 1400 0130 00        		.byte	0
 1401 0131 FF        		.byte	-1
 1402 0132 FF        		.byte	-1
 1403 0133 FF        		.byte	-1
 1404 0134 FF        		.byte	-1
 1405 0135 FF        		.byte	-1
 1406 0136 00        		.byte	0
 1407 0137 00        		.byte	0
 1408 0138 00        		.byte	0
 1409 0139 00        		.byte	0
 1410 013a 00        		.byte	0
 1411 013b 00        		.byte	0
 1412 013c 00        		.byte	0
 1413 013d 00        		.byte	0
 1414 013e 00        		.byte	0
 1415 013f 00        		.byte	0
 1416 0140 00        		.byte	0
 1417 0141 00        		.byte	0
 1418 0142 00        		.byte	0
 1419 0143 00        		.byte	0
 1420 0144 00        		.byte	0
 1421 0145 00        		.byte	0
 1422 0146 00        		.byte	0
 1423 0147 00        		.byte	0
 1424 0148 00        		.byte	0
 1425 0149 00        		.byte	0
 1426 014a 00        		.byte	0
 1427 014b 00        		.byte	0
 1428 014c 00        		.byte	0
 1429 014d 00        		.byte	0
 1430 014e 00        		.byte	0
 1431 014f 00        		.byte	0
 1432 0150 00        		.byte	0
 1433 0151 FF        		.byte	-1
 1434 0152 FF        		.byte	-1
 1435 0153 FF        		.byte	-1
 1436 0154 FF        		.byte	-1
 1437 0155 FF        		.byte	-1
 1438 0156 00        		.byte	0
 1439 0157 00        		.byte	0
 1440 0158 00        		.byte	0
 1441 0159 00        		.byte	0
 1442 015a 00        		.byte	0
 1443 015b 00        		.byte	0
 1444 015c 00        		.byte	0
 1445 015d 00        		.byte	0
 1446 015e 00        		.byte	0
 1447 015f 00        		.byte	0
 1448 0160 00        		.byte	0
 1449 0161 00        		.byte	0
 1450 0162 00        		.byte	0
 1451 0163 00        		.byte	0
 1452 0164 00        		.byte	0
 1453 0165 00        		.byte	0
 1454 0166 00        		.byte	0
 1455 0167 00        		.byte	0
 1456 0168 00        		.byte	0
 1457 0169 00        		.byte	0
 1458 016a 00        		.byte	0
 1459 016b 00        		.byte	0
 1460 016c 00        		.byte	0
 1461 016d 00        		.byte	0
 1462 016e 00        		.byte	0
 1463 016f 00        		.byte	0
 1464 0170 00        		.byte	0
 1465 0171 3F        		.byte	63
 1466 0172 3F        		.byte	63
 1467 0173 3F        		.byte	63
 1468 0174 3F        		.byte	63
 1469 0175 3F        		.byte	63
 1470 0176 00        		.byte	0
 1471 0177 00        		.byte	0
 1472 0178 00        		.byte	0
 1473 0179 00        		.byte	0
 1474 017a 00        		.byte	0
 1475 017b 00        		.byte	0
 1476 017c 00        		.byte	0
 1477 017d 00        		.byte	0
 1478 017e 00        		.byte	0
 1479 017f 00        		.byte	0
 1480 0180 00        		.byte	0
 1481 0181 00        		.byte	0
 1482 0182 00        		.byte	0
 1483 0183 00        		.byte	0
 1484 0184 00        		.byte	0
 1485 0185 00        		.byte	0
 1486 0186 80        		.byte	-128
 1487 0187 C0        		.byte	-64
 1488 0188 C0        		.byte	-64
 1489 0189 E0        		.byte	-32
 1490 018a E0        		.byte	-32
 1491 018b F0        		.byte	-16
 1492 018c F0        		.byte	-16
 1493 018d F0        		.byte	-16
 1494 018e F0        		.byte	-16
 1495 018f F0        		.byte	-16
 1496 0190 F0        		.byte	-16
 1497 0191 F0        		.byte	-16
 1498 0192 F0        		.byte	-16
 1499 0193 F0        		.byte	-16
 1500 0194 F0        		.byte	-16
 1501 0195 F0        		.byte	-16
 1502 0196 E0        		.byte	-32
 1503 0197 E0        		.byte	-32
 1504 0198 C0        		.byte	-64
 1505 0199 C0        		.byte	-64
 1506 019a 80        		.byte	-128
 1507 019b 00        		.byte	0
 1508 019c 00        		.byte	0
 1509 019d 00        		.byte	0
 1510 019e 00        		.byte	0
 1511 019f 00        		.byte	0
 1512 01a0 00        		.byte	0
 1513 01a1 00        		.byte	0
 1514 01a2 00        		.byte	0
 1515 01a3 F0        		.byte	-16
 1516 01a4 FC        		.byte	-4
 1517 01a5 FF        		.byte	-1
 1518 01a6 FF        		.byte	-1
 1519 01a7 FF        		.byte	-1
 1520 01a8 1F        		.byte	31
 1521 01a9 07        		.byte	7
 1522 01aa 03        		.byte	3
 1523 01ab 01        		.byte	1
 1524 01ac 01        		.byte	1
 1525 01ad 00        		.byte	0
 1526 01ae 00        		.byte	0
 1527 01af 00        		.byte	0
 1528 01b0 00        		.byte	0
 1529 01b1 00        		.byte	0
 1530 01b2 00        		.byte	0
 1531 01b3 00        		.byte	0
 1532 01b4 01        		.byte	1
 1533 01b5 03        		.byte	3
 1534 01b6 03        		.byte	3
 1535 01b7 0F        		.byte	15
 1536 01b8 FF        		.byte	-1
 1537 01b9 FF        		.byte	-1
 1538 01ba FF        		.byte	-1
 1539 01bb FE        		.byte	-2
 1540 01bc FC        		.byte	-4
 1541 01bd C0        		.byte	-64
 1542 01be 00        		.byte	0
 1543 01bf 00        		.byte	0
 1544 01c0 00        		.byte	0
 1545 01c1 00        		.byte	0
 1546 01c2 00        		.byte	0
 1547 01c3 00        		.byte	0
 1548 01c4 00        		.byte	0
 1549 01c5 00        		.byte	0
 1550 01c6 00        		.byte	0
 1551 01c7 00        		.byte	0
 1552 01c8 00        		.byte	0
 1553 01c9 00        		.byte	0
 1554 01ca 00        		.byte	0
 1555 01cb 00        		.byte	0
 1556 01cc 00        		.byte	0
 1557 01cd 00        		.byte	0
 1558 01ce 00        		.byte	0
 1559 01cf 00        		.byte	0
 1560 01d0 00        		.byte	0
 1561 01d1 00        		.byte	0
 1562 01d2 00        		.byte	0
 1563 01d3 00        		.byte	0
 1564 01d4 80        		.byte	-128
 1565 01d5 C0        		.byte	-64
 1566 01d6 E0        		.byte	-32
 1567 01d7 F8        		.byte	-8
 1568 01d8 FF        		.byte	-1
 1569 01d9 FF        		.byte	-1
 1570 01da FF        		.byte	-1
 1571 01db 3F        		.byte	63
 1572 01dc 1F        		.byte	31
 1573 01dd 01        		.byte	1
 1574 01de 00        		.byte	0
 1575 01df 00        		.byte	0
 1576 01e0 00        		.byte	0
 1577 01e1 00        		.byte	0
 1578 01e2 00        		.byte	0
 1579 01e3 00        		.byte	0
 1580 01e4 00        		.byte	0
 1581 01e5 00        		.byte	0
 1582 01e6 00        		.byte	0
 1583 01e7 00        		.byte	0
 1584 01e8 00        		.byte	0
 1585 01e9 00        		.byte	0
 1586 01ea 00        		.byte	0
 1587 01eb 80        		.byte	-128
 1588 01ec C0        		.byte	-64
 1589 01ed C0        		.byte	-64
 1590 01ee E0        		.byte	-32
 1591 01ef F0        		.byte	-16
 1592 01f0 F8        		.byte	-8
 1593 01f1 FC        		.byte	-4
 1594 01f2 FE        		.byte	-2
 1595 01f3 7F        		.byte	127
 1596 01f4 3F        		.byte	63
 1597 01f5 1F        		.byte	31
 1598 01f6 0F        		.byte	15
 1599 01f7 07        		.byte	7
 1600 01f8 03        		.byte	3
 1601 01f9 01        		.byte	1
 1602 01fa 00        		.byte	0
 1603 01fb 00        		.byte	0
 1604 01fc 00        		.byte	0
 1605 01fd 00        		.byte	0
 1606 01fe 00        		.byte	0
 1607 01ff 00        		.byte	0
 1608 0200 00        		.byte	0
 1609 0201 00        		.byte	0
 1610 0202 00        		.byte	0
 1611 0203 00        		.byte	0
 1612 0204 C0        		.byte	-64
 1613 0205 E0        		.byte	-32
 1614 0206 F0        		.byte	-16
 1615 0207 F8        		.byte	-8
 1616 0208 FC        		.byte	-4
 1617 0209 FE        		.byte	-2
 1618 020a 7F        		.byte	127
 1619 020b 3F        		.byte	63
 1620 020c 1F        		.byte	31
 1621 020d 0F        		.byte	15
 1622 020e 07        		.byte	7
 1623 020f 03        		.byte	3
 1624 0210 01        		.byte	1
 1625 0211 01        		.byte	1
 1626 0212 00        		.byte	0
 1627 0213 00        		.byte	0
 1628 0214 00        		.byte	0
 1629 0215 00        		.byte	0
 1630 0216 00        		.byte	0
 1631 0217 00        		.byte	0
 1632 0218 00        		.byte	0
 1633 0219 00        		.byte	0
 1634 021a 00        		.byte	0
 1635 021b 00        		.byte	0
 1636 021c 00        		.byte	0
 1637 021d 00        		.byte	0
 1638 021e 00        		.byte	0
 1639 021f 00        		.byte	0
 1640 0220 00        		.byte	0
 1641 0221 00        		.byte	0
 1642 0222 3C        		.byte	60
 1643 0223 3F        		.byte	63
 1644 0224 3F        		.byte	63
 1645 0225 3F        		.byte	63
 1646 0226 3F        		.byte	63
 1647 0227 3F        		.byte	63
 1648 0228 3F        		.byte	63
 1649 0229 3E        		.byte	62
 1650 022a 3E        		.byte	62
 1651 022b 3E        		.byte	62
 1652 022c 3E        		.byte	62
 1653 022d 3E        		.byte	62
 1654 022e 3E        		.byte	62
 1655 022f 3E        		.byte	62
 1656 0230 3E        		.byte	62
 1657 0231 3E        		.byte	62
 1658 0232 3E        		.byte	62
 1659 0233 3E        		.byte	62
 1660 0234 3E        		.byte	62
 1661 0235 3E        		.byte	62
 1662 0236 3E        		.byte	62
 1663 0237 3E        		.byte	62
 1664 0238 3E        		.byte	62
 1665 0239 3E        		.byte	62
 1666 023a 3E        		.byte	62
 1667 023b 3E        		.byte	62
 1668 023c 3E        		.byte	62
 1669 023d 3E        		.byte	62
 1670 023e 00        		.byte	0
 1671 023f 00        		.byte	0
 1672 0240 00        		.byte	0
 1673 0241 00        		.byte	0
 1674 0242 00        		.byte	0
 1675 0243 00        		.byte	0
 1676 0244 00        		.byte	0
 1677 0245 00        		.byte	0
 1678 0246 80        		.byte	-128
 1679 0247 C0        		.byte	-64
 1680 0248 C0        		.byte	-64
 1681 0249 E0        		.byte	-32
 1682 024a E0        		.byte	-32
 1683 024b F0        		.byte	-16
 1684 024c F0        		.byte	-16
 1685 024d F0        		.byte	-16
 1686 024e F0        		.byte	-16
 1687 024f F0        		.byte	-16
 1688 0250 F0        		.byte	-16
 1689 0251 F0        		.byte	-16
 1690 0252 F0        		.byte	-16
 1691 0253 F0        		.byte	-16
 1692 0254 F0        		.byte	-16
 1693 0255 E0        		.byte	-32
 1694 0256 E0        		.byte	-32
 1695 0257 C0        		.byte	-64
 1696 0258 80        		.byte	-128
 1697 0259 00        		.byte	0
 1698 025a 00        		.byte	0
 1699 025b 00        		.byte	0
 1700 025c 00        		.byte	0
 1701 025d 00        		.byte	0
 1702 025e 00        		.byte	0
 1703 025f 00        		.byte	0
 1704 0260 00        		.byte	0
 1705 0261 00        		.byte	0
 1706 0262 00        		.byte	0
 1707 0263 70        		.byte	112
 1708 0264 7C        		.byte	124
 1709 0265 7F        		.byte	127
 1710 0266 7F        		.byte	127
 1711 0267 7F        		.byte	127
 1712 0268 3F        		.byte	63
 1713 0269 07        		.byte	7
 1714 026a 03        		.byte	3
 1715 026b 01        		.byte	1
 1716 026c 01        		.byte	1
 1717 026d 00        		.byte	0
 1718 026e 00        		.byte	0
 1719 026f 00        		.byte	0
 1720 0270 00        		.byte	0
 1721 0271 00        		.byte	0
 1722 0272 00        		.byte	0
 1723 0273 01        		.byte	1
 1724 0274 01        		.byte	1
 1725 0275 07        		.byte	7
 1726 0276 1F        		.byte	31
 1727 0277 FF        		.byte	-1
 1728 0278 FF        		.byte	-1
 1729 0279 FF        		.byte	-1
 1730 027a FE        		.byte	-2
 1731 027b F8        		.byte	-8
 1732 027c 00        		.byte	0
 1733 027d 00        		.byte	0
 1734 027e 00        		.byte	0
 1735 027f 00        		.byte	0
 1736 0280 00        		.byte	0
 1737 0281 00        		.byte	0
 1738 0282 00        		.byte	0
 1739 0283 00        		.byte	0
 1740 0284 00        		.byte	0
 1741 0285 00        		.byte	0
 1742 0286 00        		.byte	0
 1743 0287 00        		.byte	0
 1744 0288 00        		.byte	0
 1745 0289 00        		.byte	0
 1746 028a 00        		.byte	0
 1747 028b 00        		.byte	0
 1748 028c 00        		.byte	0
 1749 028d E0        		.byte	-32
 1750 028e E0        		.byte	-32
 1751 028f E0        		.byte	-32
 1752 0290 E0        		.byte	-32
 1753 0291 E0        		.byte	-32
 1754 0292 E0        		.byte	-32
 1755 0293 F0        		.byte	-16
 1756 0294 F8        		.byte	-8
 1757 0295 FC        		.byte	-4
 1758 0296 FF        		.byte	-1
 1759 0297 3F        		.byte	63
 1760 0298 3F        		.byte	63
 1761 0299 1F        		.byte	31
 1762 029a 0F        		.byte	15
 1763 029b 03        		.byte	3
 1764 029c 00        		.byte	0
 1765 029d 00        		.byte	0
 1766 029e 00        		.byte	0
 1767 029f 00        		.byte	0
 1768 02a0 00        		.byte	0
 1769 02a1 00        		.byte	0
 1770 02a2 00        		.byte	0
 1771 02a3 00        		.byte	0
 1772 02a4 00        		.byte	0
 1773 02a5 00        		.byte	0
 1774 02a6 00        		.byte	0
 1775 02a7 00        		.byte	0
 1776 02a8 00        		.byte	0
 1777 02a9 00        		.byte	0
 1778 02aa 00        		.byte	0
 1779 02ab 00        		.byte	0
 1780 02ac 00        		.byte	0
 1781 02ad 03        		.byte	3
 1782 02ae 03        		.byte	3
 1783 02af 03        		.byte	3
 1784 02b0 01        		.byte	1
 1785 02b1 03        		.byte	3
 1786 02b2 03        		.byte	3
 1787 02b3 03        		.byte	3
 1788 02b4 03        		.byte	3
 1789 02b5 07        		.byte	7
 1790 02b6 0F        		.byte	15
 1791 02b7 1F        		.byte	31
 1792 02b8 FF        		.byte	-1
 1793 02b9 FF        		.byte	-1
 1794 02ba FE        		.byte	-2
 1795 02bb FC        		.byte	-4
 1796 02bc F8        		.byte	-8
 1797 02bd E0        		.byte	-32
 1798 02be 00        		.byte	0
 1799 02bf 00        		.byte	0
 1800 02c0 00        		.byte	0
 1801 02c1 00        		.byte	0
 1802 02c2 00        		.byte	0
 1803 02c3 78        		.byte	120
 1804 02c4 F8        		.byte	-8
 1805 02c5 FC        		.byte	-4
 1806 02c6 FC        		.byte	-4
 1807 02c7 FC        		.byte	-4
 1808 02c8 E0        		.byte	-32
 1809 02c9 80        		.byte	-128
 1810 02ca 00        		.byte	0
 1811 02cb 00        		.byte	0
 1812 02cc 00        		.byte	0
 1813 02cd 00        		.byte	0
 1814 02ce 00        		.byte	0
 1815 02cf 00        		.byte	0
 1816 02d0 00        		.byte	0
 1817 02d1 00        		.byte	0
 1818 02d2 00        		.byte	0
 1819 02d3 00        		.byte	0
 1820 02d4 00        		.byte	0
 1821 02d5 00        		.byte	0
 1822 02d6 80        		.byte	-128
 1823 02d7 C0        		.byte	-64
 1824 02d8 F8        		.byte	-8
 1825 02d9 FF        		.byte	-1
 1826 02da FF        		.byte	-1
 1827 02db FF        		.byte	-1
 1828 02dc FF        		.byte	-1
 1829 02dd 3F        		.byte	63
 1830 02de 00        		.byte	0
 1831 02df 00        		.byte	0
 1832 02e0 00        		.byte	0
 1833 02e1 00        		.byte	0
 1834 02e2 00        		.byte	0
 1835 02e3 00        		.byte	0
 1836 02e4 01        		.byte	1
 1837 02e5 03        		.byte	3
 1838 02e6 07        		.byte	7
 1839 02e7 0F        		.byte	15
 1840 02e8 1F        		.byte	31
 1841 02e9 1F        		.byte	31
 1842 02ea 3F        		.byte	63
 1843 02eb 3E        		.byte	62
 1844 02ec 3C        		.byte	60
 1845 02ed 7C        		.byte	124
 1846 02ee 7C        		.byte	124
 1847 02ef 7C        		.byte	124
 1848 02f0 7C        		.byte	124
 1849 02f1 7C        		.byte	124
 1850 02f2 7C        		.byte	124
 1851 02f3 3C        		.byte	60
 1852 02f4 3E        		.byte	62
 1853 02f5 3F        		.byte	63
 1854 02f6 1F        		.byte	31
 1855 02f7 1F        		.byte	31
 1856 02f8 0F        		.byte	15
 1857 02f9 07        		.byte	7
 1858 02fa 07        		.byte	7
 1859 02fb 01        		.byte	1
 1860 02fc 00        		.byte	0
 1861 02fd 00        		.byte	0
 1862 02fe 00        		.byte	0
 1863 02ff 00        		.byte	0
 1864 0300 00        		.byte	0
 1865 0301 00        		.byte	0
 1866 0302 00        		.byte	0
 1867 0303 00        		.byte	0
 1868 0304 00        		.byte	0
 1869 0305 00        		.byte	0
 1870 0306 00        		.byte	0
 1871 0307 00        		.byte	0
 1872 0308 00        		.byte	0
 1873 0309 00        		.byte	0
 1874 030a 00        		.byte	0
 1875 030b 00        		.byte	0
 1876 030c 00        		.byte	0
 1877 030d 00        		.byte	0
 1878 030e 00        		.byte	0
 1879 030f 00        		.byte	0
 1880 0310 00        		.byte	0
 1881 0311 80        		.byte	-128
 1882 0312 C0        		.byte	-64
 1883 0313 F0        		.byte	-16
 1884 0314 F0        		.byte	-16
 1885 0315 F0        		.byte	-16
 1886 0316 F0        		.byte	-16
 1887 0317 F0        		.byte	-16
 1888 0318 00        		.byte	0
 1889 0319 00        		.byte	0
 1890 031a 00        		.byte	0
 1891 031b 00        		.byte	0
 1892 031c 00        		.byte	0
 1893 031d 00        		.byte	0
 1894 031e 00        		.byte	0
 1895 031f 00        		.byte	0
 1896 0320 00        		.byte	0
 1897 0321 00        		.byte	0
 1898 0322 00        		.byte	0
 1899 0323 00        		.byte	0
 1900 0324 00        		.byte	0
 1901 0325 00        		.byte	0
 1902 0326 00        		.byte	0
 1903 0327 00        		.byte	0
 1904 0328 00        		.byte	0
 1905 0329 00        		.byte	0
 1906 032a 00        		.byte	0
 1907 032b 00        		.byte	0
 1908 032c C0        		.byte	-64
 1909 032d E0        		.byte	-32
 1910 032e F0        		.byte	-16
 1911 032f FC        		.byte	-4
 1912 0330 FE        		.byte	-2
 1913 0331 3F        		.byte	63
 1914 0332 1F        		.byte	31
 1915 0333 FF        		.byte	-1
 1916 0334 FF        		.byte	-1
 1917 0335 FF        		.byte	-1
 1918 0336 FF        		.byte	-1
 1919 0337 FF        		.byte	-1
 1920 0338 00        		.byte	0
 1921 0339 00        		.byte	0
 1922 033a 00        		.byte	0
 1923 033b 00        		.byte	0
 1924 033c 00        		.byte	0
 1925 033d 00        		.byte	0
 1926 033e 00        		.byte	0
 1927 033f 00        		.byte	0
 1928 0340 00        		.byte	0
 1929 0341 00        		.byte	0
 1930 0342 00        		.byte	0
 1931 0343 00        		.byte	0
 1932 0344 00        		.byte	0
 1933 0345 00        		.byte	0
 1934 0346 80        		.byte	-128
 1935 0347 C0        		.byte	-64
 1936 0348 F0        		.byte	-16
 1937 0349 F8        		.byte	-8
 1938 034a FE        		.byte	-2
 1939 034b 7F        		.byte	127
 1940 034c 3F        		.byte	63
 1941 034d 0F        		.byte	15
 1942 034e 07        		.byte	7
 1943 034f 01        		.byte	1
 1944 0350 00        		.byte	0
 1945 0351 00        		.byte	0
 1946 0352 00        		.byte	0
 1947 0353 FF        		.byte	-1
 1948 0354 FF        		.byte	-1
 1949 0355 FF        		.byte	-1
 1950 0356 FF        		.byte	-1
 1951 0357 FF        		.byte	-1
 1952 0358 00        		.byte	0
 1953 0359 00        		.byte	0
 1954 035a 00        		.byte	0
 1955 035b 00        		.byte	0
 1956 035c 00        		.byte	0
 1957 035d 00        		.byte	0
 1958 035e 00        		.byte	0
 1959 035f 00        		.byte	0
 1960 0360 00        		.byte	0
 1961 0361 C0        		.byte	-64
 1962 0362 E0        		.byte	-32
 1963 0363 F8        		.byte	-8
 1964 0364 FC        		.byte	-4
 1965 0365 FF        		.byte	-1
 1966 0366 BF        		.byte	-65
 1967 0367 9F        		.byte	-97
 1968 0368 87        		.byte	-121
 1969 0369 83        		.byte	-125
 1970 036a 80        		.byte	-128
 1971 036b 80        		.byte	-128
 1972 036c 80        		.byte	-128
 1973 036d 80        		.byte	-128
 1974 036e 80        		.byte	-128
 1975 036f 80        		.byte	-128
 1976 0370 80        		.byte	-128
 1977 0371 80        		.byte	-128
 1978 0372 80        		.byte	-128
 1979 0373 FF        		.byte	-1
 1980 0374 FF        		.byte	-1
 1981 0375 FF        		.byte	-1
 1982 0376 FF        		.byte	-1
 1983 0377 FF        		.byte	-1
 1984 0378 80        		.byte	-128
 1985 0379 80        		.byte	-128
 1986 037a 80        		.byte	-128
 1987 037b 80        		.byte	-128
 1988 037c 80        		.byte	-128
 1989 037d 80        		.byte	-128
 1990 037e 00        		.byte	0
 1991 037f 00        		.byte	0
 1992 0380 00        		.byte	0
 1993 0381 0F        		.byte	15
 1994 0382 0F        		.byte	15
 1995 0383 0F        		.byte	15
 1996 0384 0F        		.byte	15
 1997 0385 0F        		.byte	15
 1998 0386 0F        		.byte	15
 1999 0387 0F        		.byte	15
 2000 0388 0F        		.byte	15
 2001 0389 0F        		.byte	15
 2002 038a 0F        		.byte	15
 2003 038b 0F        		.byte	15
 2004 038c 0F        		.byte	15
 2005 038d 0F        		.byte	15
 2006 038e 0F        		.byte	15
 2007 038f 0F        		.byte	15
 2008 0390 0F        		.byte	15
 2009 0391 0F        		.byte	15
 2010 0392 0F        		.byte	15
 2011 0393 FF        		.byte	-1
 2012 0394 FF        		.byte	-1
 2013 0395 FF        		.byte	-1
 2014 0396 FF        		.byte	-1
 2015 0397 FF        		.byte	-1
 2016 0398 0F        		.byte	15
 2017 0399 0F        		.byte	15
 2018 039a 0F        		.byte	15
 2019 039b 0F        		.byte	15
 2020 039c 0F        		.byte	15
 2021 039d 0F        		.byte	15
 2022 039e 00        		.byte	0
 2023 039f 00        		.byte	0
 2024 03a0 00        		.byte	0
 2025 03a1 00        		.byte	0
 2026 03a2 00        		.byte	0
 2027 03a3 00        		.byte	0
 2028 03a4 00        		.byte	0
 2029 03a5 00        		.byte	0
 2030 03a6 00        		.byte	0
 2031 03a7 00        		.byte	0
 2032 03a8 00        		.byte	0
 2033 03a9 00        		.byte	0
 2034 03aa 00        		.byte	0
 2035 03ab 00        		.byte	0
 2036 03ac 00        		.byte	0
 2037 03ad 00        		.byte	0
 2038 03ae 00        		.byte	0
 2039 03af 00        		.byte	0
 2040 03b0 00        		.byte	0
 2041 03b1 00        		.byte	0
 2042 03b2 00        		.byte	0
 2043 03b3 3F        		.byte	63
 2044 03b4 3F        		.byte	63
 2045 03b5 3F        		.byte	63
 2046 03b6 3F        		.byte	63
 2047 03b7 3F        		.byte	63
 2048 03b8 00        		.byte	0
 2049 03b9 00        		.byte	0
 2050 03ba 00        		.byte	0
 2051 03bb 00        		.byte	0
 2052 03bc 00        		.byte	0
 2053 03bd 00        		.byte	0
 2054 03be 00        		.byte	0
 2055 03bf 00        		.byte	0
 2056 03c0 00        		.byte	0
 2057 03c1 00        		.byte	0
 2058 03c2 00        		.byte	0
 2059 03c3 00        		.byte	0
 2060 03c4 00        		.byte	0
 2061 03c5 00        		.byte	0
 2062 03c6 00        		.byte	0
 2063 03c7 F0        		.byte	-16
 2064 03c8 F0        		.byte	-16
 2065 03c9 F0        		.byte	-16
 2066 03ca F0        		.byte	-16
 2067 03cb F0        		.byte	-16
 2068 03cc F0        		.byte	-16
 2069 03cd F0        		.byte	-16
 2070 03ce F0        		.byte	-16
 2071 03cf F0        		.byte	-16
 2072 03d0 F0        		.byte	-16
 2073 03d1 F0        		.byte	-16
 2074 03d2 F0        		.byte	-16
 2075 03d3 F0        		.byte	-16
 2076 03d4 F0        		.byte	-16
 2077 03d5 F0        		.byte	-16
 2078 03d6 F0        		.byte	-16
 2079 03d7 F0        		.byte	-16
 2080 03d8 F0        		.byte	-16
 2081 03d9 F0        		.byte	-16
 2082 03da F0        		.byte	-16
 2083 03db F0        		.byte	-16
 2084 03dc 00        		.byte	0
 2085 03dd 00        		.byte	0
 2086 03de 00        		.byte	0
 2087 03df 00        		.byte	0
 2088 03e0 00        		.byte	0
 2089 03e1 00        		.byte	0
 2090 03e2 00        		.byte	0
 2091 03e3 00        		.byte	0
 2092 03e4 00        		.byte	0
 2093 03e5 80        		.byte	-128
 2094 03e6 FE        		.byte	-2
 2095 03e7 FF        		.byte	-1
 2096 03e8 FF        		.byte	-1
 2097 03e9 FF        		.byte	-1
 2098 03ea 7F        		.byte	127
 2099 03eb 03        		.byte	3
 2100 03ec 01        		.byte	1
 2101 03ed 01        		.byte	1
 2102 03ee 01        		.byte	1
 2103 03ef 01        		.byte	1
 2104 03f0 01        		.byte	1
 2105 03f1 01        		.byte	1
 2106 03f2 01        		.byte	1
 2107 03f3 01        		.byte	1
 2108 03f4 01        		.byte	1
 2109 03f5 01        		.byte	1
 2110 03f6 01        		.byte	1
 2111 03f7 01        		.byte	1
 2112 03f8 01        		.byte	1
 2113 03f9 01        		.byte	1
 2114 03fa 01        		.byte	1
 2115 03fb 01        		.byte	1
 2116 03fc 00        		.byte	0
 2117 03fd 00        		.byte	0
 2118 03fe 00        		.byte	0
 2119 03ff 00        		.byte	0
 2120 0400 00        		.byte	0
 2121 0401 00        		.byte	0
 2122 0402 00        		.byte	0
 2123 0403 00        		.byte	0
 2124 0404 F0        		.byte	-16
 2125 0405 FF        		.byte	-1
 2126 0406 FF        		.byte	-1
 2127 0407 FF        		.byte	-1
 2128 0408 FF        		.byte	-1
 2129 0409 E7        		.byte	-25
 2130 040a F0        		.byte	-16
 2131 040b F8        		.byte	-8
 2132 040c 78        		.byte	120
 2133 040d 78        		.byte	120
 2134 040e 7C        		.byte	124
 2135 040f 7C        		.byte	124
 2136 0410 7C        		.byte	124
 2137 0411 7C        		.byte	124
 2138 0412 7C        		.byte	124
 2139 0413 7C        		.byte	124
 2140 0414 FC        		.byte	-4
 2141 0415 F8        		.byte	-8
 2142 0416 F8        		.byte	-8
 2143 0417 F8        		.byte	-8
 2144 0418 F0        		.byte	-16
 2145 0419 E0        		.byte	-32
 2146 041a C0        		.byte	-64
 2147 041b 80        		.byte	-128
 2148 041c 00        		.byte	0
 2149 041d 00        		.byte	0
 2150 041e 00        		.byte	0
 2151 041f 00        		.byte	0
 2152 0420 00        		.byte	0
 2153 0421 00        		.byte	0
 2154 0422 00        		.byte	0
 2155 0423 02        		.byte	2
 2156 0424 03        		.byte	3
 2157 0425 03        		.byte	3
 2158 0426 03        		.byte	3
 2159 0427 07        		.byte	7
 2160 0428 03        		.byte	3
 2161 0429 01        		.byte	1
 2162 042a 00        		.byte	0
 2163 042b 00        		.byte	0
 2164 042c 00        		.byte	0
 2165 042d 00        		.byte	0
 2166 042e 00        		.byte	0
 2167 042f 00        		.byte	0
 2168 0430 00        		.byte	0
 2169 0431 00        		.byte	0
 2170 0432 00        		.byte	0
 2171 0433 00        		.byte	0
 2172 0434 00        		.byte	0
 2173 0435 00        		.byte	0
 2174 0436 01        		.byte	1
 2175 0437 03        		.byte	3
 2176 0438 1F        		.byte	31
 2177 0439 FF        		.byte	-1
 2178 043a FF        		.byte	-1
 2179 043b FF        		.byte	-1
 2180 043c FF        		.byte	-1
 2181 043d FC        		.byte	-4
 2182 043e 00        		.byte	0
 2183 043f 00        		.byte	0
 2184 0440 00        		.byte	0
 2185 0441 00        		.byte	0
 2186 0442 00        		.byte	0
 2187 0443 78        		.byte	120
 2188 0444 F8        		.byte	-8
 2189 0445 F8        		.byte	-8
 2190 0446 F8        		.byte	-8
 2191 0447 F8        		.byte	-8
 2192 0448 E0        		.byte	-32
 2193 0449 80        		.byte	-128
 2194 044a 00        		.byte	0
 2195 044b 00        		.byte	0
 2196 044c 00        		.byte	0
 2197 044d 00        		.byte	0
 2198 044e 00        		.byte	0
 2199 044f 00        		.byte	0
 2200 0450 00        		.byte	0
 2201 0451 00        		.byte	0
 2202 0452 00        		.byte	0
 2203 0453 00        		.byte	0
 2204 0454 00        		.byte	0
 2205 0455 00        		.byte	0
 2206 0456 80        		.byte	-128
 2207 0457 C0        		.byte	-64
 2208 0458 F0        		.byte	-16
 2209 0459 FF        		.byte	-1
 2210 045a FF        		.byte	-1
 2211 045b FF        		.byte	-1
 2212 045c FF        		.byte	-1
 2213 045d 1F        		.byte	31
 2214 045e 00        		.byte	0
 2215 045f 00        		.byte	0
 2216 0460 00        		.byte	0
 2217 0461 00        		.byte	0
 2218 0462 00        		.byte	0
 2219 0463 00        		.byte	0
 2220 0464 01        		.byte	1
 2221 0465 03        		.byte	3
 2222 0466 07        		.byte	7
 2223 0467 0F        		.byte	15
 2224 0468 1F        		.byte	31
 2225 0469 1F        		.byte	31
 2226 046a 3F        		.byte	63
 2227 046b 3E        		.byte	62
 2228 046c 3C        		.byte	60
 2229 046d 7C        		.byte	124
 2230 046e 7C        		.byte	124
 2231 046f 7C        		.byte	124
 2232 0470 7C        		.byte	124
 2233 0471 7C        		.byte	124
 2234 0472 3C        		.byte	60
 2235 0473 3C        		.byte	60
 2236 0474 3E        		.byte	62
 2237 0475 3F        		.byte	63
 2238 0476 1F        		.byte	31
 2239 0477 1F        		.byte	31
 2240 0478 0F        		.byte	15
 2241 0479 07        		.byte	7
 2242 047a 03        		.byte	3
 2243 047b 01        		.byte	1
 2244 047c 00        		.byte	0
 2245 047d 00        		.byte	0
 2246 047e 00        		.byte	0
 2247 047f 00        		.byte	0
 2248 0480 00        		.byte	0
 2249 0481 00        		.byte	0
 2250 0482 00        		.byte	0
 2251 0483 00        		.byte	0
 2252 0484 00        		.byte	0
 2253 0485 00        		.byte	0
 2254 0486 00        		.byte	0
 2255 0487 00        		.byte	0
 2256 0488 80        		.byte	-128
 2257 0489 C0        		.byte	-64
 2258 048a E0        		.byte	-32
 2259 048b E0        		.byte	-32
 2260 048c F0        		.byte	-16
 2261 048d F0        		.byte	-16
 2262 048e F0        		.byte	-16
 2263 048f F0        		.byte	-16
 2264 0490 F0        		.byte	-16
 2265 0491 F0        		.byte	-16
 2266 0492 F0        		.byte	-16
 2267 0493 F0        		.byte	-16
 2268 0494 F0        		.byte	-16
 2269 0495 F0        		.byte	-16
 2270 0496 E0        		.byte	-32
 2271 0497 E0        		.byte	-32
 2272 0498 C0        		.byte	-64
 2273 0499 C0        		.byte	-64
 2274 049a 80        		.byte	-128
 2275 049b 00        		.byte	0
 2276 049c 00        		.byte	0
 2277 049d 00        		.byte	0
 2278 049e 00        		.byte	0
 2279 049f 00        		.byte	0
 2280 04a0 00        		.byte	0
 2281 04a1 00        		.byte	0
 2282 04a2 00        		.byte	0
 2283 04a3 80        		.byte	-128
 2284 04a4 F0        		.byte	-16
 2285 04a5 FC        		.byte	-4
 2286 04a6 FE        		.byte	-2
 2287 04a7 FF        		.byte	-1
 2288 04a8 7F        		.byte	127
 2289 04a9 1F        		.byte	31
 2290 04aa 07        		.byte	7
 2291 04ab 03        		.byte	3
 2292 04ac 01        		.byte	1
 2293 04ad 01        		.byte	1
 2294 04ae 00        		.byte	0
 2295 04af 00        		.byte	0
 2296 04b0 00        		.byte	0
 2297 04b1 00        		.byte	0
 2298 04b2 00        		.byte	0
 2299 04b3 00        		.byte	0
 2300 04b4 01        		.byte	1
 2301 04b5 01        		.byte	1
 2302 04b6 03        		.byte	3
 2303 04b7 0F        		.byte	15
 2304 04b8 3F        		.byte	63
 2305 04b9 3F        		.byte	63
 2306 04ba 3F        		.byte	63
 2307 04bb 3E        		.byte	62
 2308 04bc 38        		.byte	56
 2309 04bd 00        		.byte	0
 2310 04be 00        		.byte	0
 2311 04bf 00        		.byte	0
 2312 04c0 00        		.byte	0
 2313 04c1 00        		.byte	0
 2314 04c2 F0        		.byte	-16
 2315 04c3 FF        		.byte	-1
 2316 04c4 FF        		.byte	-1
 2317 04c5 FF        		.byte	-1
 2318 04c6 FF        		.byte	-1
 2319 04c7 1F        		.byte	31
 2320 04c8 80        		.byte	-128
 2321 04c9 C0        		.byte	-64
 2322 04ca E0        		.byte	-32
 2323 04cb F0        		.byte	-16
 2324 04cc F0        		.byte	-16
 2325 04cd F8        		.byte	-8
 2326 04ce 78        		.byte	120
 2327 04cf 78        		.byte	120
 2328 04d0 78        		.byte	120
 2329 04d1 78        		.byte	120
 2330 04d2 78        		.byte	120
 2331 04d3 F8        		.byte	-8
 2332 04d4 F8        		.byte	-8
 2333 04d5 F8        		.byte	-8
 2334 04d6 F0        		.byte	-16
 2335 04d7 F0        		.byte	-16
 2336 04d8 E0        		.byte	-32
 2337 04d9 C0        		.byte	-64
 2338 04da C0        		.byte	-64
 2339 04db 00        		.byte	0
 2340 04dc 00        		.byte	0
 2341 04dd 00        		.byte	0
 2342 04de 00        		.byte	0
 2343 04df 00        		.byte	0
 2344 04e0 00        		.byte	0
 2345 04e1 00        		.byte	0
 2346 04e2 FF        		.byte	-1
 2347 04e3 FF        		.byte	-1
 2348 04e4 FF        		.byte	-1
 2349 04e5 FF        		.byte	-1
 2350 04e6 FF        		.byte	-1
 2351 04e7 FF        		.byte	-1
 2352 04e8 3F        		.byte	63
 2353 04e9 07        		.byte	7
 2354 04ea 03        		.byte	3
 2355 04eb 01        		.byte	1
 2356 04ec 00        		.byte	0
 2357 04ed 00        		.byte	0
 2358 04ee 00        		.byte	0
 2359 04ef 00        		.byte	0
 2360 04f0 00        		.byte	0
 2361 04f1 00        		.byte	0
 2362 04f2 00        		.byte	0
 2363 04f3 00        		.byte	0
 2364 04f4 00        		.byte	0
 2365 04f5 01        		.byte	1
 2366 04f6 03        		.byte	3
 2367 04f7 07        		.byte	7
 2368 04f8 3F        		.byte	63
 2369 04f9 FF        		.byte	-1
 2370 04fa FF        		.byte	-1
 2371 04fb FF        		.byte	-1
 2372 04fc FE        		.byte	-2
 2373 04fd F0        		.byte	-16
 2374 04fe 00        		.byte	0
 2375 04ff 00        		.byte	0
 2376 0500 00        		.byte	0
 2377 0501 00        		.byte	0
 2378 0502 00        		.byte	0
 2379 0503 1F        		.byte	31
 2380 0504 7F        		.byte	127
 2381 0505 FF        		.byte	-1
 2382 0506 FF        		.byte	-1
 2383 0507 FF        		.byte	-1
 2384 0508 F8        		.byte	-8
 2385 0509 C0        		.byte	-64
 2386 050a 80        		.byte	-128
 2387 050b 00        		.byte	0
 2388 050c 00        		.byte	0
 2389 050d 00        		.byte	0
 2390 050e 00        		.byte	0
 2391 050f 00        		.byte	0
 2392 0510 00        		.byte	0
 2393 0511 00        		.byte	0
 2394 0512 00        		.byte	0
 2395 0513 00        		.byte	0
 2396 0514 00        		.byte	0
 2397 0515 00        		.byte	0
 2398 0516 00        		.byte	0
 2399 0517 C0        		.byte	-64
 2400 0518 F8        		.byte	-8
 2401 0519 FF        		.byte	-1
 2402 051a FF        		.byte	-1
 2403 051b FF        		.byte	-1
 2404 051c 7F        		.byte	127
 2405 051d 1F        		.byte	31
 2406 051e 00        		.byte	0
 2407 051f 00        		.byte	0
 2408 0520 00        		.byte	0
 2409 0521 00        		.byte	0
 2410 0522 00        		.byte	0
 2411 0523 00        		.byte	0
 2412 0524 00        		.byte	0
 2413 0525 01        		.byte	1
 2414 0526 03        		.byte	3
 2415 0527 07        		.byte	7
 2416 0528 0F        		.byte	15
 2417 0529 1F        		.byte	31
 2418 052a 1F        		.byte	31
 2419 052b 3F        		.byte	63
 2420 052c 3E        		.byte	62
 2421 052d 3C        		.byte	60
 2422 052e 3C        		.byte	60
 2423 052f 7C        		.byte	124
 2424 0530 7C        		.byte	124
 2425 0531 7C        		.byte	124
 2426 0532 7C        		.byte	124
 2427 0533 3C        		.byte	60
 2428 0534 3E        		.byte	62
 2429 0535 3E        		.byte	62
 2430 0536 3F        		.byte	63
 2431 0537 1F        		.byte	31
 2432 0538 0F        		.byte	15
 2433 0539 0F        		.byte	15
 2434 053a 07        		.byte	7
 2435 053b 01        		.byte	1
 2436 053c 00        		.byte	0
 2437 053d 00        		.byte	0
 2438 053e 00        		.byte	0
 2439 053f 00        		.byte	0
 2440 0540 00        		.byte	0
 2441 0541 00        		.byte	0
 2442 0542 00        		.byte	0
 2443 0543 F0        		.byte	-16
 2444 0544 F0        		.byte	-16
 2445 0545 F0        		.byte	-16
 2446 0546 F0        		.byte	-16
 2447 0547 F0        		.byte	-16
 2448 0548 F0        		.byte	-16
 2449 0549 F0        		.byte	-16
 2450 054a F0        		.byte	-16
 2451 054b F0        		.byte	-16
 2452 054c F0        		.byte	-16
 2453 054d F0        		.byte	-16
 2454 054e F0        		.byte	-16
 2455 054f F0        		.byte	-16
 2456 0550 F0        		.byte	-16
 2457 0551 F0        		.byte	-16
 2458 0552 F0        		.byte	-16
 2459 0553 F0        		.byte	-16
 2460 0554 F0        		.byte	-16
 2461 0555 F0        		.byte	-16
 2462 0556 F0        		.byte	-16
 2463 0557 F0        		.byte	-16
 2464 0558 F0        		.byte	-16
 2465 0559 F0        		.byte	-16
 2466 055a F0        		.byte	-16
 2467 055b F0        		.byte	-16
 2468 055c F0        		.byte	-16
 2469 055d F0        		.byte	-16
 2470 055e 00        		.byte	0
 2471 055f 00        		.byte	0
 2472 0560 00        		.byte	0
 2473 0561 00        		.byte	0
 2474 0562 00        		.byte	0
 2475 0563 01        		.byte	1
 2476 0564 01        		.byte	1
 2477 0565 01        		.byte	1
 2478 0566 01        		.byte	1
 2479 0567 01        		.byte	1
 2480 0568 01        		.byte	1
 2481 0569 01        		.byte	1
 2482 056a 01        		.byte	1
 2483 056b 01        		.byte	1
 2484 056c 01        		.byte	1
 2485 056d 01        		.byte	1
 2486 056e 01        		.byte	1
 2487 056f 01        		.byte	1
 2488 0570 01        		.byte	1
 2489 0571 01        		.byte	1
 2490 0572 01        		.byte	1
 2491 0573 81        		.byte	-127
 2492 0574 E1        		.byte	-31
 2493 0575 F1        		.byte	-15
 2494 0576 FD        		.byte	-3
 2495 0577 FF        		.byte	-1
 2496 0578 FF        		.byte	-1
 2497 0579 3F        		.byte	63
 2498 057a 1F        		.byte	31
 2499 057b 07        		.byte	7
 2500 057c 03        		.byte	3
 2501 057d 01        		.byte	1
 2502 057e 00        		.byte	0
 2503 057f 00        		.byte	0
 2504 0580 00        		.byte	0
 2505 0581 00        		.byte	0
 2506 0582 00        		.byte	0
 2507 0583 00        		.byte	0
 2508 0584 00        		.byte	0
 2509 0585 00        		.byte	0
 2510 0586 00        		.byte	0
 2511 0587 00        		.byte	0
 2512 0588 00        		.byte	0
 2513 0589 00        		.byte	0
 2514 058a 00        		.byte	0
 2515 058b 00        		.byte	0
 2516 058c 00        		.byte	0
 2517 058d 00        		.byte	0
 2518 058e 80        		.byte	-128
 2519 058f E0        		.byte	-32
 2520 0590 F8        		.byte	-8
 2521 0591 FC        		.byte	-4
 2522 0592 FF        		.byte	-1
 2523 0593 FF        		.byte	-1
 2524 0594 7F        		.byte	127
 2525 0595 1F        		.byte	31
 2526 0596 07        		.byte	7
 2527 0597 01        		.byte	1
 2528 0598 00        		.byte	0
 2529 0599 00        		.byte	0
 2530 059a 00        		.byte	0
 2531 059b 00        		.byte	0
 2532 059c 00        		.byte	0
 2533 059d 00        		.byte	0
 2534 059e 00        		.byte	0
 2535 059f 00        		.byte	0
 2536 05a0 00        		.byte	0
 2537 05a1 00        		.byte	0
 2538 05a2 00        		.byte	0
 2539 05a3 00        		.byte	0
 2540 05a4 00        		.byte	0
 2541 05a5 00        		.byte	0
 2542 05a6 00        		.byte	0
 2543 05a7 00        		.byte	0
 2544 05a8 00        		.byte	0
 2545 05a9 00        		.byte	0
 2546 05aa 00        		.byte	0
 2547 05ab 80        		.byte	-128
 2548 05ac F0        		.byte	-16
 2549 05ad FC        		.byte	-4
 2550 05ae FF        		.byte	-1
 2551 05af FF        		.byte	-1
 2552 05b0 FF        		.byte	-1
 2553 05b1 3F        		.byte	63
 2554 05b2 07        		.byte	7
 2555 05b3 01        		.byte	1
 2556 05b4 00        		.byte	0
 2557 05b5 00        		.byte	0
 2558 05b6 00        		.byte	0
 2559 05b7 00        		.byte	0
 2560 05b8 00        		.byte	0
 2561 05b9 00        		.byte	0
 2562 05ba 00        		.byte	0
 2563 05bb 00        		.byte	0
 2564 05bc 00        		.byte	0
 2565 05bd 00        		.byte	0
 2566 05be 00        		.byte	0
 2567 05bf 00        		.byte	0
 2568 05c0 00        		.byte	0
 2569 05c1 00        		.byte	0
 2570 05c2 00        		.byte	0
 2571 05c3 00        		.byte	0
 2572 05c4 00        		.byte	0
 2573 05c5 00        		.byte	0
 2574 05c6 00        		.byte	0
 2575 05c7 00        		.byte	0
 2576 05c8 00        		.byte	0
 2577 05c9 80        		.byte	-128
 2578 05ca FC        		.byte	-4
 2579 05cb FF        		.byte	-1
 2580 05cc FF        		.byte	-1
 2581 05cd FF        		.byte	-1
 2582 05ce FF        		.byte	-1
 2583 05cf 0F        		.byte	15
 2584 05d0 01        		.byte	1
 2585 05d1 00        		.byte	0
 2586 05d2 00        		.byte	0
 2587 05d3 00        		.byte	0
 2588 05d4 00        		.byte	0
 2589 05d5 00        		.byte	0
 2590 05d6 00        		.byte	0
 2591 05d7 00        		.byte	0
 2592 05d8 00        		.byte	0
 2593 05d9 00        		.byte	0
 2594 05da 00        		.byte	0
 2595 05db 00        		.byte	0
 2596 05dc 00        		.byte	0
 2597 05dd 00        		.byte	0
 2598 05de 00        		.byte	0
 2599 05df 00        		.byte	0
 2600 05e0 00        		.byte	0
 2601 05e1 00        		.byte	0
 2602 05e2 00        		.byte	0
 2603 05e3 00        		.byte	0
 2604 05e4 00        		.byte	0
 2605 05e5 00        		.byte	0
 2606 05e6 00        		.byte	0
 2607 05e7 00        		.byte	0
 2608 05e8 00        		.byte	0
 2609 05e9 3F        		.byte	63
 2610 05ea 3F        		.byte	63
 2611 05eb 3F        		.byte	63
 2612 05ec 3F        		.byte	63
 2613 05ed 3F        		.byte	63
 2614 05ee 03        		.byte	3
 2615 05ef 00        		.byte	0
 2616 05f0 00        		.byte	0
 2617 05f1 00        		.byte	0
 2618 05f2 00        		.byte	0
 2619 05f3 00        		.byte	0
 2620 05f4 00        		.byte	0
 2621 05f5 00        		.byte	0
 2622 05f6 00        		.byte	0
 2623 05f7 00        		.byte	0
 2624 05f8 00        		.byte	0
 2625 05f9 00        		.byte	0
 2626 05fa 00        		.byte	0
 2627 05fb 00        		.byte	0
 2628 05fc 00        		.byte	0
 2629 05fd 00        		.byte	0
 2630 05fe 00        		.byte	0
 2631 05ff 00        		.byte	0
 2632 0600 00        		.byte	0
 2633 0601 00        		.byte	0
 2634 0602 00        		.byte	0
 2635 0603 00        		.byte	0
 2636 0604 00        		.byte	0
 2637 0605 00        		.byte	0
 2638 0606 00        		.byte	0
 2639 0607 80        		.byte	-128
 2640 0608 C0        		.byte	-64
 2641 0609 E0        		.byte	-32
 2642 060a E0        		.byte	-32
 2643 060b F0        		.byte	-16
 2644 060c F0        		.byte	-16
 2645 060d F0        		.byte	-16
 2646 060e F0        		.byte	-16
 2647 060f F0        		.byte	-16
 2648 0610 F0        		.byte	-16
 2649 0611 F0        		.byte	-16
 2650 0612 F0        		.byte	-16
 2651 0613 F0        		.byte	-16
 2652 0614 F0        		.byte	-16
 2653 0615 E0        		.byte	-32
 2654 0616 E0        		.byte	-32
 2655 0617 C0        		.byte	-64
 2656 0618 C0        		.byte	-64
 2657 0619 80        		.byte	-128
 2658 061a 00        		.byte	0
 2659 061b 00        		.byte	0
 2660 061c 00        		.byte	0
 2661 061d 00        		.byte	0
 2662 061e 00        		.byte	0
 2663 061f 00        		.byte	0
 2664 0620 00        		.byte	0
 2665 0621 00        		.byte	0
 2666 0622 00        		.byte	0
 2667 0623 00        		.byte	0
 2668 0624 F8        		.byte	-8
 2669 0625 FE        		.byte	-2
 2670 0626 FF        		.byte	-1
 2671 0627 FF        		.byte	-1
 2672 0628 FF        		.byte	-1
 2673 0629 1F        		.byte	31
 2674 062a 07        		.byte	7
 2675 062b 03        		.byte	3
 2676 062c 01        		.byte	1
 2677 062d 00        		.byte	0
 2678 062e 00        		.byte	0
 2679 062f 00        		.byte	0
 2680 0630 00        		.byte	0
 2681 0631 00        		.byte	0
 2682 0632 00        		.byte	0
 2683 0633 01        		.byte	1
 2684 0634 01        		.byte	1
 2685 0635 03        		.byte	3
 2686 0636 0F        		.byte	15
 2687 0637 FF        		.byte	-1
 2688 0638 FF        		.byte	-1
 2689 0639 FF        		.byte	-1
 2690 063a FF        		.byte	-1
 2691 063b FC        		.byte	-4
 2692 063c 00        		.byte	0
 2693 063d 00        		.byte	0
 2694 063e 00        		.byte	0
 2695 063f 00        		.byte	0
 2696 0640 00        		.byte	0
 2697 0641 00        		.byte	0
 2698 0642 00        		.byte	0
 2699 0643 00        		.byte	0
 2700 0644 01        		.byte	1
 2701 0645 0F        		.byte	15
 2702 0646 1F        		.byte	31
 2703 0647 3F        		.byte	63
 2704 0648 3F        		.byte	63
 2705 0649 FF        		.byte	-1
 2706 064a FC        		.byte	-4
 2707 064b F8        		.byte	-8
 2708 064c F0        		.byte	-16
 2709 064d E0        		.byte	-32
 2710 064e E0        		.byte	-32
 2711 064f E0        		.byte	-32
 2712 0650 E0        		.byte	-32
 2713 0651 E0        		.byte	-32
 2714 0652 E0        		.byte	-32
 2715 0653 F0        		.byte	-16
 2716 0654 F0        		.byte	-16
 2717 0655 F8        		.byte	-8
 2718 0656 FE        		.byte	-2
 2719 0657 7F        		.byte	127
 2720 0658 3F        		.byte	63
 2721 0659 1F        		.byte	31
 2722 065a 0F        		.byte	15
 2723 065b 07        		.byte	7
 2724 065c 00        		.byte	0
 2725 065d 00        		.byte	0
 2726 065e 00        		.byte	0
 2727 065f 00        		.byte	0
 2728 0660 00        		.byte	0
 2729 0661 00        		.byte	0
 2730 0662 00        		.byte	0
 2731 0663 F0        		.byte	-16
 2732 0664 F8        		.byte	-8
 2733 0665 FC        		.byte	-4
 2734 0666 FE        		.byte	-2
 2735 0667 FF        		.byte	-1
 2736 0668 3F        		.byte	63
 2737 0669 0F        		.byte	15
 2738 066a 07        		.byte	7
 2739 066b 07        		.byte	7
 2740 066c 03        		.byte	3
 2741 066d 03        		.byte	3
 2742 066e 01        		.byte	1
 2743 066f 01        		.byte	1
 2744 0670 01        		.byte	1
 2745 0671 01        		.byte	1
 2746 0672 03        		.byte	3
 2747 0673 03        		.byte	3
 2748 0674 03        		.byte	3
 2749 0675 07        		.byte	7
 2750 0676 0F        		.byte	15
 2751 0677 1F        		.byte	31
 2752 0678 7F        		.byte	127
 2753 0679 FE        		.byte	-2
 2754 067a FE        		.byte	-2
 2755 067b FC        		.byte	-4
 2756 067c F0        		.byte	-16
 2757 067d C0        		.byte	-64
 2758 067e 00        		.byte	0
 2759 067f 00        		.byte	0
 2760 0680 00        		.byte	0
 2761 0681 00        		.byte	0
 2762 0682 0F        		.byte	15
 2763 0683 7F        		.byte	127
 2764 0684 FF        		.byte	-1
 2765 0685 FF        		.byte	-1
 2766 0686 FF        		.byte	-1
 2767 0687 FF        		.byte	-1
 2768 0688 C0        		.byte	-64
 2769 0689 80        		.byte	-128
 2770 068a 00        		.byte	0
 2771 068b 00        		.byte	0
 2772 068c 00        		.byte	0
 2773 068d 00        		.byte	0
 2774 068e 00        		.byte	0
 2775 068f 00        		.byte	0
 2776 0690 00        		.byte	0
 2777 0691 00        		.byte	0
 2778 0692 00        		.byte	0
 2779 0693 00        		.byte	0
 2780 0694 00        		.byte	0
 2781 0695 00        		.byte	0
 2782 0696 00        		.byte	0
 2783 0697 80        		.byte	-128
 2784 0698 E0        		.byte	-32
 2785 0699 FF        		.byte	-1
 2786 069a FF        		.byte	-1
 2787 069b FF        		.byte	-1
 2788 069c FF        		.byte	-1
 2789 069d 3F        		.byte	63
 2790 069e 00        		.byte	0
 2791 069f 00        		.byte	0
 2792 06a0 00        		.byte	0
 2793 06a1 00        		.byte	0
 2794 06a2 00        		.byte	0
 2795 06a3 00        		.byte	0
 2796 06a4 01        		.byte	1
 2797 06a5 03        		.byte	3
 2798 06a6 07        		.byte	7
 2799 06a7 0F        		.byte	15
 2800 06a8 1F        		.byte	31
 2801 06a9 1F        		.byte	31
 2802 06aa 3F        		.byte	63
 2803 06ab 3E        		.byte	62
 2804 06ac 3C        		.byte	60
 2805 06ad 7C        		.byte	124
 2806 06ae 7C        		.byte	124
 2807 06af 7C        		.byte	124
 2808 06b0 7C        		.byte	124
 2809 06b1 7C        		.byte	124
 2810 06b2 7C        		.byte	124
 2811 06b3 3C        		.byte	60
 2812 06b4 3C        		.byte	60
 2813 06b5 3E        		.byte	62
 2814 06b6 3F        		.byte	63
 2815 06b7 1F        		.byte	31
 2816 06b8 1F        		.byte	31
 2817 06b9 0F        		.byte	15
 2818 06ba 07        		.byte	7
 2819 06bb 03        		.byte	3
 2820 06bc 00        		.byte	0
 2821 06bd 00        		.byte	0
 2822 06be 00        		.byte	0
 2823 06bf 00        		.byte	0
 2824 06c0 00        		.byte	0
 2825 06c1 00        		.byte	0
 2826 06c2 00        		.byte	0
 2827 06c3 00        		.byte	0
 2828 06c4 00        		.byte	0
 2829 06c5 00        		.byte	0
 2830 06c6 80        		.byte	-128
 2831 06c7 C0        		.byte	-64
 2832 06c8 C0        		.byte	-64
 2833 06c9 E0        		.byte	-32
 2834 06ca E0        		.byte	-32
 2835 06cb F0        		.byte	-16
 2836 06cc F0        		.byte	-16
 2837 06cd F0        		.byte	-16
 2838 06ce F0        		.byte	-16
 2839 06cf F0        		.byte	-16
 2840 06d0 F0        		.byte	-16
 2841 06d1 F0        		.byte	-16
 2842 06d2 F0        		.byte	-16
 2843 06d3 F0        		.byte	-16
 2844 06d4 F0        		.byte	-16
 2845 06d5 E0        		.byte	-32
 2846 06d6 E0        		.byte	-32
 2847 06d7 C0        		.byte	-64
 2848 06d8 80        		.byte	-128
 2849 06d9 00        		.byte	0
 2850 06da 00        		.byte	0
 2851 06db 00        		.byte	0
 2852 06dc 00        		.byte	0
 2853 06dd 00        		.byte	0
 2854 06de 00        		.byte	0
 2855 06df 00        		.byte	0
 2856 06e0 00        		.byte	0
 2857 06e1 00        		.byte	0
 2858 06e2 00        		.byte	0
 2859 06e3 F0        		.byte	-16
 2860 06e4 FC        		.byte	-4
 2861 06e5 FF        		.byte	-1
 2862 06e6 FF        		.byte	-1
 2863 06e7 FF        		.byte	-1
 2864 06e8 3F        		.byte	63
 2865 06e9 0F        		.byte	15
 2866 06ea 07        		.byte	7
 2867 06eb 03        		.byte	3
 2868 06ec 01        		.byte	1
 2869 06ed 00        		.byte	0
 2870 06ee 00        		.byte	0
 2871 06ef 00        		.byte	0
 2872 06f0 00        		.byte	0
 2873 06f1 00        		.byte	0
 2874 06f2 00        		.byte	0
 2875 06f3 01        		.byte	1
 2876 06f4 01        		.byte	1
 2877 06f5 03        		.byte	3
 2878 06f6 07        		.byte	7
 2879 06f7 1F        		.byte	31
 2880 06f8 FF        		.byte	-1
 2881 06f9 FF        		.byte	-1
 2882 06fa FE        		.byte	-2
 2883 06fb FC        		.byte	-4
 2884 06fc F0        		.byte	-16
 2885 06fd 00        		.byte	0
 2886 06fe 00        		.byte	0
 2887 06ff 00        		.byte	0
 2888 0700 00        		.byte	0
 2889 0701 00        		.byte	0
 2890 0702 07        		.byte	7
 2891 0703 FF        		.byte	-1
 2892 0704 FF        		.byte	-1
 2893 0705 FF        		.byte	-1
 2894 0706 FF        		.byte	-1
 2895 0707 FF        		.byte	-1
 2896 0708 C0        		.byte	-64
 2897 0709 00        		.byte	0
 2898 070a 00        		.byte	0
 2899 070b 00        		.byte	0
 2900 070c 00        		.byte	0
 2901 070d 00        		.byte	0
 2902 070e 00        		.byte	0
 2903 070f 00        		.byte	0
 2904 0710 00        		.byte	0
 2905 0711 00        		.byte	0
 2906 0712 00        		.byte	0
 2907 0713 00        		.byte	0
 2908 0714 00        		.byte	0
 2909 0715 00        		.byte	0
 2910 0716 00        		.byte	0
 2911 0717 C0        		.byte	-64
 2912 0718 FF        		.byte	-1
 2913 0719 FF        		.byte	-1
 2914 071a FF        		.byte	-1
 2915 071b FF        		.byte	-1
 2916 071c FF        		.byte	-1
 2917 071d FF        		.byte	-1
 2918 071e 00        		.byte	0
 2919 071f 00        		.byte	0
 2920 0720 00        		.byte	0
 2921 0721 00        		.byte	0
 2922 0722 00        		.byte	0
 2923 0723 00        		.byte	0
 2924 0724 03        		.byte	3
 2925 0725 07        		.byte	7
 2926 0726 0F        		.byte	15
 2927 0727 1F        		.byte	31
 2928 0728 3F        		.byte	63
 2929 0729 3F        		.byte	63
 2930 072a 7E        		.byte	126
 2931 072b 7C        		.byte	124
 2932 072c 7C        		.byte	124
 2933 072d F8        		.byte	-8
 2934 072e F8        		.byte	-8
 2935 072f F8        		.byte	-8
 2936 0730 78        		.byte	120
 2937 0731 78        		.byte	120
 2938 0732 78        		.byte	120
 2939 0733 7C        		.byte	124
 2940 0734 3C        		.byte	60
 2941 0735 3E        		.byte	62
 2942 0736 1F        		.byte	31
 2943 0737 0F        		.byte	15
 2944 0738 07        		.byte	7
 2945 0739 FF        		.byte	-1
 2946 073a FF        		.byte	-1
 2947 073b FF        		.byte	-1
 2948 073c FF        		.byte	-1
 2949 073d FF        		.byte	-1
 2950 073e 00        		.byte	0
 2951 073f 00        		.byte	0
 2952 0740 00        		.byte	0
 2953 0741 00        		.byte	0
 2954 0742 00        		.byte	0
 2955 0743 30        		.byte	48
 2956 0744 F0        		.byte	-16
 2957 0745 F0        		.byte	-16
 2958 0746 F0        		.byte	-16
 2959 0747 F0        		.byte	-16
 2960 0748 E0        		.byte	-32
 2961 0749 00        		.byte	0
 2962 074a 00        		.byte	0
 2963 074b 00        		.byte	0
 2964 074c 00        		.byte	0
 2965 074d 00        		.byte	0
 2966 074e 00        		.byte	0
 2967 074f 00        		.byte	0
 2968 0750 00        		.byte	0
 2969 0751 00        		.byte	0
 2970 0752 00        		.byte	0
 2971 0753 00        		.byte	0
 2972 0754 00        		.byte	0
 2973 0755 00        		.byte	0
 2974 0756 C0        		.byte	-64
 2975 0757 F0        		.byte	-16
 2976 0758 FF        		.byte	-1
 2977 0759 FF        		.byte	-1
 2978 075a FF        		.byte	-1
 2979 075b 7F        		.byte	127
 2980 075c 1F        		.byte	31
 2981 075d 01        		.byte	1
 2982 075e 00        		.byte	0
 2983 075f 00        		.byte	0
 2984 0760 00        		.byte	0
 2985 0761 00        		.byte	0
 2986 0762 00        		.byte	0
 2987 0763 00        		.byte	0
 2988 0764 01        		.byte	1
 2989 0765 03        		.byte	3
 2990 0766 0F        		.byte	15
 2991 0767 0F        		.byte	15
 2992 0768 1F        		.byte	31
 2993 0769 3F        		.byte	63
 2994 076a 3E        		.byte	62
 2995 076b 3C        		.byte	60
 2996 076c 7C        		.byte	124
 2997 076d 7C        		.byte	124
 2998 076e 7C        		.byte	124
 2999 076f 7C        		.byte	124
 3000 0770 7C        		.byte	124
 3001 0771 7C        		.byte	124
 3002 0772 3C        		.byte	60
 3003 0773 3E        		.byte	62
 3004 0774 3E        		.byte	62
 3005 0775 1F        		.byte	31
 3006 0776 1F        		.byte	31
 3007 0777 0F        		.byte	15
 3008 0778 07        		.byte	7
 3009 0779 03        		.byte	3
 3010 077a 01        		.byte	1
 3011 077b 00        		.byte	0
 3012 077c 00        		.byte	0
 3013 077d 00        		.byte	0
 3014 077e 00        		.byte	0
 3015 077f 00        		.byte	0
 3016               	.global	lil_one
 3019               	lil_one:
 3020 0780 00        		.byte	0
 3021 0781 00        		.byte	0
 3022 0782 C0        		.byte	-64
 3023 0783 F0        		.byte	-16
 3024 0784 F8        		.byte	-8
 3025 0785 38        		.byte	56
 3026 0786 1C        		.byte	28
 3027 0787 0C        		.byte	12
 3028 0788 0C        		.byte	12
 3029 0789 0C        		.byte	12
 3030 078a 1C        		.byte	28
 3031 078b 38        		.byte	56
 3032 078c F0        		.byte	-16
 3033 078d E0        		.byte	-32
 3034 078e 80        		.byte	-128
 3035 078f 00        		.byte	0
 3036 0790 00        		.byte	0
 3037 0791 38        		.byte	56
 3038 0792 FF        		.byte	-1
 3039 0793 FF        		.byte	-1
 3040 0794 00        		.byte	0
 3041 0795 00        		.byte	0
 3042 0796 00        		.byte	0
 3043 0797 00        		.byte	0
 3044 0798 00        		.byte	0
 3045 0799 00        		.byte	0
 3046 079a 00        		.byte	0
 3047 079b 00        		.byte	0
 3048 079c 87        		.byte	-121
 3049 079d FF        		.byte	-1
 3050 079e FF        		.byte	-1
 3051 079f 00        		.byte	0
 3052 07a0 00        		.byte	0
 3053 07a1 00        		.byte	0
 3054 07a2 0F        		.byte	15
 3055 07a3 1F        		.byte	31
 3056 07a4 3C        		.byte	60
 3057 07a5 70        		.byte	112
 3058 07a6 60        		.byte	96
 3059 07a7 E0        		.byte	-32
 3060 07a8 E0        		.byte	-32
 3061 07a9 E0        		.byte	-32
 3062 07aa 60        		.byte	96
 3063 07ab 70        		.byte	112
 3064 07ac 3F        		.byte	63
 3065 07ad 1F        		.byte	31
 3066 07ae 07        		.byte	7
 3067 07af 00        		.byte	0
 3068 07b0 00        		.byte	0
 3069 07b1 00        		.byte	0
 3070 07b2 00        		.byte	0
 3071 07b3 80        		.byte	-128
 3072 07b4 80        		.byte	-128
 3073 07b5 C0        		.byte	-64
 3074 07b6 C0        		.byte	-64
 3075 07b7 E0        		.byte	-32
 3076 07b8 70        		.byte	112
 3077 07b9 FC        		.byte	-4
 3078 07ba FC        		.byte	-4
 3079 07bb 00        		.byte	0
 3080 07bc 00        		.byte	0
 3081 07bd 00        		.byte	0
 3082 07be 00        		.byte	0
 3083 07bf 00        		.byte	0
 3084 07c0 00        		.byte	0
 3085 07c1 00        		.byte	0
 3086 07c2 00        		.byte	0
 3087 07c3 03        		.byte	3
 3088 07c4 01        		.byte	1
 3089 07c5 01        		.byte	1
 3090 07c6 00        		.byte	0
 3091 07c7 00        		.byte	0
 3092 07c8 00        		.byte	0
 3093 07c9 FF        		.byte	-1
 3094 07ca FF        		.byte	-1
 3095 07cb 00        		.byte	0
 3096 07cc 00        		.byte	0
 3097 07cd 00        		.byte	0
 3098 07ce 00        		.byte	0
 3099 07cf 00        		.byte	0
 3100 07d0 00        		.byte	0
 3101 07d1 00        		.byte	0
 3102 07d2 00        		.byte	0
 3103 07d3 00        		.byte	0
 3104 07d4 00        		.byte	0
 3105 07d5 00        		.byte	0
 3106 07d6 00        		.byte	0
 3107 07d7 00        		.byte	0
 3108 07d8 00        		.byte	0
 3109 07d9 7F        		.byte	127
 3110 07da 7F        		.byte	127
 3111 07db 00        		.byte	0
 3112 07dc 00        		.byte	0
 3113 07dd 00        		.byte	0
 3114 07de 00        		.byte	0
 3115 07df 00        		.byte	0
 3116 07e0 00        		.byte	0
 3117 07e1 00        		.byte	0
 3118 07e2 E0        		.byte	-32
 3119 07e3 F0        		.byte	-16
 3120 07e4 78        		.byte	120
 3121 07e5 18        		.byte	24
 3122 07e6 1C        		.byte	28
 3123 07e7 0C        		.byte	12
 3124 07e8 0C        		.byte	12
 3125 07e9 0C        		.byte	12
 3126 07ea 1C        		.byte	28
 3127 07eb 18        		.byte	24
 3128 07ec F8        		.byte	-8
 3129 07ed F0        		.byte	-16
 3130 07ee E0        		.byte	-32
 3131 07ef 00        		.byte	0
 3132 07f0 00        		.byte	0
 3133 07f1 00        		.byte	0
 3134 07f2 00        		.byte	0
 3135 07f3 00        		.byte	0
 3136 07f4 00        		.byte	0
 3137 07f5 00        		.byte	0
 3138 07f6 80        		.byte	-128
 3139 07f7 80        		.byte	-128
 3140 07f8 C0        		.byte	-64
 3141 07f9 E0        		.byte	-32
 3142 07fa 70        		.byte	112
 3143 07fb 38        		.byte	56
 3144 07fc 1F        		.byte	31
 3145 07fd 0F        		.byte	15
 3146 07fe 07        		.byte	7
 3147 07ff 00        		.byte	0
 3148 0800 00        		.byte	0
 3149 0801 60        		.byte	96
 3150 0802 78        		.byte	120
 3151 0803 7C        		.byte	124
 3152 0804 7E        		.byte	126
 3153 0805 6F        		.byte	111
 3154 0806 67        		.byte	103
 3155 0807 63        		.byte	99
 3156 0808 61        		.byte	97
 3157 0809 60        		.byte	96
 3158 080a 60        		.byte	96
 3159 080b 60        		.byte	96
 3160 080c 60        		.byte	96
 3161 080d 60        		.byte	96
 3162 080e 60        		.byte	96
 3163 080f 00        		.byte	0
 3164 0810 00        		.byte	0
 3165 0811 00        		.byte	0
 3166 0812 E0        		.byte	-32
 3167 0813 F0        		.byte	-16
 3168 0814 78        		.byte	120
 3169 0815 18        		.byte	24
 3170 0816 1C        		.byte	28
 3171 0817 0C        		.byte	12
 3172 0818 0C        		.byte	12
 3173 0819 0C        		.byte	12
 3174 081a 1C        		.byte	28
 3175 081b 78        		.byte	120
 3176 081c F0        		.byte	-16
 3177 081d E0        		.byte	-32
 3178 081e 00        		.byte	0
 3179 081f 00        		.byte	0
 3180 0820 00        		.byte	0
 3181 0821 00        		.byte	0
 3182 0822 00        		.byte	0
 3183 0823 00        		.byte	0
 3184 0824 00        		.byte	0
 3185 0825 00        		.byte	0
 3186 0826 00        		.byte	0
 3187 0827 18        		.byte	24
 3188 0828 18        		.byte	24
 3189 0829 18        		.byte	24
 3190 082a 1C        		.byte	28
 3191 082b 3F        		.byte	63
 3192 082c F7        		.byte	-9
 3193 082d E3        		.byte	-29
 3194 082e C0        		.byte	-64
 3195 082f 00        		.byte	0
 3196 0830 00        		.byte	0
 3197 0831 00        		.byte	0
 3198 0832 1C        		.byte	28
 3199 0833 3E        		.byte	62
 3200 0834 78        		.byte	120
 3201 0835 70        		.byte	112
 3202 0836 60        		.byte	96
 3203 0837 E0        		.byte	-32
 3204 0838 E0        		.byte	-32
 3205 0839 E0        		.byte	-32
 3206 083a 60        		.byte	96
 3207 083b 70        		.byte	112
 3208 083c 3C        		.byte	60
 3209 083d 3F        		.byte	63
 3210 083e 0F        		.byte	15
 3211 083f 00        		.byte	0
 3212 0840 00        		.byte	0
 3213 0841 00        		.byte	0
 3214 0842 00        		.byte	0
 3215 0843 00        		.byte	0
 3216 0844 00        		.byte	0
 3217 0845 00        		.byte	0
 3218 0846 80        		.byte	-128
 3219 0847 C0        		.byte	-64
 3220 0848 E0        		.byte	-32
 3221 0849 78        		.byte	120
 3222 084a FC        		.byte	-4
 3223 084b FC        		.byte	-4
 3224 084c 00        		.byte	0
 3225 084d 00        		.byte	0
 3226 084e 00        		.byte	0
 3227 084f 00        		.byte	0
 3228 0850 00        		.byte	0
 3229 0851 80        		.byte	-128
 3230 0852 E0        		.byte	-32
 3231 0853 70        		.byte	112
 3232 0854 3C        		.byte	60
 3233 0855 0E        		.byte	14
 3234 0856 07        		.byte	7
 3235 0857 03        		.byte	3
 3236 0858 00        		.byte	0
 3237 0859 00        		.byte	0
 3238 085a FF        		.byte	-1
 3239 085b FF        		.byte	-1
 3240 085c 00        		.byte	0
 3241 085d 00        		.byte	0
 3242 085e 00        		.byte	0
 3243 085f 00        		.byte	0
 3244 0860 00        		.byte	0
 3245 0861 03        		.byte	3
 3246 0862 03        		.byte	3
 3247 0863 03        		.byte	3
 3248 0864 03        		.byte	3
 3249 0865 03        		.byte	3
 3250 0866 03        		.byte	3
 3251 0867 03        		.byte	3
 3252 0868 03        		.byte	3
 3253 0869 03        		.byte	3
 3254 086a 7F        		.byte	127
 3255 086b 7F        		.byte	127
 3256 086c 03        		.byte	3
 3257 086d 03        		.byte	3
 3258 086e 03        		.byte	3
 3259 086f 00        		.byte	0
 3260 0870 00        		.byte	0
 3261 0871 00        		.byte	0
 3262 0872 00        		.byte	0
 3263 0873 E0        		.byte	-32
 3264 0874 FC        		.byte	-4
 3265 0875 FC        		.byte	-4
 3266 0876 1C        		.byte	28
 3267 0877 1C        		.byte	28
 3268 0878 1C        		.byte	28
 3269 0879 1C        		.byte	28
 3270 087a 1C        		.byte	28
 3271 087b 1C        		.byte	28
 3272 087c 1C        		.byte	28
 3273 087d 1C        		.byte	28
 3274 087e 00        		.byte	0
 3275 087f 00        		.byte	0
 3276 0880 00        		.byte	0
 3277 0881 00        		.byte	0
 3278 0882 1C        		.byte	28
 3279 0883 1F        		.byte	31
 3280 0884 1F        		.byte	31
 3281 0885 0C        		.byte	12
 3282 0886 0C        		.byte	12
 3283 0887 0E        		.byte	14
 3284 0888 0E        		.byte	14
 3285 0889 0E        		.byte	14
 3286 088a 0E        		.byte	14
 3287 088b 1C        		.byte	28
 3288 088c 7C        		.byte	124
 3289 088d F8        		.byte	-8
 3290 088e F0        		.byte	-16
 3291 088f 00        		.byte	0
 3292 0890 00        		.byte	0
 3293 0891 00        		.byte	0
 3294 0892 1C        		.byte	28
 3295 0893 3C        		.byte	60
 3296 0894 78        		.byte	120
 3297 0895 70        		.byte	112
 3298 0896 60        		.byte	96
 3299 0897 E0        		.byte	-32
 3300 0898 E0        		.byte	-32
 3301 0899 60        		.byte	96
 3302 089a 60        		.byte	96
 3303 089b 70        		.byte	112
 3304 089c 3C        		.byte	60
 3305 089d 1F        		.byte	31
 3306 089e 0F        		.byte	15
 3307 089f 00        		.byte	0
 3308 08a0 00        		.byte	0
 3309 08a1 00        		.byte	0
 3310 08a2 C0        		.byte	-64
 3311 08a3 E0        		.byte	-32
 3312 08a4 F0        		.byte	-16
 3313 08a5 38        		.byte	56
 3314 08a6 1C        		.byte	28
 3315 08a7 0C        		.byte	12
 3316 08a8 0C        		.byte	12
 3317 08a9 0C        		.byte	12
 3318 08aa 1C        		.byte	28
 3319 08ab 18        		.byte	24
 3320 08ac 78        		.byte	120
 3321 08ad 70        		.byte	112
 3322 08ae 40        		.byte	64
 3323 08af 00        		.byte	0
 3324 08b0 00        		.byte	0
 3325 08b1 FC        		.byte	-4
 3326 08b2 FF        		.byte	-1
 3327 08b3 FF        		.byte	-1
 3328 08b4 70        		.byte	112
 3329 08b5 18        		.byte	24
 3330 08b6 0C        		.byte	12
 3331 08b7 0C        		.byte	12
 3332 08b8 0C        		.byte	12
 3333 08b9 0C        		.byte	12
 3334 08ba 0C        		.byte	12
 3335 08bb 1C        		.byte	28
 3336 08bc 78        		.byte	120
 3337 08bd F8        		.byte	-8
 3338 08be E0        		.byte	-32
 3339 08bf 00        		.byte	0
 3340 08c0 00        		.byte	0
 3341 08c1 00        		.byte	0
 3342 08c2 0F        		.byte	15
 3343 08c3 1F        		.byte	31
 3344 08c4 3C        		.byte	60
 3345 08c5 70        		.byte	112
 3346 08c6 60        		.byte	96
 3347 08c7 60        		.byte	96
 3348 08c8 E0        		.byte	-32
 3349 08c9 E0        		.byte	-32
 3350 08ca 60        		.byte	96
 3351 08cb 70        		.byte	112
 3352 08cc 3C        		.byte	60
 3353 08cd 3F        		.byte	63
 3354 08ce 0F        		.byte	15
 3355 08cf 00        		.byte	0
 3356 08d0 00        		.byte	0
 3357 08d1 00        		.byte	0
 3358 08d2 1C        		.byte	28
 3359 08d3 1C        		.byte	28
 3360 08d4 1C        		.byte	28
 3361 08d5 1C        		.byte	28
 3362 08d6 1C        		.byte	28
 3363 08d7 1C        		.byte	28
 3364 08d8 1C        		.byte	28
 3365 08d9 1C        		.byte	28
 3366 08da 9C        		.byte	-100
 3367 08db FC        		.byte	-4
 3368 08dc FC        		.byte	-4
 3369 08dd 7C        		.byte	124
 3370 08de 1C        		.byte	28
 3371 08df 00        		.byte	0
 3372 08e0 00        		.byte	0
 3373 08e1 00        		.byte	0
 3374 08e2 00        		.byte	0
 3375 08e3 00        		.byte	0
 3376 08e4 00        		.byte	0
 3377 08e5 00        		.byte	0
 3378 08e6 C0        		.byte	-64
 3379 08e7 F0        		.byte	-16
 3380 08e8 FC        		.byte	-4
 3381 08e9 3F        		.byte	63
 3382 08ea 0F        		.byte	15
 3383 08eb 03        		.byte	3
 3384 08ec 00        		.byte	0
 3385 08ed 00        		.byte	0
 3386 08ee 00        		.byte	0
 3387 08ef 00        		.byte	0
 3388 08f0 00        		.byte	0
 3389 08f1 00        		.byte	0
 3390 08f2 00        		.byte	0
 3391 08f3 00        		.byte	0
 3392 08f4 00        		.byte	0
 3393 08f5 7E        		.byte	126
 3394 08f6 7F        		.byte	127
 3395 08f7 1F        		.byte	31
 3396 08f8 01        		.byte	1
 3397 08f9 00        		.byte	0
 3398 08fa 00        		.byte	0
 3399 08fb 00        		.byte	0
 3400 08fc 00        		.byte	0
 3401 08fd 00        		.byte	0
 3402 08fe 00        		.byte	0
 3403 08ff 00        		.byte	0
 3404 0900 00        		.byte	0
 3405 0901 00        		.byte	0
 3406 0902 C0        		.byte	-64
 3407 0903 F0        		.byte	-16
 3408 0904 F8        		.byte	-8
 3409 0905 38        		.byte	56
 3410 0906 1C        		.byte	28
 3411 0907 0C        		.byte	12
 3412 0908 0C        		.byte	12
 3413 0909 0C        		.byte	12
 3414 090a 1C        		.byte	28
 3415 090b 38        		.byte	56
 3416 090c F8        		.byte	-8
 3417 090d F0        		.byte	-16
 3418 090e 00        		.byte	0
 3419 090f 00        		.byte	0
 3420 0910 00        		.byte	0
 3421 0911 00        		.byte	0
 3422 0912 C1        		.byte	-63
 3423 0913 E7        		.byte	-25
 3424 0914 77        		.byte	119
 3425 0915 3E        		.byte	62
 3426 0916 1C        		.byte	28
 3427 0917 18        		.byte	24
 3428 0918 18        		.byte	24
 3429 0919 18        		.byte	24
 3430 091a 1C        		.byte	28
 3431 091b 3E        		.byte	62
 3432 091c F7        		.byte	-9
 3433 091d E3        		.byte	-29
 3434 091e C0        		.byte	-64
 3435 091f 00        		.byte	0
 3436 0920 00        		.byte	0
 3437 0921 03        		.byte	3
 3438 0922 1F        		.byte	31
 3439 0923 3F        		.byte	63
 3440 0924 78        		.byte	120
 3441 0925 70        		.byte	112
 3442 0926 60        		.byte	96
 3443 0927 E0        		.byte	-32
 3444 0928 E0        		.byte	-32
 3445 0929 E0        		.byte	-32
 3446 092a 60        		.byte	96
 3447 092b 70        		.byte	112
 3448 092c 78        		.byte	120
 3449 092d 3F        		.byte	63
 3450 092e 0F        		.byte	15
 3451 092f 00        		.byte	0
 3452 0930 00        		.byte	0
 3453 0931 00        		.byte	0
 3454 0932 E0        		.byte	-32
 3455 0933 F0        		.byte	-16
 3456 0934 78        		.byte	120
 3457 0935 38        		.byte	56
 3458 0936 1C        		.byte	28
 3459 0937 0C        		.byte	12
 3460 0938 0C        		.byte	12
 3461 0939 0C        		.byte	12
 3462 093a 1C        		.byte	28
 3463 093b 38        		.byte	56
 3464 093c F0        		.byte	-16
 3465 093d E0        		.byte	-32
 3466 093e C0        		.byte	-64
 3467 093f 00        		.byte	0
 3468 0940 00        		.byte	0
 3469 0941 03        		.byte	3
 3470 0942 1F        		.byte	31
 3471 0943 3F        		.byte	63
 3472 0944 78        		.byte	120
 3473 0945 E0        		.byte	-32
 3474 0946 E0        		.byte	-32
 3475 0947 C0        		.byte	-64
 3476 0948 C0        		.byte	-64
 3477 0949 C0        		.byte	-64
 3478 094a 60        		.byte	96
 3479 094b 70        		.byte	112
 3480 094c 3F        		.byte	63
 3481 094d FF        		.byte	-1
 3482 094e FF        		.byte	-1
 3483 094f 00        		.byte	0
 3484 0950 00        		.byte	0
 3485 0951 00        		.byte	0
 3486 0952 1C        		.byte	28
 3487 0953 3C        		.byte	60
 3488 0954 78        		.byte	120
 3489 0955 60        		.byte	96
 3490 0956 E0        		.byte	-32
 3491 0957 E0        		.byte	-32
 3492 0958 E0        		.byte	-32
 3493 0959 60        		.byte	96
 3494 095a 60        		.byte	96
 3495 095b 78        		.byte	120
 3496 095c 3F        		.byte	63
 3497 095d 1F        		.byte	31
 3498 095e 07        		.byte	7
 3499 095f 00        		.byte	0
 3500               	.global	menu
 3503               	menu:
 3504 0960 80        		.byte	-128
 3505 0961 80        		.byte	-128
 3506 0962 80        		.byte	-128
 3507 0963 80        		.byte	-128
 3508 0964 EF        		.byte	-17
 3509 0965 C9        		.byte	-55
 3510 0966 FB        		.byte	-5
 3511 0967 80        		.byte	-128
 3512 0968 FF        		.byte	-1
 3513 0969 89        		.byte	-119
 3514 096a 8F        		.byte	-113
 3515 096b 80        		.byte	-128
 3516 096c FF        		.byte	-1
 3517 096d C9        		.byte	-55
 3518 096e C1        		.byte	-63
 3519 096f 80        		.byte	-128
 3520 0970 FF        		.byte	-1
 3521 0971 C9        		.byte	-55
 3522 0972 C1        		.byte	-63
 3523 0973 80        		.byte	-128
 3524 0974 FF        		.byte	-1
 3525 0975 C1        		.byte	-63
 3526 0976 BE        		.byte	-66
 3527 0977 80        		.byte	-128
 3528 0978 80        		.byte	-128
 3529 0979 80        		.byte	-128
 3530 097a 80        		.byte	-128
 3531 097b 80        		.byte	-128
 3532 097c C0        		.byte	-64
 3533 097d F0        		.byte	-16
 3534 097e FF        		.byte	-1
 3535 097f 80        		.byte	-128
 3536 0980 80        		.byte	-128
 3537 0981 80        		.byte	-128
 3538 0982 80        		.byte	-128
 3539 0983 80        		.byte	-128
 3540 0984 FF        		.byte	-1
 3541 0985 C1        		.byte	-63
 3542 0986 BE        		.byte	-66
 3543 0987 80        		.byte	-128
 3544 0988 C1        		.byte	-63
 3545 0989 FF        		.byte	-1
 3546 098a C1        		.byte	-63
 3547 098b 80        		.byte	-128
 3548 098c EF        		.byte	-17
 3549 098d C9        		.byte	-55
 3550 098e FB        		.byte	-5
 3551 098f 80        		.byte	-128
 3552 0990 81        		.byte	-127
 3553 0991 FF        		.byte	-1
 3554 0992 81        		.byte	-127
 3555 0993 80        		.byte	-128
 3556 0994 80        		.byte	-128
 3557 0995 80        		.byte	-128
 3558 0996 80        		.byte	-128
 3559 0997 80        		.byte	-128
 3560 0998 C0        		.byte	-64
 3561 0999 F0        		.byte	-16
 3562 099a FF        		.byte	-1
 3563 099b 80        		.byte	-128
 3564 099c 80        		.byte	-128
 3565 099d 80        		.byte	-128
 3566 099e 80        		.byte	-128
 3567 099f 80        		.byte	-128
 3568 09a0 FF        		.byte	-1
 3569 09a1 89        		.byte	-119
 3570 09a2 FF        		.byte	-1
 3571 09a3 80        		.byte	-128
 3572 09a4 BE        		.byte	-66
 3573 09a5 C1        		.byte	-63
 3574 09a6 A2        		.byte	-94
 3575 09a7 80        		.byte	-128
 3576 09a8 BE        		.byte	-66
 3577 09a9 C1        		.byte	-63
 3578 09aa A2        		.byte	-94
 3579 09ab 80        		.byte	-128
 3580 09ac FF        		.byte	-1
 3581 09ad C9        		.byte	-55
 3582 09ae C1        		.byte	-63
 3583 09af 80        		.byte	-128
 3584 09b0 FF        		.byte	-1
 3585 09b1 C0        		.byte	-64
 3586 09b2 E0        		.byte	-32
 3587 09b3 80        		.byte	-128
 3588 09b4 80        		.byte	-128
 3589 09b5 80        		.byte	-128
 3590 09b6 80        		.byte	-128
 3591 09b7 80        		.byte	-128
 3592 09b8 C0        		.byte	-64
 3593 09b9 F0        		.byte	-16
 3594 09ba FF        		.byte	-1
 3595 09bb 80        		.byte	-128
 3596 09bc 80        		.byte	-128
 3597 09bd 80        		.byte	-128
 3598 09be 80        		.byte	-128
 3599 09bf 80        		.byte	-128
 3600 09c0 C0        		.byte	-64
 3601 09c1 F0        		.byte	-16
 3602 09c2 FF        		.byte	-1
 3603 09c3 80        		.byte	-128
 3604 09c4 80        		.byte	-128
 3605 09c5 80        		.byte	-128
 3606 09c6 C0        		.byte	-64
 3607 09c7 F0        		.byte	-16
 3608 09c8 FF        		.byte	-1
 3609 09c9 80        		.byte	-128
 3610 09ca C0        		.byte	-64
 3611 09cb F0        		.byte	-16
 3612 09cc FF        		.byte	-1
 3613 09cd 80        		.byte	-128
 3614 09ce C0        		.byte	-64
 3615 09cf F0        		.byte	-16
 3616 09d0 FF        		.byte	-1
 3617 09d1 80        		.byte	-128
 3618 09d2 C0        		.byte	-64
 3619 09d3 F0        		.byte	-16
 3620 09d4 FF        		.byte	-1
 3621 09d5 80        		.byte	-128
 3622               	.global	mode
 3623               	.global	mode
 3624               		.section .bss
 3627               	mode:
 3628 0000 00        		.skip 1,0
 3633               		.text
 3635               	.Letext0:
 3636               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 biCycles.c
     /tmp/cc0HDeCf.s:2      *ABS*:0000003f __SREG__
     /tmp/cc0HDeCf.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc0HDeCf.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc0HDeCf.s:5      *ABS*:00000034 __CCP__
     /tmp/cc0HDeCf.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc0HDeCf.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc0HDeCf.s:98     .text:00000000 lcd_spi_init
     /tmp/cc0HDeCf.s:129    .text:0000000e lcd_spi_command
     /tmp/cc0HDeCf.s:166    .text:0000001e lcd_spi_data
     /tmp/cc0HDeCf.s:202    .text:0000002e lcd_init
     /tmp/cc0HDeCf.s:359    .text:000000a8 lcd_draw
     /tmp/cc0HDeCf.s:408    .text:000000de lcd_col
     /tmp/cc0HDeCf.s:440    .text:000000f8 lcd_clear
     /tmp/cc0HDeCf.s:491    .text:00000120 lcd_draw_menu
     /tmp/cc0HDeCf.s:3627   .bss:00000000 mode
     /tmp/cc0HDeCf.s:3503   .progmem.data:00000960 menu
     /tmp/cc0HDeCf.s:668    .text:000001d0 __vector_5
     /tmp/cc0HDeCf.s:739    .text:00000232 lcd_draw_bignum
     /tmp/cc0HDeCf.s:1095   .progmem.data:00000000 big_one
     /tmp/cc0HDeCf.s:844    .text:000002ae lcd_draw_lilnum
     /tmp/cc0HDeCf.s:3019   .progmem.data:00000780 lil_one
     /tmp/cc0HDeCf.s:947    .text:00000326 main

UNDEFINED SYMBOLS
__divmodhi4
__do_clear_bss
