   1               		.file	"biCycles.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
  96               	.global	lcd_spi_init
  98               	lcd_spi_init:
  99               		.stabd	46,0,0
   1:biCycles.c    **** //      biCycles.c
   2:biCycles.c    **** //      
   3:biCycles.c    **** //      Copyright 2011 Josh <muffin@josh-laptop>
   4:biCycles.c    **** //      
   5:biCycles.c    **** //      This program is free software; you can redistribute it and/or modify
   6:biCycles.c    **** //      it under the terms of the GNU General Public License as published by
   7:biCycles.c    **** //      the Free Software Foundation; either version 2 of the License, or
   8:biCycles.c    **** //      (at your option) any later version.
   9:biCycles.c    **** //      
  10:biCycles.c    **** //      This program is distributed in the hope that it will be useful,
  11:biCycles.c    **** //      but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:biCycles.c    **** //      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:biCycles.c    **** //      GNU General Public License for more details.
  14:biCycles.c    **** //      
  15:biCycles.c    **** //      You should have received a copy of the GNU General Public License
  16:biCycles.c    **** //      along with this program; if not, write to the Free Software
  17:biCycles.c    **** //      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  18:biCycles.c    **** //      MA 02110-1301, USA.
  19:biCycles.c    **** 
  20:biCycles.c    **** #define LCD_SPI_data()		(PORTB |=(1<<1))
  21:biCycles.c    **** #define LCD_SPI_command()	(PORTB &= ~(1<<1))
  22:biCycles.c    **** #define LCD_SPI_CS_High()	(PORTB |= (1<<0))
  23:biCycles.c    **** #define LCD_SPI_CS_Low()	(PORTB &= ~(1<<0))
  24:biCycles.c    **** #define LCD_page(page)		(lcd_spi_command(0xb0+page))
  25:biCycles.c    **** #define MEM_read(byte)	(pgm_read_byte(&(byte)))
  26:biCycles.c    **** #define LCD_RESET 0x04
  27:biCycles.c    **** #define F_CPU 8000000UL
  28:biCycles.c    **** 
  29:biCycles.c    **** #include <avr/interrupt.h>
  30:biCycles.c    **** #include <util/delay.h>
  31:biCycles.c    **** #include <stdlib.h>
  32:biCycles.c    **** #include "graphics.h"
  33:biCycles.c    **** 
  34:biCycles.c    **** void lcd_spi_init(void);
  35:biCycles.c    **** void lcd_spi_command(unsigned char command);
  36:biCycles.c    **** void lcd_spi_data(unsigned char data);
  37:biCycles.c    **** void lcd_init(void);
  38:biCycles.c    **** void lcd_draw(unsigned char page, unsigned char col, unsigned char data);
  39:biCycles.c    **** void lcd_col(unsigned char col);
  40:biCycles.c    **** void lcd_clear(void);
  41:biCycles.c    **** void lcd_draw_menu(void);
  42:biCycles.c    **** void lcd_draw_bignum(unsigned char digit, unsigned char num);
  43:biCycles.c    **** void lcd_draw_lilnum(unsigned char digit, unsigned char num);
  44:biCycles.c    **** 
  45:biCycles.c    **** volatile char mode = 0;
  46:biCycles.c    **** 
  47:biCycles.c    **** ISR(PCINT2_vect)
  48:biCycles.c    **** {
  49:biCycles.c    **** 	if(PIND==0x00)
  50:biCycles.c    **** 	{
  51:biCycles.c    **** 		mode=(mode+1)%3;
  52:biCycles.c    **** 		lcd_draw_menu();
  53:biCycles.c    **** 	}
  54:biCycles.c    **** }
  55:biCycles.c    **** 
  56:biCycles.c    **** int main(void)
  57:biCycles.c    **** {
  58:biCycles.c    **** 	DDRD &= ~0x01;
  59:biCycles.c    **** 	PORTD |= 0x01;
  60:biCycles.c    **** 	DDRB = 0xFF;
  61:biCycles.c    **** 	PCICR = (1<<2);
  62:biCycles.c    **** 	PCMSK2 = 0x01;
  63:biCycles.c    **** 	lcd_init();
  64:biCycles.c    **** 	lcd_clear();
  65:biCycles.c    **** 	lcd_draw_menu();
  66:biCycles.c    **** 	sei();
  67:biCycles.c    **** 	while(1==1)
  68:biCycles.c    **** 	{
  69:biCycles.c    **** 		for (int x=0;x<0xff;x++)
  70:biCycles.c    **** 		{
  71:biCycles.c    **** 
  72:biCycles.c    **** 			lcd_draw_menu();
  73:biCycles.c    **** 			_delay_ms(500);
  74:biCycles.c    **** 		}
  75:biCycles.c    **** 	}
  76:biCycles.c    **** }
  77:biCycles.c    **** 
  78:biCycles.c    **** void lcd_spi_init(void)
  79:biCycles.c    **** {
 101               	.LM0:
 102               	.LFBB1:
 103               	/* prologue: function */
 104               	/* frame size = 0 */
  80:biCycles.c    **** 	//set SPI enable, master, MSB first, CPOL=0, CPHA=0, f/2
  81:biCycles.c    **** 	SPCR = (1<<6)|(1<<4)|(0<<0);
 106               	.LM1:
 107 0000 80E5      		ldi r24,lo8(80)
 108 0002 8CBD      		out 76-32,r24
  82:biCycles.c    **** 	SPSR |= (1<<0);
 110               	.LM2:
 111 0004 8DB5      		in r24,77-32
 112 0006 8160      		ori r24,lo8(1)
 113 0008 8DBD      		out 77-32,r24
  83:biCycles.c    **** 	//bring CS high
  84:biCycles.c    **** 	LCD_SPI_CS_High();
 115               	.LM3:
 116 000a 289A      		sbi 37-32,0
 117               	/* epilogue start */
  85:biCycles.c    **** }
 119               	.LM4:
 120 000c 0895      		ret
 122               	.Lscope1:
 124               		.stabd	78,0,0
 127               	.global	lcd_spi_command
 129               	lcd_spi_command:
 130               		.stabd	46,0,0
  86:biCycles.c    **** 
  87:biCycles.c    **** void lcd_spi_command(unsigned char command)
  88:biCycles.c    **** {
 132               	.LM5:
 133               	.LFBB2:
 134               	/* prologue: function */
 135               	/* frame size = 0 */
  89:biCycles.c    **** 	LCD_SPI_command();
 137               	.LM6:
 138 000e 2998      		cbi 37-32,1
  90:biCycles.c    **** 	//_delay_us(2);
  91:biCycles.c    **** 	LCD_SPI_CS_Low();
 140               	.LM7:
 141 0010 2898      		cbi 37-32,0
  92:biCycles.c    **** 	SPDR = command;
 143               	.LM8:
 144 0012 8EBD      		out 78-32,r24
 145               	.L4:
  93:biCycles.c    **** 	while (!(SPSR & (1<<SPIF)))
 147               	.LM9:
 148 0014 0DB4      		in __tmp_reg__,77-32
 149 0016 07FE      		sbrs __tmp_reg__,7
 150 0018 00C0      		rjmp .L4
  94:biCycles.c    **** 	{}
  95:biCycles.c    **** 	LCD_SPI_CS_High();
 152               	.LM10:
 153 001a 289A      		sbi 37-32,0
 154               	/* epilogue start */
  96:biCycles.c    **** }
 156               	.LM11:
 157 001c 0895      		ret
 159               	.Lscope2:
 161               		.stabd	78,0,0
 164               	.global	lcd_spi_data
 166               	lcd_spi_data:
 167               		.stabd	46,0,0
  97:biCycles.c    **** 
  98:biCycles.c    **** void lcd_spi_data(unsigned char data)
  99:biCycles.c    **** {
 169               	.LM12:
 170               	.LFBB3:
 171               	/* prologue: function */
 172               	/* frame size = 0 */
 100:biCycles.c    **** 	LCD_SPI_data();
 174               	.LM13:
 175 001e 299A      		sbi 37-32,1
 101:biCycles.c    **** 	//_delay_us(2);
 102:biCycles.c    **** 	LCD_SPI_CS_Low();
 177               	.LM14:
 178 0020 2898      		cbi 37-32,0
 103:biCycles.c    **** 	SPDR = data;
 180               	.LM15:
 181 0022 8EBD      		out 78-32,r24
 182               	.L8:
 104:biCycles.c    **** 	while (!(SPSR & (1<<SPIF)))
 184               	.LM16:
 185 0024 0DB4      		in __tmp_reg__,77-32
 186 0026 07FE      		sbrs __tmp_reg__,7
 187 0028 00C0      		rjmp .L8
 105:biCycles.c    **** 	{}
 106:biCycles.c    **** 	LCD_SPI_CS_High();
 189               	.LM17:
 190 002a 289A      		sbi 37-32,0
 191               	/* epilogue start */
 107:biCycles.c    **** }
 193               	.LM18:
 194 002c 0895      		ret
 196               	.Lscope3:
 198               		.stabd	78,0,0
 200               	.global	lcd_init
 202               	lcd_init:
 203               		.stabd	46,0,0
 108:biCycles.c    **** 
 109:biCycles.c    **** void lcd_init(void)
 110:biCycles.c    **** {
 205               	.LM19:
 206               	.LFBB4:
 207               	/* prologue: function */
 208               	/* frame size = 0 */
 209               	.LBB27:
 210               	.LBB28:
  81:biCycles.c    **** 	SPCR = (1<<6)|(1<<4)|(0<<0);
 212               	.LM20:
 213 002e 80E5      		ldi r24,lo8(80)
 214 0030 8CBD      		out 76-32,r24
  82:biCycles.c    **** 	SPSR |= (1<<0);
 216               	.LM21:
 217 0032 8DB5      		in r24,77-32
 218 0034 8160      		ori r24,lo8(1)
 219 0036 8DBD      		out 77-32,r24
  84:biCycles.c    **** 	LCD_SPI_CS_High();
 221               	.LM22:
 222 0038 289A      		sbi 37-32,0
 223               	.LBE28:
 224               	.LBE27:
 111:biCycles.c    **** 	lcd_spi_init();
 112:biCycles.c    **** 	//reset lcd
 113:biCycles.c    **** 	PORTB &= ~(LCD_RESET);
 226               	.LM23:
 227 003a 2A98      		cbi 37-32,2
 228 003c 80ED      		ldi r24,lo8(2000)
 229 003e 97E0      		ldi r25,hi8(2000)
 230               	.LBB29:
 231               	.LBB30:
 232               	.LBB31:
 233               	.LBB32:
 235               	.Ltext1:
   1:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
   5:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
   8:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  11:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      distribution.
  15:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  16:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  20:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  32:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  34:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  37:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  39:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \file */
  40:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     \code
  42:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     \endcode
  44:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  45:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  53:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  60:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  62:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** */
  63:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  64:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** #endif
  68:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  69:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  71:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     register.
  76:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  77:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     can be achieved.
  79:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** */
  80:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** void
  81:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** {
  83:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	);
  89:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** }
  90:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  91:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  93:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     counter register pair.
  98:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 
  99:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h ****  */
 102:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** void
 103:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** {
 105:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 237               	.LM24:
 238 0040 28EC      		ldi r18,lo8(200)
 239 0042 30E0      		ldi r19,hi8(200)
 240               	.L12:
 241 0044 F901      		movw r30,r18
 242               	/* #APP */
 243               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 244 0046 3197      		1: sbiw r30,1
 245 0048 01F4      		brne 1b
 246               	 ;  0 "" 2
 247               	/* #NOAPP */
 248               	.LBE32:
 249               	.LBE31:
 251               	.Ltext2:
   1:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
   6:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
   9:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  12:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      distribution.
  16:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  17:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  21:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  33:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5.2.1 2009/02/25 10:14:03 joerg_wunsch Exp $ */
  34:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  35:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  38:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #include <inttypes.h>
  39:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  41:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /** \file */
  42:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \code
  44:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \endcode
  48:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  49:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     used.
  53:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  54:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  63:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     routines linked into the application.
  71:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  72:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  76:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** */
  77:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  78:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  82:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  83:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef F_CPU
  84:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  88:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  89:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** #endif
  92:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  93:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** /**
  94:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    \ingroup util_delay
  95:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  96:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
  97:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
  98:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
 101:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 102:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 
 103:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 104:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 105:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 106:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 107:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 108:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h ****  */
 109:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** void
 110:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 111:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** {
 112:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 113:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 114:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 115:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		__ticks = 1;
 116:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 117:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 	{
 118:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 119:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 121:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		{
 122:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 123:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 124:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 			__ticks --;
 253               	.LM25:
 254 004a 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 256               	.LM26:
 257 004c 01F4      		brne .L12
 258               	.LBE30:
 259               	.LBE29:
 261               	.Ltext3:
 114:biCycles.c    **** 	_delay_ms(200);
 115:biCycles.c    **** 	PORTB |= LCD_RESET;
 263               	.LM27:
 264 004e 2A9A      		sbi 37-32,2
 265               	.LBB33:
 266               	.LBB34:
 267               	.LBB35:
 268               	.LBB36:
 270               	.Ltext4:
 272               	.LM28:
 273 0050 80E2      		ldi r24,lo8(20000)
 274 0052 9EE4      		ldi r25,hi8(20000)
 275               	/* #APP */
 276               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 277 0054 0197      		1: sbiw r24,1
 278 0056 01F4      		brne 1b
 279               	 ;  0 "" 2
 280               	/* #NOAPP */
 281               	.LBE36:
 282               	.LBE35:
 283               	.LBE34:
 284               	.LBE33:
 286               	.Ltext5:
 116:biCycles.c    **** 	_delay_ms(10);
 117:biCycles.c    **** 
 118:biCycles.c    **** 	//initialization sequence
 119:biCycles.c    **** 	lcd_spi_command(0x40); //set scroll line
 288               	.LM29:
 289 0058 80E4      		ldi r24,lo8(64)
 290 005a 0E94 0000 		call lcd_spi_command
 120:biCycles.c    **** 	lcd_spi_command(0xa1); //set display direction
 292               	.LM30:
 293 005e 81EA      		ldi r24,lo8(-95)
 294 0060 0E94 0000 		call lcd_spi_command
 121:biCycles.c    **** 	lcd_spi_command(0xc0); //set COM direction
 296               	.LM31:
 297 0064 80EC      		ldi r24,lo8(-64)
 298 0066 0E94 0000 		call lcd_spi_command
 122:biCycles.c    **** 	lcd_spi_command(0xa4); //turn all pixels on
 300               	.LM32:
 301 006a 84EA      		ldi r24,lo8(-92)
 302 006c 0E94 0000 		call lcd_spi_command
 123:biCycles.c    **** 	lcd_spi_command(0xa6); //turn display inversion off
 304               	.LM33:
 305 0070 86EA      		ldi r24,lo8(-90)
 306 0072 0E94 0000 		call lcd_spi_command
 124:biCycles.c    **** 	lcd_spi_command(0xa2); //set LCD bias ratio
 308               	.LM34:
 309 0076 82EA      		ldi r24,lo8(-94)
 310 0078 0E94 0000 		call lcd_spi_command
 125:biCycles.c    **** 	lcd_spi_command(0x2f); //turn on Booster
 312               	.LM35:
 313 007c 8FE2      		ldi r24,lo8(47)
 314 007e 0E94 0000 		call lcd_spi_command
 126:biCycles.c    **** 	lcd_spi_command(0x25); //set contrast
 316               	.LM36:
 317 0082 85E2      		ldi r24,lo8(37)
 318 0084 0E94 0000 		call lcd_spi_command
 127:biCycles.c    **** 	lcd_spi_command(0x81); //set contrast
 320               	.LM37:
 321 0088 81E8      		ldi r24,lo8(-127)
 322 008a 0E94 0000 		call lcd_spi_command
 128:biCycles.c    **** 	lcd_spi_command(0x1b); //set contrast
 324               	.LM38:
 325 008e 8BE1      		ldi r24,lo8(27)
 326 0090 0E94 0000 		call lcd_spi_command
 129:biCycles.c    **** 	lcd_spi_command(0xfa); //temp compensation
 328               	.LM39:
 329 0094 8AEF      		ldi r24,lo8(-6)
 330 0096 0E94 0000 		call lcd_spi_command
 130:biCycles.c    **** 	lcd_spi_command(0x90); //temp compensation
 332               	.LM40:
 333 009a 80E9      		ldi r24,lo8(-112)
 334 009c 0E94 0000 		call lcd_spi_command
 131:biCycles.c    **** 	lcd_spi_command(0xaf); //Set Display Enable
 336               	.LM41:
 337 00a0 8FEA      		ldi r24,lo8(-81)
 338 00a2 0E94 0000 		call lcd_spi_command
 339               	/* epilogue start */
 132:biCycles.c    **** }
 341               	.LM42:
 342 00a6 0895      		ret
 350               	.Lscope4:
 352               		.stabd	78,0,0
 357               	.global	lcd_draw
 359               	lcd_draw:
 360               		.stabd	46,0,0
 133:biCycles.c    **** 
 134:biCycles.c    **** void lcd_draw(unsigned char page, unsigned char col, unsigned char data)
 135:biCycles.c    **** {
 362               	.LM43:
 363               	.LFBB5:
 364 00a8 FF92      		push r15
 365 00aa 0F93      		push r16
 366 00ac 1F93      		push r17
 367               	/* prologue: function */
 368               	/* frame size = 0 */
 369 00ae 082F      		mov r16,r24
 370 00b0 162F      		mov r17,r22
 371 00b2 F42E      		mov r15,r20
 136:biCycles.c    **** 	lcd_spi_command(0x10 + ((col&0xf0)>>4));
 373               	.LM44:
 374 00b4 862F      		mov r24,r22
 375 00b6 8295      		swap r24
 376 00b8 8F70      		andi r24,lo8(15)
 377 00ba 805F      		subi r24,lo8(-(16))
 378 00bc 0E94 0000 		call lcd_spi_command
 137:biCycles.c    **** 	lcd_spi_command(col&0x0f);
 380               	.LM45:
 381 00c0 812F      		mov r24,r17
 382 00c2 8F70      		andi r24,lo8(15)
 383 00c4 0E94 0000 		call lcd_spi_command
 138:biCycles.c    **** 	LCD_page(page);
 385               	.LM46:
 386 00c8 802F      		mov r24,r16
 387 00ca 8055      		subi r24,lo8(-(-80))
 388 00cc 0E94 0000 		call lcd_spi_command
 139:biCycles.c    **** 	lcd_spi_data(data);
 390               	.LM47:
 391 00d0 8F2D      		mov r24,r15
 392 00d2 0E94 0000 		call lcd_spi_data
 393               	/* epilogue start */
 140:biCycles.c    **** }
 395               	.LM48:
 396 00d6 1F91      		pop r17
 397 00d8 0F91      		pop r16
 398 00da FF90      		pop r15
 399 00dc 0895      		ret
 401               	.Lscope5:
 403               		.stabd	78,0,0
 406               	.global	lcd_col
 408               	lcd_col:
 409               		.stabd	46,0,0
 141:biCycles.c    **** 
 142:biCycles.c    **** void lcd_col(unsigned char col)
 143:biCycles.c    **** {
 411               	.LM49:
 412               	.LFBB6:
 413 00de 1F93      		push r17
 414               	/* prologue: function */
 415               	/* frame size = 0 */
 416 00e0 182F      		mov r17,r24
 144:biCycles.c    **** 	lcd_spi_command(0x10 + ((col&0xf0)>>4));
 418               	.LM50:
 419 00e2 8295      		swap r24
 420 00e4 8F70      		andi r24,lo8(15)
 421 00e6 805F      		subi r24,lo8(-(16))
 422 00e8 0E94 0000 		call lcd_spi_command
 145:biCycles.c    **** 	lcd_spi_command(col&0x0f);
 424               	.LM51:
 425 00ec 812F      		mov r24,r17
 426 00ee 8F70      		andi r24,lo8(15)
 427 00f0 0E94 0000 		call lcd_spi_command
 428               	/* epilogue start */
 146:biCycles.c    **** }
 430               	.LM52:
 431 00f4 1F91      		pop r17
 432 00f6 0895      		ret
 434               	.Lscope6:
 436               		.stabd	78,0,0
 438               	.global	lcd_clear
 440               	lcd_clear:
 441               		.stabd	46,0,0
 147:biCycles.c    **** 
 148:biCycles.c    **** void lcd_clear(void)
 149:biCycles.c    **** {
 443               	.LM53:
 444               	.LFBB7:
 445 00f8 0F93      		push r16
 446 00fa 1F93      		push r17
 447               	/* prologue: function */
 448               	/* frame size = 0 */
 450               	.LM54:
 451 00fc 00E0      		ldi r16,lo8(0)
 452 00fe 00C0      		rjmp .L20
 453               	.L21:
 454               	.LBB37:
 455               	.LBB38:
 150:biCycles.c    **** 	for (char x=0;x<8;x++)
 151:biCycles.c    **** 	{
 152:biCycles.c    **** 		for (char y=0;y<103;y++)
 153:biCycles.c    **** 		{
 154:biCycles.c    **** 			lcd_draw(x,y,0x00);
 457               	.LM55:
 458 0100 802F      		mov r24,r16
 459 0102 612F      		mov r22,r17
 460 0104 40E0      		ldi r20,lo8(0)
 461 0106 0E94 0000 		call lcd_draw
 152:biCycles.c    **** 		for (char y=0;y<103;y++)
 463               	.LM56:
 464 010a 1F5F      		subi r17,lo8(-(1))
 465 010c 1736      		cpi r17,lo8(103)
 466 010e 01F4      		brne .L21
 467               	.LBE38:
 150:biCycles.c    **** 	for (char x=0;x<8;x++)
 469               	.LM57:
 470 0110 0F5F      		subi r16,lo8(-(1))
 471 0112 0830      		cpi r16,lo8(8)
 472 0114 01F0      		breq .L23
 473               	.L20:
 474 0116 10E0      		ldi r17,lo8(0)
 475 0118 00C0      		rjmp .L21
 476               	.L23:
 477               	/* epilogue start */
 478               	.LBE37:
 155:biCycles.c    **** 		}
 156:biCycles.c    **** 	}
 157:biCycles.c    **** }
 480               	.LM58:
 481 011a 1F91      		pop r17
 482 011c 0F91      		pop r16
 483 011e 0895      		ret
 485               	.Lscope7:
 487               		.stabd	78,0,0
 489               	.global	lcd_draw_menu
 491               	lcd_draw_menu:
 492               		.stabd	46,0,0
 158:biCycles.c    **** void lcd_draw_menu(void)
 159:biCycles.c    **** {
 494               	.LM59:
 495               	.LFBB8:
 496 0120 EF92      		push r14
 497 0122 FF92      		push r15
 498 0124 0F93      		push r16
 499 0126 1F93      		push r17
 500 0128 CF93      		push r28
 501 012a DF93      		push r29
 502               	/* prologue: function */
 503               	/* frame size = 0 */
 160:biCycles.c    **** 	LCD_page(0);
 505               	.LM60:
 506 012c 80EB      		ldi r24,lo8(-80)
 507 012e 0E94 0000 		call lcd_spi_command
 161:biCycles.c    **** 	char mode0 = (mode==0)*0x7f;
 509               	.LM61:
 510 0132 8091 0000 		lds r24,mode
 511 0136 8823      		tst r24
 512 0138 01F0      		breq .L26
 513 013a 00E0      		ldi r16,lo8(0)
 514 013c 00C0      		rjmp .L27
 515               	.L26:
 516 013e 0FE7      		ldi r16,lo8(127)
 517               	.L27:
 162:biCycles.c    **** 	char mode1 = (mode==1)*0x7f;
 519               	.LM62:
 520 0140 8091 0000 		lds r24,mode
 521 0144 8130      		cpi r24,lo8(1)
 522 0146 01F0      		breq .L28
 523 0148 FF24      		clr r15
 524 014a 00C0      		rjmp .L29
 525               	.L28:
 526 014c 9FE7      		ldi r25,lo8(127)
 527 014e F92E      		mov r15,r25
 528               	.L29:
 163:biCycles.c    **** 	char mode2 = (mode==2)*0x7f;
 530               	.LM63:
 531 0150 8091 0000 		lds r24,mode
 532 0154 8230      		cpi r24,lo8(2)
 533 0156 01F0      		breq .L30
 534 0158 EE24      		clr r14
 535 015a 00C0      		rjmp .L31
 536               	.L30:
 537 015c 8FE7      		ldi r24,lo8(127)
 538 015e E82E      		mov r14,r24
 539               	.L31:
 540 0160 C0E0      		ldi r28,lo8(menu)
 541 0162 D0E0      		ldi r29,hi8(menu)
 542 0164 10E0      		ldi r17,lo8(0)
 543               	.L32:
 544               	.LBB39:
 164:biCycles.c    **** 	for (int x=0;x<31;x++)
 165:biCycles.c    **** 	{
 166:biCycles.c    **** 		lcd_col(x);
 546               	.LM64:
 547 0166 812F      		mov r24,r17
 548 0168 0E94 0000 		call lcd_col
 549               	.LBB40:
 167:biCycles.c    **** 		lcd_spi_data(mode0^MEM_read(menu[x]));
 551               	.LM65:
 552 016c FE01      		movw r30,r28
 553               	/* #APP */
 554               	 ;  167 "biCycles.c" 1
 555 016e 8491      		lpm r24, Z
 556               		
 557               	 ;  0 "" 2
 558               	/* #NOAPP */
 559               	.LBE40:
 560 0170 8027      		eor r24,r16
 561 0172 0E94 0000 		call lcd_spi_data
 562 0176 1F5F      		subi r17,lo8(-(1))
 563 0178 2196      		adiw r28,1
 164:biCycles.c    **** 	for (int x=0;x<31;x++)
 565               	.LM66:
 566 017a 1F31      		cpi r17,lo8(31)
 567 017c 01F4      		brne .L32
 568 017e CFE1      		ldi r28,lo8(31)
 569 0180 D0E0      		ldi r29,hi8(31)
 570               	.L33:
 571               	.LBE39:
 572               	.LBB41:
 168:biCycles.c    **** 	}
 169:biCycles.c    **** 	for (int x=31;x<59;x++)
 170:biCycles.c    **** 	{
 171:biCycles.c    **** 		lcd_col(x);
 574               	.LM67:
 575 0182 8C2F      		mov r24,r28
 576 0184 0E94 0000 		call lcd_col
 577               	.LBB42:
 172:biCycles.c    **** 		lcd_spi_data(mode1^MEM_read(menu[x]));
 579               	.LM68:
 580 0188 FE01      		movw r30,r28
 581 018a E050      		subi r30,lo8(-(menu))
 582 018c F040      		sbci r31,hi8(-(menu))
 583               	/* #APP */
 584               	 ;  172 "biCycles.c" 1
 585 018e E491      		lpm r30, Z
 586               		
 587               	 ;  0 "" 2
 588               	/* #NOAPP */
 589               	.LBE42:
 590 0190 8E2F      		mov r24,r30
 591 0192 8F25      		eor r24,r15
 592 0194 0E94 0000 		call lcd_spi_data
 169:biCycles.c    **** 	for (int x=31;x<59;x++)
 594               	.LM69:
 595 0198 2196      		adiw r28,1
 596 019a CB33      		cpi r28,59
 597 019c D105      		cpc r29,__zero_reg__
 598 019e 01F4      		brne .L33
 599 01a0 CBE3      		ldi r28,lo8(59)
 600 01a2 D0E0      		ldi r29,hi8(59)
 601               	.L34:
 602               	.LBE41:
 603               	.LBB43:
 173:biCycles.c    **** 	}
 174:biCycles.c    **** 	for (int x=59;x<91;x++)
 175:biCycles.c    **** 	{
 176:biCycles.c    **** 		lcd_col(x);
 605               	.LM70:
 606 01a4 8C2F      		mov r24,r28
 607 01a6 0E94 0000 		call lcd_col
 608               	.LBB44:
 177:biCycles.c    **** 		lcd_spi_data(mode2^MEM_read(menu[x]));
 610               	.LM71:
 611 01aa FE01      		movw r30,r28
 612 01ac E050      		subi r30,lo8(-(menu))
 613 01ae F040      		sbci r31,hi8(-(menu))
 614               	/* #APP */
 615               	 ;  177 "biCycles.c" 1
 616 01b0 E491      		lpm r30, Z
 617               		
 618               	 ;  0 "" 2
 619               	/* #NOAPP */
 620               	.LBE44:
 621 01b2 8E2F      		mov r24,r30
 622 01b4 8E25      		eor r24,r14
 623 01b6 0E94 0000 		call lcd_spi_data
 174:biCycles.c    **** 	for (int x=59;x<91;x++)
 625               	.LM72:
 626 01ba 2196      		adiw r28,1
 627 01bc CB35      		cpi r28,91
 628 01be D105      		cpc r29,__zero_reg__
 629 01c0 01F4      		brne .L34
 630               	/* epilogue start */
 631               	.LBE43:
 178:biCycles.c    **** 	}
 179:biCycles.c    **** }
 633               	.LM73:
 634 01c2 DF91      		pop r29
 635 01c4 CF91      		pop r28
 636 01c6 1F91      		pop r17
 637 01c8 0F91      		pop r16
 638 01ca FF90      		pop r15
 639 01cc EF90      		pop r14
 640 01ce 0895      		ret
 662               	.Lscope8:
 664               		.stabd	78,0,0
 666               	.global	main
 668               	main:
 669               		.stabd	46,0,0
  57:biCycles.c    **** {
 671               	.LM74:
 672               	.LFBB9:
 673 01d0 0F93      		push r16
 674 01d2 1F93      		push r17
 675 01d4 CF93      		push r28
 676 01d6 DF93      		push r29
 677               	/* prologue: function */
 678               	/* frame size = 0 */
  58:biCycles.c    **** 	DDRD &= ~0x01;
 680               	.LM75:
 681 01d8 5098      		cbi 42-32,0
  59:biCycles.c    **** 	PORTD |= 0x01;
 683               	.LM76:
 684 01da 589A      		sbi 43-32,0
  60:biCycles.c    **** 	DDRB = 0xFF;
 686               	.LM77:
 687 01dc 8FEF      		ldi r24,lo8(-1)
 688 01de 84B9      		out 36-32,r24
  61:biCycles.c    **** 	PCICR = (1<<2);
 690               	.LM78:
 691 01e0 84E0      		ldi r24,lo8(4)
 692 01e2 8093 6800 		sts 104,r24
  62:biCycles.c    **** 	PCMSK2 = 0x01;
 694               	.LM79:
 695 01e6 81E0      		ldi r24,lo8(1)
 696 01e8 8093 6D00 		sts 109,r24
  63:biCycles.c    **** 	lcd_init();
 698               	.LM80:
 699 01ec 0E94 0000 		call lcd_init
  64:biCycles.c    **** 	lcd_clear();
 701               	.LM81:
 702 01f0 0E94 0000 		call lcd_clear
  65:biCycles.c    **** 	lcd_draw_menu();
 704               	.LM82:
 705 01f4 0E94 0000 		call lcd_draw_menu
  66:biCycles.c    **** 	sei();
 707               	.LM83:
 708               	/* #APP */
 709               	 ;  66 "biCycles.c" 1
 710 01f8 7894      		sei
 711               	 ;  0 "" 2
 712               	/* #NOAPP */
 713 01fa C0E0      		ldi r28,lo8(0)
 714 01fc D0E0      		ldi r29,hi8(0)
 715               	.LBB45:
 716               	.LBB46:
 717               	.LBB47:
 718               	.LBB48:
 719               	.LBB49:
 721               	.Ltext6:
 723               	.LM84:
 724 01fe 08EC      		ldi r16,lo8(200)
 725 0200 10E0      		ldi r17,hi8(200)
 726               	.L46:
 727               	.LBE49:
 728               	.LBE48:
 729               	.LBE47:
 730               	.LBE46:
 732               	.Ltext7:
  72:biCycles.c    **** 			lcd_draw_menu();
 734               	.LM85:
 735 0202 0E94 0000 		call lcd_draw_menu
 736 0206 88E8      		ldi r24,lo8(5000)
 737 0208 93E1      		ldi r25,hi8(5000)
 738               	.L40:
 739               	.LBB53:
 740               	.LBB52:
 741               	.LBB51:
 742               	.LBB50:
 744               	.Ltext8:
 746               	.LM86:
 747 020a F801      		movw r30,r16
 748               	/* #APP */
 749               	 ;  105 "/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay_basic.h" 1
 750 020c 3197      		1: sbiw r30,1
 751 020e 01F4      		brne 1b
 752               	 ;  0 "" 2
 753               	/* #NOAPP */
 754               	.LBE50:
 755               	.LBE51:
 757               	.Ltext9:
 759               	.LM87:
 760 0210 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.5/../../../avr/include/util/delay.h **** 		while(__ticks)
 762               	.LM88:
 763 0212 01F4      		brne .L40
 764               	.LBE52:
 765               	.LBE53:
 767               	.Ltext10:
  69:biCycles.c    **** 		for (int x=0;x<0xff;x++)
 769               	.LM89:
 770 0214 2196      		adiw r28,1
 771 0216 CF3F      		cpi r28,255
 772 0218 D105      		cpc r29,__zero_reg__
 773 021a 04F0      		brlt .L46
 774 021c C0E0      		ldi r28,lo8(0)
 775 021e D0E0      		ldi r29,hi8(0)
 776 0220 00C0      		rjmp .L46
 777               	.LBE45:
 794               	.Lscope9:
 796               		.stabd	78,0,0
 798               	.global	__vector_5
 800               	__vector_5:
 801               		.stabd	46,0,0
  48:biCycles.c    **** {
 803               	.LM90:
 804               	.LFBB10:
 805 0222 1F92      		push __zero_reg__
 806 0224 0F92      		push r0
 807 0226 0FB6      		in r0,__SREG__
 808 0228 0F92      		push r0
 809 022a 1124      		clr __zero_reg__
 810 022c 2F93      		push r18
 811 022e 3F93      		push r19
 812 0230 4F93      		push r20
 813 0232 5F93      		push r21
 814 0234 6F93      		push r22
 815 0236 7F93      		push r23
 816 0238 8F93      		push r24
 817 023a 9F93      		push r25
 818 023c AF93      		push r26
 819 023e BF93      		push r27
 820 0240 EF93      		push r30
 821 0242 FF93      		push r31
 822               	/* prologue: Signal */
 823               	/* frame size = 0 */
  49:biCycles.c    **** 	if(PIND==0x00)
 825               	.LM91:
 826 0244 89B1      		in r24,41-32
 827 0246 8823      		tst r24
 828 0248 01F4      		brne .L49
  51:biCycles.c    **** 		mode=(mode+1)%3;
 830               	.LM92:
 831 024a 8091 0000 		lds r24,mode
 832 024e 90E0      		ldi r25,lo8(0)
 833 0250 0196      		adiw r24,1
 834 0252 63E0      		ldi r22,lo8(3)
 835 0254 70E0      		ldi r23,hi8(3)
 836 0256 0E94 0000 		call __divmodhi4
 837 025a 8093 0000 		sts mode,r24
  52:biCycles.c    **** 		lcd_draw_menu();
 839               	.LM93:
 840 025e 0E94 0000 		call lcd_draw_menu
 841               	.L49:
 842               	/* epilogue start */
  54:biCycles.c    **** }
 844               	.LM94:
 845 0262 FF91      		pop r31
 846 0264 EF91      		pop r30
 847 0266 BF91      		pop r27
 848 0268 AF91      		pop r26
 849 026a 9F91      		pop r25
 850 026c 8F91      		pop r24
 851 026e 7F91      		pop r23
 852 0270 6F91      		pop r22
 853 0272 5F91      		pop r21
 854 0274 4F91      		pop r20
 855 0276 3F91      		pop r19
 856 0278 2F91      		pop r18
 857 027a 0F90      		pop r0
 858 027c 0FBE      		out __SREG__,r0
 859 027e 0F90      		pop r0
 860 0280 1F90      		pop __zero_reg__
 861 0282 1895      		reti
 863               	.Lscope10:
 865               		.stabd	78,0,0
 869               	.global	lcd_draw_bignum
 871               	lcd_draw_bignum:
 872               		.stabd	46,0,0
 180:biCycles.c    **** 
 181:biCycles.c    **** void lcd_draw_bignum(unsigned char digit, unsigned char num)
 182:biCycles.c    **** {
 874               	.LM95:
 875               	.LFBB11:
 876 0284 CF92      		push r12
 877 0286 DF92      		push r13
 878 0288 EF92      		push r14
 879 028a FF92      		push r15
 880 028c 0F93      		push r16
 881 028e 1F93      		push r17
 882 0290 CF93      		push r28
 883 0292 DF93      		push r29
 884               	/* prologue: function */
 885               	/* frame size = 0 */
 886               	.LBB54:
 887               	.LBB55:
 183:biCycles.c    **** 	for (int y=2; y<8;y++)
 184:biCycles.c    **** 	{
 185:biCycles.c    **** 		LCD_page(y);
 186:biCycles.c    **** 		for (int x=0; x<32; x++)
 187:biCycles.c    **** 		{
 188:biCycles.c    **** 			lcd_col(x+digit*32);
 889               	.LM96:
 890 0294 C82E      		mov r12,r24
 891 0296 C294      		swap r12
 892 0298 CC0C      		lsl r12
 893 029a 40EE      		ldi r20,lo8(-32)
 894 029c C422      		and r12,r20
 895 029e C62F      		mov r28,r22
 896 02a0 D0E0      		ldi r29,lo8(0)
 897 02a2 35E0      		ldi r19,5
 898 02a4 CC0F      	1:	lsl r28
 899 02a6 DD1F      		rol r29
 900 02a8 3A95      		dec r19
 901 02aa 01F4      		brne 1b
 902 02ac C050      		subi r28,lo8(-(big_one))
 903 02ae D040      		sbci r29,hi8(-(big_one))
 904 02b0 22EB      		ldi r18,lo8(-78)
 905 02b2 D22E      		mov r13,r18
 906               	.L52:
 907               	.LBE55:
 185:biCycles.c    **** 		LCD_page(y);
 909               	.LM97:
 910 02b4 8D2D      		mov r24,r13
 911 02b6 0E94 0000 		call lcd_spi_command
 912 02ba 7E01      		movw r14,r28
 913 02bc 00E0      		ldi r16,lo8(0)
 914 02be 10E0      		ldi r17,hi8(0)
 915               	.L51:
 916               	.LBB57:
 918               	.LM98:
 919 02c0 8C2D      		mov r24,r12
 920 02c2 800F      		add r24,r16
 921 02c4 0E94 0000 		call lcd_col
 922               	.LBB56:
 189:biCycles.c    **** 			lcd_spi_data(MEM_read(big_one[(y-2)*320+x+32*num]));
 924               	.LM99:
 925 02c8 F701      		movw r30,r14
 926               	/* #APP */
 927               	 ;  189 "biCycles.c" 1
 928 02ca 8491      		lpm r24, Z
 929               		
 930               	 ;  0 "" 2
 931               	/* #NOAPP */
 932               	.LBE56:
 933 02cc 0E94 0000 		call lcd_spi_data
 186:biCycles.c    **** 		for (int x=0; x<32; x++)
 935               	.LM100:
 936 02d0 0F5F      		subi r16,lo8(-(1))
 937 02d2 1F4F      		sbci r17,hi8(-(1))
 938 02d4 0894      		sec
 939 02d6 E11C      		adc r14,__zero_reg__
 940 02d8 F11C      		adc r15,__zero_reg__
 941 02da 0032      		cpi r16,32
 942 02dc 1105      		cpc r17,__zero_reg__
 943 02de 01F4      		brne .L51
 944 02e0 D394      		inc r13
 945 02e2 C05C      		subi r28,lo8(-(320))
 946 02e4 DE4F      		sbci r29,hi8(-(320))
 947               	.LBE57:
 183:biCycles.c    **** 	for (int y=2; y<8;y++)
 949               	.LM101:
 950 02e6 F8EB      		ldi r31,lo8(-72)
 951 02e8 DF16      		cp r13,r31
 952 02ea 01F4      		brne .L52
 953               	/* epilogue start */
 954               	.LBE54:
 190:biCycles.c    **** 		}
 191:biCycles.c    **** 	}
 192:biCycles.c    **** }
 956               	.LM102:
 957 02ec DF91      		pop r29
 958 02ee CF91      		pop r28
 959 02f0 1F91      		pop r17
 960 02f2 0F91      		pop r16
 961 02f4 FF90      		pop r15
 962 02f6 EF90      		pop r14
 963 02f8 DF90      		pop r13
 964 02fa CF90      		pop r12
 965 02fc 0895      		ret
 967               	.Lscope11:
 969               		.stabd	78,0,0
 973               	.global	lcd_draw_lilnum
 975               	lcd_draw_lilnum:
 976               		.stabd	46,0,0
 193:biCycles.c    **** 
 194:biCycles.c    **** void lcd_draw_lilnum(unsigned char digit, unsigned char num)
 195:biCycles.c    **** {
 978               	.LM103:
 979               	.LFBB12:
 980 02fe CF92      		push r12
 981 0300 DF92      		push r13
 982 0302 EF92      		push r14
 983 0304 FF92      		push r15
 984 0306 0F93      		push r16
 985 0308 1F93      		push r17
 986 030a CF93      		push r28
 987 030c DF93      		push r29
 988               	/* prologue: function */
 989               	/* frame size = 0 */
 990               	.LBB58:
 991               	.LBB59:
 196:biCycles.c    **** 	for (int y=5; y<8; y++)
 197:biCycles.c    **** 	{
 198:biCycles.c    **** 		LCD_page(y);
 199:biCycles.c    **** 		for (int x=0; x<16; x++)
 200:biCycles.c    **** 		{
 201:biCycles.c    **** 			lcd_col(x+digit*16+64);
 993               	.LM104:
 994 030e 8295      		swap r24
 995 0310 807F      		andi r24,lo8(-16)
 996 0312 E0E4      		ldi r30,lo8(64)
 997 0314 CE2E      		mov r12,r30
 998 0316 C80E      		add r12,r24
 999 0318 93E0      		ldi r25,lo8(3)
 1000 031a 699F      		mul r22,r25
 1001 031c E001      		movw r28,r0
 1002 031e 1124      		clr r1
 1003 0320 74E0      		ldi r23,4
 1004 0322 CC0F      	1:	lsl r28
 1005 0324 DD1F      		rol r29
 1006 0326 7A95      		dec r23
 1007 0328 01F4      		brne 1b
 1008 032a C050      		subi r28,lo8(-(lil_one))
 1009 032c D040      		sbci r29,hi8(-(lil_one))
 1010 032e 65EB      		ldi r22,lo8(-75)
 1011 0330 E62E      		mov r14,r22
 199:biCycles.c    **** 		for (int x=0; x<16; x++)
 1013               	.LM105:
 1014 0332 50E5      		ldi r21,lo8(80)
 1015 0334 D52E      		mov r13,r21
 1016 0336 D80E      		add r13,r24
 1017               	.L58:
 1018               	.LBE59:
 198:biCycles.c    **** 		LCD_page(y);
 1020               	.LM106:
 1021 0338 8E2D      		mov r24,r14
 1022 033a 0E94 0000 		call lcd_spi_command
 1023 033e FC2C      		mov r15,r12
 1024 0340 8E01      		movw r16,r28
 1025               	.L57:
 1026               	.LBB61:
 1028               	.LM107:
 1029 0342 8F2D      		mov r24,r15
 1030 0344 0E94 0000 		call lcd_col
 1031               	.LBB60:
 202:biCycles.c    **** 			lcd_spi_data(MEM_read(lil_one[num][y-5][x]));
 1033               	.LM108:
 1034 0348 F801      		movw r30,r16
 1035               	/* #APP */
 1036               	 ;  202 "biCycles.c" 1
 1037 034a 8491      		lpm r24, Z
 1038               		
 1039               	 ;  0 "" 2
 1040               	/* #NOAPP */
 1041               	.LBE60:
 1042 034c 0E94 0000 		call lcd_spi_data
 1043 0350 F394      		inc r15
 1044 0352 0F5F      		subi r16,lo8(-(1))
 1045 0354 1F4F      		sbci r17,hi8(-(1))
 199:biCycles.c    **** 		for (int x=0; x<16; x++)
 1047               	.LM109:
 1048 0356 FD14      		cp r15,r13
 1049 0358 01F4      		brne .L57
 1050 035a E394      		inc r14
 1051 035c 6096      		adiw r28,16
 1052               	.LBE61:
 196:biCycles.c    **** 	for (int y=5; y<8; y++)
 1054               	.LM110:
 1055 035e F8EB      		ldi r31,lo8(-72)
 1056 0360 EF16      		cp r14,r31
 1057 0362 01F4      		brne .L58
 1058               	/* epilogue start */
 1059               	.LBE58:
 203:biCycles.c    **** 		}
 204:biCycles.c    **** 	}
 205:biCycles.c    **** }
 1061               	.LM111:
 1062 0364 DF91      		pop r29
 1063 0366 CF91      		pop r28
 1064 0368 1F91      		pop r17
 1065 036a 0F91      		pop r16
 1066 036c FF90      		pop r15
 1067 036e EF90      		pop r14
 1068 0370 DF90      		pop r13
 1069 0372 CF90      		pop r12
 1070 0374 0895      		ret
 1072               	.Lscope12:
 1074               		.stabd	78,0,0
 1075               	.global	big_one
 1076               		.section	.progmem.data,"a",@progbits
 1079               	big_one:
 1080 0000 00        		.byte	0
 1081 0001 00        		.byte	0
 1082 0002 00        		.byte	0
 1083 0003 00        		.byte	0
 1084 0004 00        		.byte	0
 1085 0005 00        		.byte	0
 1086 0006 00        		.byte	0
 1087 0007 80        		.byte	-128
 1088 0008 C0        		.byte	-64
 1089 0009 E0        		.byte	-32
 1090 000a E0        		.byte	-32
 1091 000b F0        		.byte	-16
 1092 000c F0        		.byte	-16
 1093 000d F0        		.byte	-16
 1094 000e F0        		.byte	-16
 1095 000f F0        		.byte	-16
 1096 0010 F0        		.byte	-16
 1097 0011 F0        		.byte	-16
 1098 0012 F0        		.byte	-16
 1099 0013 F0        		.byte	-16
 1100 0014 F0        		.byte	-16
 1101 0015 E0        		.byte	-32
 1102 0016 E0        		.byte	-32
 1103 0017 C0        		.byte	-64
 1104 0018 80        		.byte	-128
 1105 0019 00        		.byte	0
 1106 001a 00        		.byte	0
 1107 001b 00        		.byte	0
 1108 001c 00        		.byte	0
 1109 001d 00        		.byte	0
 1110 001e 00        		.byte	0
 1111 001f 00        		.byte	0
 1112 0020 00        		.byte	0
 1113 0021 00        		.byte	0
 1114 0022 00        		.byte	0
 1115 0023 00        		.byte	0
 1116 0024 00        		.byte	0
 1117 0025 00        		.byte	0
 1118 0026 00        		.byte	0
 1119 0027 00        		.byte	0
 1120 0028 00        		.byte	0
 1121 0029 00        		.byte	0
 1122 002a 00        		.byte	0
 1123 002b 00        		.byte	0
 1124 002c 00        		.byte	0
 1125 002d 00        		.byte	0
 1126 002e 00        		.byte	0
 1127 002f 00        		.byte	0
 1128 0030 80        		.byte	-128
 1129 0031 E0        		.byte	-32
 1130 0032 F0        		.byte	-16
 1131 0033 F0        		.byte	-16
 1132 0034 F0        		.byte	-16
 1133 0035 F0        		.byte	-16
 1134 0036 00        		.byte	0
 1135 0037 00        		.byte	0
 1136 0038 00        		.byte	0
 1137 0039 00        		.byte	0
 1138 003a 00        		.byte	0
 1139 003b 00        		.byte	0
 1140 003c 00        		.byte	0
 1141 003d 00        		.byte	0
 1142 003e 00        		.byte	0
 1143 003f 00        		.byte	0
 1144 0040 00        		.byte	0
 1145 0041 00        		.byte	0
 1146 0042 00        		.byte	0
 1147 0043 00        		.byte	0
 1148 0044 00        		.byte	0
 1149 0045 00        		.byte	0
 1150 0046 80        		.byte	-128
 1151 0047 C0        		.byte	-64
 1152 0048 C0        		.byte	-64
 1153 0049 E0        		.byte	-32
 1154 004a E0        		.byte	-32
 1155 004b F0        		.byte	-16
 1156 004c F0        		.byte	-16
 1157 004d F0        		.byte	-16
 1158 004e F0        		.byte	-16
 1159 004f F0        		.byte	-16
 1160 0050 F0        		.byte	-16
 1161 0051 F0        		.byte	-16
 1162 0052 F0        		.byte	-16
 1163 0053 F0        		.byte	-16
 1164 0054 F0        		.byte	-16
 1165 0055 F0        		.byte	-16
 1166 0056 E0        		.byte	-32
 1167 0057 E0        		.byte	-32
 1168 0058 C0        		.byte	-64
 1169 0059 C0        		.byte	-64
 1170 005a 80        		.byte	-128
 1171 005b 00        		.byte	0
 1172 005c 00        		.byte	0
 1173 005d 00        		.byte	0
 1174 005e 00        		.byte	0
 1175 005f 00        		.byte	0
 1176 0060 00        		.byte	0
 1177 0061 00        		.byte	0
 1178 0062 00        		.byte	0
 1179 0063 00        		.byte	0
 1180 0064 00        		.byte	0
 1181 0065 00        		.byte	0
 1182 0066 80        		.byte	-128
 1183 0067 C0        		.byte	-64
 1184 0068 C0        		.byte	-64
 1185 0069 E0        		.byte	-32
 1186 006a E0        		.byte	-32
 1187 006b F0        		.byte	-16
 1188 006c F0        		.byte	-16
 1189 006d F0        		.byte	-16
 1190 006e F0        		.byte	-16
 1191 006f F0        		.byte	-16
 1192 0070 F0        		.byte	-16
 1193 0071 F0        		.byte	-16
 1194 0072 F0        		.byte	-16
 1195 0073 F0        		.byte	-16
 1196 0074 F0        		.byte	-16
 1197 0075 E0        		.byte	-32
 1198 0076 E0        		.byte	-32
 1199 0077 C0        		.byte	-64
 1200 0078 80        		.byte	-128
 1201 0079 00        		.byte	0
 1202 007a 00        		.byte	0
 1203 007b 00        		.byte	0
 1204 007c 00        		.byte	0
 1205 007d 00        		.byte	0
 1206 007e 00        		.byte	0
 1207 007f 00        		.byte	0
 1208 0080 00        		.byte	0
 1209 0081 00        		.byte	0
 1210 0082 00        		.byte	0
 1211 0083 00        		.byte	0
 1212 0084 00        		.byte	0
 1213 0085 00        		.byte	0
 1214 0086 00        		.byte	0
 1215 0087 00        		.byte	0
 1216 0088 00        		.byte	0
 1217 0089 00        		.byte	0
 1218 008a 00        		.byte	0
 1219 008b 00        		.byte	0
 1220 008c 00        		.byte	0
 1221 008d 00        		.byte	0
 1222 008e 00        		.byte	0
 1223 008f 00        		.byte	0
 1224 0090 00        		.byte	0
 1225 0091 80        		.byte	-128
 1226 0092 C0        		.byte	-64
 1227 0093 F0        		.byte	-16
 1228 0094 F0        		.byte	-16
 1229 0095 F0        		.byte	-16
 1230 0096 F0        		.byte	-16
 1231 0097 F0        		.byte	-16
 1232 0098 00        		.byte	0
 1233 0099 00        		.byte	0
 1234 009a 00        		.byte	0
 1235 009b 00        		.byte	0
 1236 009c 00        		.byte	0
 1237 009d 00        		.byte	0
 1238 009e 00        		.byte	0
 1239 009f 00        		.byte	0
 1240 00a0 00        		.byte	0
 1241 00a1 00        		.byte	0
 1242 00a2 00        		.byte	0
 1243 00a3 00        		.byte	0
 1244 00a4 00        		.byte	0
 1245 00a5 00        		.byte	0
 1246 00a6 00        		.byte	0
 1247 00a7 F0        		.byte	-16
 1248 00a8 F0        		.byte	-16
 1249 00a9 F0        		.byte	-16
 1250 00aa F0        		.byte	-16
 1251 00ab F0        		.byte	-16
 1252 00ac F0        		.byte	-16
 1253 00ad F0        		.byte	-16
 1254 00ae F0        		.byte	-16
 1255 00af F0        		.byte	-16
 1256 00b0 F0        		.byte	-16
 1257 00b1 F0        		.byte	-16
 1258 00b2 F0        		.byte	-16
 1259 00b3 F0        		.byte	-16
 1260 00b4 F0        		.byte	-16
 1261 00b5 F0        		.byte	-16
 1262 00b6 F0        		.byte	-16
 1263 00b7 F0        		.byte	-16
 1264 00b8 F0        		.byte	-16
 1265 00b9 F0        		.byte	-16
 1266 00ba F0        		.byte	-16
 1267 00bb F0        		.byte	-16
 1268 00bc 00        		.byte	0
 1269 00bd 00        		.byte	0
 1270 00be 00        		.byte	0
 1271 00bf 00        		.byte	0
 1272 00c0 00        		.byte	0
 1273 00c1 00        		.byte	0
 1274 00c2 00        		.byte	0
 1275 00c3 00        		.byte	0
 1276 00c4 00        		.byte	0
 1277 00c5 00        		.byte	0
 1278 00c6 00        		.byte	0
 1279 00c7 00        		.byte	0
 1280 00c8 80        		.byte	-128
 1281 00c9 C0        		.byte	-64
 1282 00ca E0        		.byte	-32
 1283 00cb E0        		.byte	-32
 1284 00cc F0        		.byte	-16
 1285 00cd F0        		.byte	-16
 1286 00ce F0        		.byte	-16
 1287 00cf F0        		.byte	-16
 1288 00d0 F0        		.byte	-16
 1289 00d1 F0        		.byte	-16
 1290 00d2 F0        		.byte	-16
 1291 00d3 F0        		.byte	-16
 1292 00d4 F0        		.byte	-16
 1293 00d5 F0        		.byte	-16
 1294 00d6 E0        		.byte	-32
 1295 00d7 E0        		.byte	-32
 1296 00d8 C0        		.byte	-64
 1297 00d9 C0        		.byte	-64
 1298 00da 80        		.byte	-128
 1299 00db 00        		.byte	0
 1300 00dc 00        		.byte	0
 1301 00dd 00        		.byte	0
 1302 00de 00        		.byte	0
 1303 00df 00        		.byte	0
 1304 00e0 00        		.byte	0
 1305 00e1 00        		.byte	0
 1306 00e2 00        		.byte	0
 1307 00e3 F0        		.byte	-16
 1308 00e4 F0        		.byte	-16
 1309 00e5 F0        		.byte	-16
 1310 00e6 F0        		.byte	-16
 1311 00e7 F0        		.byte	-16
 1312 00e8 F0        		.byte	-16
 1313 00e9 F0        		.byte	-16
 1314 00ea F0        		.byte	-16
 1315 00eb F0        		.byte	-16
 1316 00ec F0        		.byte	-16
 1317 00ed F0        		.byte	-16
 1318 00ee F0        		.byte	-16
 1319 00ef F0        		.byte	-16
 1320 00f0 F0        		.byte	-16
 1321 00f1 F0        		.byte	-16
 1322 00f2 F0        		.byte	-16
 1323 00f3 F0        		.byte	-16
 1324 00f4 F0        		.byte	-16
 1325 00f5 F0        		.byte	-16
 1326 00f6 F0        		.byte	-16
 1327 00f7 F0        		.byte	-16
 1328 00f8 F0        		.byte	-16
 1329 00f9 F0        		.byte	-16
 1330 00fa F0        		.byte	-16
 1331 00fb F0        		.byte	-16
 1332 00fc F0        		.byte	-16
 1333 00fd F0        		.byte	-16
 1334 00fe 00        		.byte	0
 1335 00ff 00        		.byte	0
 1336 0100 00        		.byte	0
 1337 0101 00        		.byte	0
 1338 0102 00        		.byte	0
 1339 0103 00        		.byte	0
 1340 0104 00        		.byte	0
 1341 0105 00        		.byte	0
 1342 0106 00        		.byte	0
 1343 0107 80        		.byte	-128
 1344 0108 C0        		.byte	-64
 1345 0109 E0        		.byte	-32
 1346 010a E0        		.byte	-32
 1347 010b F0        		.byte	-16
 1348 010c F0        		.byte	-16
 1349 010d F0        		.byte	-16
 1350 010e F0        		.byte	-16
 1351 010f F0        		.byte	-16
 1352 0110 F0        		.byte	-16
 1353 0111 F0        		.byte	-16
 1354 0112 F0        		.byte	-16
 1355 0113 F0        		.byte	-16
 1356 0114 F0        		.byte	-16
 1357 0115 E0        		.byte	-32
 1358 0116 E0        		.byte	-32
 1359 0117 C0        		.byte	-64
 1360 0118 C0        		.byte	-64
 1361 0119 80        		.byte	-128
 1362 011a 00        		.byte	0
 1363 011b 00        		.byte	0
 1364 011c 00        		.byte	0
 1365 011d 00        		.byte	0
 1366 011e 00        		.byte	0
 1367 011f 00        		.byte	0
 1368 0120 00        		.byte	0
 1369 0121 00        		.byte	0
 1370 0122 00        		.byte	0
 1371 0123 00        		.byte	0
 1372 0124 00        		.byte	0
 1373 0125 00        		.byte	0
 1374 0126 80        		.byte	-128
 1375 0127 C0        		.byte	-64
 1376 0128 C0        		.byte	-64
 1377 0129 E0        		.byte	-32
 1378 012a E0        		.byte	-32
 1379 012b F0        		.byte	-16
 1380 012c F0        		.byte	-16
 1381 012d F0        		.byte	-16
 1382 012e F0        		.byte	-16
 1383 012f F0        		.byte	-16
 1384 0130 F0        		.byte	-16
 1385 0131 F0        		.byte	-16
 1386 0132 F0        		.byte	-16
 1387 0133 F0        		.byte	-16
 1388 0134 F0        		.byte	-16
 1389 0135 E0        		.byte	-32
 1390 0136 E0        		.byte	-32
 1391 0137 C0        		.byte	-64
 1392 0138 80        		.byte	-128
 1393 0139 00        		.byte	0
 1394 013a 00        		.byte	0
 1395 013b 00        		.byte	0
 1396 013c 00        		.byte	0
 1397 013d 00        		.byte	0
 1398 013e 00        		.byte	0
 1399 013f 00        		.byte	0
 1400 0140 00        		.byte	0
 1401 0141 00        		.byte	0
 1402 0142 00        		.byte	0
 1403 0143 80        		.byte	-128
 1404 0144 F0        		.byte	-16
 1405 0145 FC        		.byte	-4
 1406 0146 FF        		.byte	-1
 1407 0147 FF        		.byte	-1
 1408 0148 FF        		.byte	-1
 1409 0149 1F        		.byte	31
 1410 014a 07        		.byte	7
 1411 014b 03        		.byte	3
 1412 014c 01        		.byte	1
 1413 014d 00        		.byte	0
 1414 014e 00        		.byte	0
 1415 014f 00        		.byte	0
 1416 0150 00        		.byte	0
 1417 0151 00        		.byte	0
 1418 0152 00        		.byte	0
 1419 0153 01        		.byte	1
 1420 0154 01        		.byte	1
 1421 0155 03        		.byte	3
 1422 0156 0F        		.byte	15
 1423 0157 3F        		.byte	63
 1424 0158 FF        		.byte	-1
 1425 0159 FF        		.byte	-1
 1426 015a FE        		.byte	-2
 1427 015b F8        		.byte	-8
 1428 015c E0        		.byte	-32
 1429 015d 00        		.byte	0
 1430 015e 00        		.byte	0
 1431 015f 00        		.byte	0
 1432 0160 00        		.byte	0
 1433 0161 00        		.byte	0
 1434 0162 00        		.byte	0
 1435 0163 00        		.byte	0
 1436 0164 00        		.byte	0
 1437 0165 00        		.byte	0
 1438 0166 C0        		.byte	-64
 1439 0167 C0        		.byte	-64
 1440 0168 E0        		.byte	-32
 1441 0169 E0        		.byte	-32
 1442 016a F0        		.byte	-16
 1443 016b F8        		.byte	-8
 1444 016c F8        		.byte	-8
 1445 016d FC        		.byte	-4
 1446 016e 7E        		.byte	126
 1447 016f 3F        		.byte	63
 1448 0170 1F        		.byte	31
 1449 0171 FF        		.byte	-1
 1450 0172 FF        		.byte	-1
 1451 0173 FF        		.byte	-1
 1452 0174 FF        		.byte	-1
 1453 0175 FF        		.byte	-1
 1454 0176 00        		.byte	0
 1455 0177 00        		.byte	0
 1456 0178 00        		.byte	0
 1457 0179 00        		.byte	0
 1458 017a 00        		.byte	0
 1459 017b 00        		.byte	0
 1460 017c 00        		.byte	0
 1461 017d 00        		.byte	0
 1462 017e 00        		.byte	0
 1463 017f 00        		.byte	0
 1464 0180 00        		.byte	0
 1465 0181 00        		.byte	0
 1466 0182 00        		.byte	0
 1467 0183 F0        		.byte	-16
 1468 0184 FC        		.byte	-4
 1469 0185 FF        		.byte	-1
 1470 0186 FF        		.byte	-1
 1471 0187 FF        		.byte	-1
 1472 0188 1F        		.byte	31
 1473 0189 07        		.byte	7
 1474 018a 03        		.byte	3
 1475 018b 01        		.byte	1
 1476 018c 01        		.byte	1
 1477 018d 00        		.byte	0
 1478 018e 00        		.byte	0
 1479 018f 00        		.byte	0
 1480 0190 00        		.byte	0
 1481 0191 00        		.byte	0
 1482 0192 00        		.byte	0
 1483 0193 00        		.byte	0
 1484 0194 01        		.byte	1
 1485 0195 03        		.byte	3
 1486 0196 03        		.byte	3
 1487 0197 0F        		.byte	15
 1488 0198 FF        		.byte	-1
 1489 0199 FF        		.byte	-1
 1490 019a FF        		.byte	-1
 1491 019b FE        		.byte	-2
 1492 019c FC        		.byte	-4
 1493 019d C0        		.byte	-64
 1494 019e 00        		.byte	0
 1495 019f 00        		.byte	0
 1496 01a0 00        		.byte	0
 1497 01a1 00        		.byte	0
 1498 01a2 00        		.byte	0
 1499 01a3 70        		.byte	112
 1500 01a4 7C        		.byte	124
 1501 01a5 7F        		.byte	127
 1502 01a6 7F        		.byte	127
 1503 01a7 7F        		.byte	127
 1504 01a8 3F        		.byte	63
 1505 01a9 07        		.byte	7
 1506 01aa 03        		.byte	3
 1507 01ab 01        		.byte	1
 1508 01ac 01        		.byte	1
 1509 01ad 00        		.byte	0
 1510 01ae 00        		.byte	0
 1511 01af 00        		.byte	0
 1512 01b0 00        		.byte	0
 1513 01b1 00        		.byte	0
 1514 01b2 00        		.byte	0
 1515 01b3 01        		.byte	1
 1516 01b4 01        		.byte	1
 1517 01b5 07        		.byte	7
 1518 01b6 1F        		.byte	31
 1519 01b7 FF        		.byte	-1
 1520 01b8 FF        		.byte	-1
 1521 01b9 FF        		.byte	-1
 1522 01ba FE        		.byte	-2
 1523 01bb F8        		.byte	-8
 1524 01bc 00        		.byte	0
 1525 01bd 00        		.byte	0
 1526 01be 00        		.byte	0
 1527 01bf 00        		.byte	0
 1528 01c0 00        		.byte	0
 1529 01c1 00        		.byte	0
 1530 01c2 00        		.byte	0
 1531 01c3 00        		.byte	0
 1532 01c4 00        		.byte	0
 1533 01c5 00        		.byte	0
 1534 01c6 00        		.byte	0
 1535 01c7 00        		.byte	0
 1536 01c8 00        		.byte	0
 1537 01c9 00        		.byte	0
 1538 01ca 00        		.byte	0
 1539 01cb 00        		.byte	0
 1540 01cc C0        		.byte	-64
 1541 01cd E0        		.byte	-32
 1542 01ce F0        		.byte	-16
 1543 01cf FC        		.byte	-4
 1544 01d0 FE        		.byte	-2
 1545 01d1 3F        		.byte	63
 1546 01d2 1F        		.byte	31
 1547 01d3 FF        		.byte	-1
 1548 01d4 FF        		.byte	-1
 1549 01d5 FF        		.byte	-1
 1550 01d6 FF        		.byte	-1
 1551 01d7 FF        		.byte	-1
 1552 01d8 00        		.byte	0
 1553 01d9 00        		.byte	0
 1554 01da 00        		.byte	0
 1555 01db 00        		.byte	0
 1556 01dc 00        		.byte	0
 1557 01dd 00        		.byte	0
 1558 01de 00        		.byte	0
 1559 01df 00        		.byte	0
 1560 01e0 00        		.byte	0
 1561 01e1 00        		.byte	0
 1562 01e2 00        		.byte	0
 1563 01e3 00        		.byte	0
 1564 01e4 00        		.byte	0
 1565 01e5 80        		.byte	-128
 1566 01e6 FE        		.byte	-2
 1567 01e7 FF        		.byte	-1
 1568 01e8 FF        		.byte	-1
 1569 01e9 FF        		.byte	-1
 1570 01ea 7F        		.byte	127
 1571 01eb 03        		.byte	3
 1572 01ec 01        		.byte	1
 1573 01ed 01        		.byte	1
 1574 01ee 01        		.byte	1
 1575 01ef 01        		.byte	1
 1576 01f0 01        		.byte	1
 1577 01f1 01        		.byte	1
 1578 01f2 01        		.byte	1
 1579 01f3 01        		.byte	1
 1580 01f4 01        		.byte	1
 1581 01f5 01        		.byte	1
 1582 01f6 01        		.byte	1
 1583 01f7 01        		.byte	1
 1584 01f8 01        		.byte	1
 1585 01f9 01        		.byte	1
 1586 01fa 01        		.byte	1
 1587 01fb 01        		.byte	1
 1588 01fc 00        		.byte	0
 1589 01fd 00        		.byte	0
 1590 01fe 00        		.byte	0
 1591 01ff 00        		.byte	0
 1592 0200 00        		.byte	0
 1593 0201 00        		.byte	0
 1594 0202 00        		.byte	0
 1595 0203 80        		.byte	-128
 1596 0204 F0        		.byte	-16
 1597 0205 FC        		.byte	-4
 1598 0206 FE        		.byte	-2
 1599 0207 FF        		.byte	-1
 1600 0208 7F        		.byte	127
 1601 0209 1F        		.byte	31
 1602 020a 07        		.byte	7
 1603 020b 03        		.byte	3
 1604 020c 01        		.byte	1
 1605 020d 01        		.byte	1
 1606 020e 00        		.byte	0
 1607 020f 00        		.byte	0
 1608 0210 00        		.byte	0
 1609 0211 00        		.byte	0
 1610 0212 00        		.byte	0
 1611 0213 00        		.byte	0
 1612 0214 01        		.byte	1
 1613 0215 01        		.byte	1
 1614 0216 03        		.byte	3
 1615 0217 0F        		.byte	15
 1616 0218 3F        		.byte	63
 1617 0219 3F        		.byte	63
 1618 021a 3F        		.byte	63
 1619 021b 3E        		.byte	62
 1620 021c 38        		.byte	56
 1621 021d 00        		.byte	0
 1622 021e 00        		.byte	0
 1623 021f 00        		.byte	0
 1624 0220 00        		.byte	0
 1625 0221 00        		.byte	0
 1626 0222 00        		.byte	0
 1627 0223 01        		.byte	1
 1628 0224 01        		.byte	1
 1629 0225 01        		.byte	1
 1630 0226 01        		.byte	1
 1631 0227 01        		.byte	1
 1632 0228 01        		.byte	1
 1633 0229 01        		.byte	1
 1634 022a 01        		.byte	1
 1635 022b 01        		.byte	1
 1636 022c 01        		.byte	1
 1637 022d 01        		.byte	1
 1638 022e 01        		.byte	1
 1639 022f 01        		.byte	1
 1640 0230 01        		.byte	1
 1641 0231 01        		.byte	1
 1642 0232 01        		.byte	1
 1643 0233 81        		.byte	-127
 1644 0234 E1        		.byte	-31
 1645 0235 F1        		.byte	-15
 1646 0236 FD        		.byte	-3
 1647 0237 FF        		.byte	-1
 1648 0238 FF        		.byte	-1
 1649 0239 3F        		.byte	63
 1650 023a 1F        		.byte	31
 1651 023b 07        		.byte	7
 1652 023c 03        		.byte	3
 1653 023d 01        		.byte	1
 1654 023e 00        		.byte	0
 1655 023f 00        		.byte	0
 1656 0240 00        		.byte	0
 1657 0241 00        		.byte	0
 1658 0242 00        		.byte	0
 1659 0243 00        		.byte	0
 1660 0244 F8        		.byte	-8
 1661 0245 FE        		.byte	-2
 1662 0246 FF        		.byte	-1
 1663 0247 FF        		.byte	-1
 1664 0248 FF        		.byte	-1
 1665 0249 1F        		.byte	31
 1666 024a 07        		.byte	7
 1667 024b 03        		.byte	3
 1668 024c 01        		.byte	1
 1669 024d 00        		.byte	0
 1670 024e 00        		.byte	0
 1671 024f 00        		.byte	0
 1672 0250 00        		.byte	0
 1673 0251 00        		.byte	0
 1674 0252 00        		.byte	0
 1675 0253 01        		.byte	1
 1676 0254 01        		.byte	1
 1677 0255 03        		.byte	3
 1678 0256 0F        		.byte	15
 1679 0257 FF        		.byte	-1
 1680 0258 FF        		.byte	-1
 1681 0259 FF        		.byte	-1
 1682 025a FF        		.byte	-1
 1683 025b FC        		.byte	-4
 1684 025c 00        		.byte	0
 1685 025d 00        		.byte	0
 1686 025e 00        		.byte	0
 1687 025f 00        		.byte	0
 1688 0260 00        		.byte	0
 1689 0261 00        		.byte	0
 1690 0262 00        		.byte	0
 1691 0263 F0        		.byte	-16
 1692 0264 FC        		.byte	-4
 1693 0265 FF        		.byte	-1
 1694 0266 FF        		.byte	-1
 1695 0267 FF        		.byte	-1
 1696 0268 3F        		.byte	63
 1697 0269 0F        		.byte	15
 1698 026a 07        		.byte	7
 1699 026b 03        		.byte	3
 1700 026c 01        		.byte	1
 1701 026d 00        		.byte	0
 1702 026e 00        		.byte	0
 1703 026f 00        		.byte	0
 1704 0270 00        		.byte	0
 1705 0271 00        		.byte	0
 1706 0272 00        		.byte	0
 1707 0273 01        		.byte	1
 1708 0274 01        		.byte	1
 1709 0275 03        		.byte	3
 1710 0276 07        		.byte	7
 1711 0277 1F        		.byte	31
 1712 0278 FF        		.byte	-1
 1713 0279 FF        		.byte	-1
 1714 027a FE        		.byte	-2
 1715 027b FC        		.byte	-4
 1716 027c F0        		.byte	-16
 1717 027d 00        		.byte	0
 1718 027e 00        		.byte	0
 1719 027f 00        		.byte	0
 1720 0280 00        		.byte	0
 1721 0281 00        		.byte	0
 1722 0282 C0        		.byte	-64
 1723 0283 FF        		.byte	-1
 1724 0284 FF        		.byte	-1
 1725 0285 FF        		.byte	-1
 1726 0286 FF        		.byte	-1
 1727 0287 FF        		.byte	-1
 1728 0288 00        		.byte	0
 1729 0289 00        		.byte	0
 1730 028a 00        		.byte	0
 1731 028b 00        		.byte	0
 1732 028c 00        		.byte	0
 1733 028d 00        		.byte	0
 1734 028e 00        		.byte	0
 1735 028f 00        		.byte	0
 1736 0290 00        		.byte	0
 1737 0291 00        		.byte	0
 1738 0292 00        		.byte	0
 1739 0293 00        		.byte	0
 1740 0294 00        		.byte	0
 1741 0295 00        		.byte	0
 1742 0296 00        		.byte	0
 1743 0297 00        		.byte	0
 1744 0298 1F        		.byte	31
 1745 0299 FF        		.byte	-1
 1746 029a FF        		.byte	-1
 1747 029b FF        		.byte	-1
 1748 029c FF        		.byte	-1
 1749 029d FC        		.byte	-4
 1750 029e 00        		.byte	0
 1751 029f 00        		.byte	0
 1752 02a0 00        		.byte	0
 1753 02a1 00        		.byte	0
 1754 02a2 00        		.byte	0
 1755 02a3 00        		.byte	0
 1756 02a4 00        		.byte	0
 1757 02a5 00        		.byte	0
 1758 02a6 07        		.byte	7
 1759 02a7 07        		.byte	7
 1760 02a8 03        		.byte	3
 1761 02a9 03        		.byte	3
 1762 02aa 01        		.byte	1
 1763 02ab 01        		.byte	1
 1764 02ac 00        		.byte	0
 1765 02ad 00        		.byte	0
 1766 02ae 00        		.byte	0
 1767 02af 00        		.byte	0
 1768 02b0 00        		.byte	0
 1769 02b1 FF        		.byte	-1
 1770 02b2 FF        		.byte	-1
 1771 02b3 FF        		.byte	-1
 1772 02b4 FF        		.byte	-1
 1773 02b5 FF        		.byte	-1
 1774 02b6 00        		.byte	0
 1775 02b7 00        		.byte	0
 1776 02b8 00        		.byte	0
 1777 02b9 00        		.byte	0
 1778 02ba 00        		.byte	0
 1779 02bb 00        		.byte	0
 1780 02bc 00        		.byte	0
 1781 02bd 00        		.byte	0
 1782 02be 00        		.byte	0
 1783 02bf 00        		.byte	0
 1784 02c0 00        		.byte	0
 1785 02c1 00        		.byte	0
 1786 02c2 00        		.byte	0
 1787 02c3 00        		.byte	0
 1788 02c4 00        		.byte	0
 1789 02c5 00        		.byte	0
 1790 02c6 00        		.byte	0
 1791 02c7 00        		.byte	0
 1792 02c8 00        		.byte	0
 1793 02c9 00        		.byte	0
 1794 02ca 00        		.byte	0
 1795 02cb 00        		.byte	0
 1796 02cc 00        		.byte	0
 1797 02cd 00        		.byte	0
 1798 02ce 00        		.byte	0
 1799 02cf 00        		.byte	0
 1800 02d0 00        		.byte	0
 1801 02d1 00        		.byte	0
 1802 02d2 00        		.byte	0
 1803 02d3 00        		.byte	0
 1804 02d4 80        		.byte	-128
 1805 02d5 C0        		.byte	-64
 1806 02d6 E0        		.byte	-32
 1807 02d7 F8        		.byte	-8
 1808 02d8 FF        		.byte	-1
 1809 02d9 FF        		.byte	-1
 1810 02da FF        		.byte	-1
 1811 02db 3F        		.byte	63
 1812 02dc 1F        		.byte	31
 1813 02dd 01        		.byte	1
 1814 02de 00        		.byte	0
 1815 02df 00        		.byte	0
 1816 02e0 00        		.byte	0
 1817 02e1 00        		.byte	0
 1818 02e2 00        		.byte	0
 1819 02e3 00        		.byte	0
 1820 02e4 00        		.byte	0
 1821 02e5 00        		.byte	0
 1822 02e6 00        		.byte	0
 1823 02e7 00        		.byte	0
 1824 02e8 00        		.byte	0
 1825 02e9 00        		.byte	0
 1826 02ea 00        		.byte	0
 1827 02eb 00        		.byte	0
 1828 02ec 00        		.byte	0
 1829 02ed E0        		.byte	-32
 1830 02ee E0        		.byte	-32
 1831 02ef E0        		.byte	-32
 1832 02f0 E0        		.byte	-32
 1833 02f1 E0        		.byte	-32
 1834 02f2 E0        		.byte	-32
 1835 02f3 F0        		.byte	-16
 1836 02f4 F8        		.byte	-8
 1837 02f5 FC        		.byte	-4
 1838 02f6 FF        		.byte	-1
 1839 02f7 3F        		.byte	63
 1840 02f8 3F        		.byte	63
 1841 02f9 1F        		.byte	31
 1842 02fa 0F        		.byte	15
 1843 02fb 03        		.byte	3
 1844 02fc 00        		.byte	0
 1845 02fd 00        		.byte	0
 1846 02fe 00        		.byte	0
 1847 02ff 00        		.byte	0
 1848 0300 00        		.byte	0
 1849 0301 00        		.byte	0
 1850 0302 00        		.byte	0
 1851 0303 00        		.byte	0
 1852 0304 00        		.byte	0
 1853 0305 00        		.byte	0
 1854 0306 80        		.byte	-128
 1855 0307 C0        		.byte	-64
 1856 0308 F0        		.byte	-16
 1857 0309 F8        		.byte	-8
 1858 030a FE        		.byte	-2
 1859 030b 7F        		.byte	127
 1860 030c 3F        		.byte	63
 1861 030d 0F        		.byte	15
 1862 030e 07        		.byte	7
 1863 030f 01        		.byte	1
 1864 0310 00        		.byte	0
 1865 0311 00        		.byte	0
 1866 0312 00        		.byte	0
 1867 0313 FF        		.byte	-1
 1868 0314 FF        		.byte	-1
 1869 0315 FF        		.byte	-1
 1870 0316 FF        		.byte	-1
 1871 0317 FF        		.byte	-1
 1872 0318 00        		.byte	0
 1873 0319 00        		.byte	0
 1874 031a 00        		.byte	0
 1875 031b 00        		.byte	0
 1876 031c 00        		.byte	0
 1877 031d 00        		.byte	0
 1878 031e 00        		.byte	0
 1879 031f 00        		.byte	0
 1880 0320 00        		.byte	0
 1881 0321 00        		.byte	0
 1882 0322 00        		.byte	0
 1883 0323 00        		.byte	0
 1884 0324 F0        		.byte	-16
 1885 0325 FF        		.byte	-1
 1886 0326 FF        		.byte	-1
 1887 0327 FF        		.byte	-1
 1888 0328 FF        		.byte	-1
 1889 0329 E7        		.byte	-25
 1890 032a F0        		.byte	-16
 1891 032b F8        		.byte	-8
 1892 032c 78        		.byte	120
 1893 032d 78        		.byte	120
 1894 032e 7C        		.byte	124
 1895 032f 7C        		.byte	124
 1896 0330 7C        		.byte	124
 1897 0331 7C        		.byte	124
 1898 0332 7C        		.byte	124
 1899 0333 7C        		.byte	124
 1900 0334 FC        		.byte	-4
 1901 0335 F8        		.byte	-8
 1902 0336 F8        		.byte	-8
 1903 0337 F8        		.byte	-8
 1904 0338 F0        		.byte	-16
 1905 0339 E0        		.byte	-32
 1906 033a C0        		.byte	-64
 1907 033b 80        		.byte	-128
 1908 033c 00        		.byte	0
 1909 033d 00        		.byte	0
 1910 033e 00        		.byte	0
 1911 033f 00        		.byte	0
 1912 0340 00        		.byte	0
 1913 0341 00        		.byte	0
 1914 0342 F0        		.byte	-16
 1915 0343 FF        		.byte	-1
 1916 0344 FF        		.byte	-1
 1917 0345 FF        		.byte	-1
 1918 0346 FF        		.byte	-1
 1919 0347 1F        		.byte	31
 1920 0348 80        		.byte	-128
 1921 0349 C0        		.byte	-64
 1922 034a E0        		.byte	-32
 1923 034b F0        		.byte	-16
 1924 034c F0        		.byte	-16
 1925 034d F8        		.byte	-8
 1926 034e 78        		.byte	120
 1927 034f 78        		.byte	120
 1928 0350 78        		.byte	120
 1929 0351 78        		.byte	120
 1930 0352 78        		.byte	120
 1931 0353 F8        		.byte	-8
 1932 0354 F8        		.byte	-8
 1933 0355 F8        		.byte	-8
 1934 0356 F0        		.byte	-16
 1935 0357 F0        		.byte	-16
 1936 0358 E0        		.byte	-32
 1937 0359 C0        		.byte	-64
 1938 035a C0        		.byte	-64
 1939 035b 00        		.byte	0
 1940 035c 00        		.byte	0
 1941 035d 00        		.byte	0
 1942 035e 00        		.byte	0
 1943 035f 00        		.byte	0
 1944 0360 00        		.byte	0
 1945 0361 00        		.byte	0
 1946 0362 00        		.byte	0
 1947 0363 00        		.byte	0
 1948 0364 00        		.byte	0
 1949 0365 00        		.byte	0
 1950 0366 00        		.byte	0
 1951 0367 00        		.byte	0
 1952 0368 00        		.byte	0
 1953 0369 00        		.byte	0
 1954 036a 00        		.byte	0
 1955 036b 00        		.byte	0
 1956 036c 00        		.byte	0
 1957 036d 00        		.byte	0
 1958 036e 80        		.byte	-128
 1959 036f E0        		.byte	-32
 1960 0370 F8        		.byte	-8
 1961 0371 FC        		.byte	-4
 1962 0372 FF        		.byte	-1
 1963 0373 FF        		.byte	-1
 1964 0374 7F        		.byte	127
 1965 0375 1F        		.byte	31
 1966 0376 07        		.byte	7
 1967 0377 01        		.byte	1
 1968 0378 00        		.byte	0
 1969 0379 00        		.byte	0
 1970 037a 00        		.byte	0
 1971 037b 00        		.byte	0
 1972 037c 00        		.byte	0
 1973 037d 00        		.byte	0
 1974 037e 00        		.byte	0
 1975 037f 00        		.byte	0
 1976 0380 00        		.byte	0
 1977 0381 00        		.byte	0
 1978 0382 00        		.byte	0
 1979 0383 00        		.byte	0
 1980 0384 01        		.byte	1
 1981 0385 0F        		.byte	15
 1982 0386 1F        		.byte	31
 1983 0387 3F        		.byte	63
 1984 0388 3F        		.byte	63
 1985 0389 FF        		.byte	-1
 1986 038a FC        		.byte	-4
 1987 038b F8        		.byte	-8
 1988 038c F0        		.byte	-16
 1989 038d E0        		.byte	-32
 1990 038e E0        		.byte	-32
 1991 038f E0        		.byte	-32
 1992 0390 E0        		.byte	-32
 1993 0391 E0        		.byte	-32
 1994 0392 E0        		.byte	-32
 1995 0393 F0        		.byte	-16
 1996 0394 F0        		.byte	-16
 1997 0395 F8        		.byte	-8
 1998 0396 FE        		.byte	-2
 1999 0397 7F        		.byte	127
 2000 0398 3F        		.byte	63
 2001 0399 1F        		.byte	31
 2002 039a 0F        		.byte	15
 2003 039b 07        		.byte	7
 2004 039c 00        		.byte	0
 2005 039d 00        		.byte	0
 2006 039e 00        		.byte	0
 2007 039f 00        		.byte	0
 2008 03a0 00        		.byte	0
 2009 03a1 00        		.byte	0
 2010 03a2 07        		.byte	7
 2011 03a3 FF        		.byte	-1
 2012 03a4 FF        		.byte	-1
 2013 03a5 FF        		.byte	-1
 2014 03a6 FF        		.byte	-1
 2015 03a7 FF        		.byte	-1
 2016 03a8 C0        		.byte	-64
 2017 03a9 00        		.byte	0
 2018 03aa 00        		.byte	0
 2019 03ab 00        		.byte	0
 2020 03ac 00        		.byte	0
 2021 03ad 00        		.byte	0
 2022 03ae 00        		.byte	0
 2023 03af 00        		.byte	0
 2024 03b0 00        		.byte	0
 2025 03b1 00        		.byte	0
 2026 03b2 00        		.byte	0
 2027 03b3 00        		.byte	0
 2028 03b4 00        		.byte	0
 2029 03b5 00        		.byte	0
 2030 03b6 00        		.byte	0
 2031 03b7 C0        		.byte	-64
 2032 03b8 FF        		.byte	-1
 2033 03b9 FF        		.byte	-1
 2034 03ba FF        		.byte	-1
 2035 03bb FF        		.byte	-1
 2036 03bc FF        		.byte	-1
 2037 03bd FF        		.byte	-1
 2038 03be 00        		.byte	0
 2039 03bf 00        		.byte	0
 2040 03c0 00        		.byte	0
 2041 03c1 00        		.byte	0
 2042 03c2 0F        		.byte	15
 2043 03c3 FF        		.byte	-1
 2044 03c4 FF        		.byte	-1
 2045 03c5 FF        		.byte	-1
 2046 03c6 FF        		.byte	-1
 2047 03c7 FF        		.byte	-1
 2048 03c8 00        		.byte	0
 2049 03c9 00        		.byte	0
 2050 03ca 00        		.byte	0
 2051 03cb 00        		.byte	0
 2052 03cc 00        		.byte	0
 2053 03cd 00        		.byte	0
 2054 03ce 00        		.byte	0
 2055 03cf 00        		.byte	0
 2056 03d0 00        		.byte	0
 2057 03d1 00        		.byte	0
 2058 03d2 00        		.byte	0
 2059 03d3 00        		.byte	0
 2060 03d4 00        		.byte	0
 2061 03d5 00        		.byte	0
 2062 03d6 00        		.byte	0
 2063 03d7 00        		.byte	0
 2064 03d8 C0        		.byte	-64
 2065 03d9 FF        		.byte	-1
 2066 03da FF        		.byte	-1
 2067 03db FF        		.byte	-1
 2068 03dc FF        		.byte	-1
 2069 03dd FF        		.byte	-1
 2070 03de 00        		.byte	0
 2071 03df 00        		.byte	0
 2072 03e0 00        		.byte	0
 2073 03e1 00        		.byte	0
 2074 03e2 00        		.byte	0
 2075 03e3 00        		.byte	0
 2076 03e4 00        		.byte	0
 2077 03e5 00        		.byte	0
 2078 03e6 00        		.byte	0
 2079 03e7 00        		.byte	0
 2080 03e8 00        		.byte	0
 2081 03e9 00        		.byte	0
 2082 03ea 00        		.byte	0
 2083 03eb 00        		.byte	0
 2084 03ec 00        		.byte	0
 2085 03ed 00        		.byte	0
 2086 03ee 00        		.byte	0
 2087 03ef 00        		.byte	0
 2088 03f0 00        		.byte	0
 2089 03f1 FF        		.byte	-1
 2090 03f2 FF        		.byte	-1
 2091 03f3 FF        		.byte	-1
 2092 03f4 FF        		.byte	-1
 2093 03f5 FF        		.byte	-1
 2094 03f6 00        		.byte	0
 2095 03f7 00        		.byte	0
 2096 03f8 00        		.byte	0
 2097 03f9 00        		.byte	0
 2098 03fa 00        		.byte	0
 2099 03fb 00        		.byte	0
 2100 03fc 00        		.byte	0
 2101 03fd 00        		.byte	0
 2102 03fe 00        		.byte	0
 2103 03ff 00        		.byte	0
 2104 0400 00        		.byte	0
 2105 0401 00        		.byte	0
 2106 0402 00        		.byte	0
 2107 0403 00        		.byte	0
 2108 0404 00        		.byte	0
 2109 0405 00        		.byte	0
 2110 0406 00        		.byte	0
 2111 0407 00        		.byte	0
 2112 0408 00        		.byte	0
 2113 0409 00        		.byte	0
 2114 040a 00        		.byte	0
 2115 040b 80        		.byte	-128
 2116 040c C0        		.byte	-64
 2117 040d C0        		.byte	-64
 2118 040e E0        		.byte	-32
 2119 040f F0        		.byte	-16
 2120 0410 F8        		.byte	-8
 2121 0411 FC        		.byte	-4
 2122 0412 FE        		.byte	-2
 2123 0413 7F        		.byte	127
 2124 0414 3F        		.byte	63
 2125 0415 1F        		.byte	31
 2126 0416 0F        		.byte	15
 2127 0417 07        		.byte	7
 2128 0418 03        		.byte	3
 2129 0419 01        		.byte	1
 2130 041a 00        		.byte	0
 2131 041b 00        		.byte	0
 2132 041c 00        		.byte	0
 2133 041d 00        		.byte	0
 2134 041e 00        		.byte	0
 2135 041f 00        		.byte	0
 2136 0420 00        		.byte	0
 2137 0421 00        		.byte	0
 2138 0422 00        		.byte	0
 2139 0423 00        		.byte	0
 2140 0424 00        		.byte	0
 2141 0425 00        		.byte	0
 2142 0426 00        		.byte	0
 2143 0427 00        		.byte	0
 2144 0428 00        		.byte	0
 2145 0429 00        		.byte	0
 2146 042a 00        		.byte	0
 2147 042b 00        		.byte	0
 2148 042c 00        		.byte	0
 2149 042d 03        		.byte	3
 2150 042e 03        		.byte	3
 2151 042f 03        		.byte	3
 2152 0430 01        		.byte	1
 2153 0431 03        		.byte	3
 2154 0432 03        		.byte	3
 2155 0433 03        		.byte	3
 2156 0434 03        		.byte	3
 2157 0435 07        		.byte	7
 2158 0436 0F        		.byte	15
 2159 0437 1F        		.byte	31
 2160 0438 FF        		.byte	-1
 2161 0439 FF        		.byte	-1
 2162 043a FE        		.byte	-2
 2163 043b FC        		.byte	-4
 2164 043c F8        		.byte	-8
 2165 043d E0        		.byte	-32
 2166 043e 00        		.byte	0
 2167 043f 00        		.byte	0
 2168 0440 00        		.byte	0
 2169 0441 C0        		.byte	-64
 2170 0442 E0        		.byte	-32
 2171 0443 F8        		.byte	-8
 2172 0444 FC        		.byte	-4
 2173 0445 FF        		.byte	-1
 2174 0446 BF        		.byte	-65
 2175 0447 9F        		.byte	-97
 2176 0448 87        		.byte	-121
 2177 0449 83        		.byte	-125
 2178 044a 80        		.byte	-128
 2179 044b 80        		.byte	-128
 2180 044c 80        		.byte	-128
 2181 044d 80        		.byte	-128
 2182 044e 80        		.byte	-128
 2183 044f 80        		.byte	-128
 2184 0450 80        		.byte	-128
 2185 0451 80        		.byte	-128
 2186 0452 80        		.byte	-128
 2187 0453 FF        		.byte	-1
 2188 0454 FF        		.byte	-1
 2189 0455 FF        		.byte	-1
 2190 0456 FF        		.byte	-1
 2191 0457 FF        		.byte	-1
 2192 0458 80        		.byte	-128
 2193 0459 80        		.byte	-128
 2194 045a 80        		.byte	-128
 2195 045b 80        		.byte	-128
 2196 045c 80        		.byte	-128
 2197 045d 80        		.byte	-128
 2198 045e 00        		.byte	0
 2199 045f 00        		.byte	0
 2200 0460 00        		.byte	0
 2201 0461 00        		.byte	0
 2202 0462 00        		.byte	0
 2203 0463 02        		.byte	2
 2204 0464 03        		.byte	3
 2205 0465 03        		.byte	3
 2206 0466 03        		.byte	3
 2207 0467 07        		.byte	7
 2208 0468 03        		.byte	3
 2209 0469 01        		.byte	1
 2210 046a 00        		.byte	0
 2211 046b 00        		.byte	0
 2212 046c 00        		.byte	0
 2213 046d 00        		.byte	0
 2214 046e 00        		.byte	0
 2215 046f 00        		.byte	0
 2216 0470 00        		.byte	0
 2217 0471 00        		.byte	0
 2218 0472 00        		.byte	0
 2219 0473 00        		.byte	0
 2220 0474 00        		.byte	0
 2221 0475 00        		.byte	0
 2222 0476 01        		.byte	1
 2223 0477 03        		.byte	3
 2224 0478 1F        		.byte	31
 2225 0479 FF        		.byte	-1
 2226 047a FF        		.byte	-1
 2227 047b FF        		.byte	-1
 2228 047c FF        		.byte	-1
 2229 047d FC        		.byte	-4
 2230 047e 00        		.byte	0
 2231 047f 00        		.byte	0
 2232 0480 00        		.byte	0
 2233 0481 00        		.byte	0
 2234 0482 FF        		.byte	-1
 2235 0483 FF        		.byte	-1
 2236 0484 FF        		.byte	-1
 2237 0485 FF        		.byte	-1
 2238 0486 FF        		.byte	-1
 2239 0487 FF        		.byte	-1
 2240 0488 3F        		.byte	63
 2241 0489 07        		.byte	7
 2242 048a 03        		.byte	3
 2243 048b 01        		.byte	1
 2244 048c 00        		.byte	0
 2245 048d 00        		.byte	0
 2246 048e 00        		.byte	0
 2247 048f 00        		.byte	0
 2248 0490 00        		.byte	0
 2249 0491 00        		.byte	0
 2250 0492 00        		.byte	0
 2251 0493 00        		.byte	0
 2252 0494 00        		.byte	0
 2253 0495 01        		.byte	1
 2254 0496 03        		.byte	3
 2255 0497 07        		.byte	7
 2256 0498 3F        		.byte	63
 2257 0499 FF        		.byte	-1
 2258 049a FF        		.byte	-1
 2259 049b FF        		.byte	-1
 2260 049c FE        		.byte	-2
 2261 049d F0        		.byte	-16
 2262 049e 00        		.byte	0
 2263 049f 00        		.byte	0
 2264 04a0 00        		.byte	0
 2265 04a1 00        		.byte	0
 2266 04a2 00        		.byte	0
 2267 04a3 00        		.byte	0
 2268 04a4 00        		.byte	0
 2269 04a5 00        		.byte	0
 2270 04a6 00        		.byte	0
 2271 04a7 00        		.byte	0
 2272 04a8 00        		.byte	0
 2273 04a9 00        		.byte	0
 2274 04aa 00        		.byte	0
 2275 04ab 80        		.byte	-128
 2276 04ac F0        		.byte	-16
 2277 04ad FC        		.byte	-4
 2278 04ae FF        		.byte	-1
 2279 04af FF        		.byte	-1
 2280 04b0 FF        		.byte	-1
 2281 04b1 3F        		.byte	63
 2282 04b2 07        		.byte	7
 2283 04b3 01        		.byte	1
 2284 04b4 00        		.byte	0
 2285 04b5 00        		.byte	0
 2286 04b6 00        		.byte	0
 2287 04b7 00        		.byte	0
 2288 04b8 00        		.byte	0
 2289 04b9 00        		.byte	0
 2290 04ba 00        		.byte	0
 2291 04bb 00        		.byte	0
 2292 04bc 00        		.byte	0
 2293 04bd 00        		.byte	0
 2294 04be 00        		.byte	0
 2295 04bf 00        		.byte	0
 2296 04c0 00        		.byte	0
 2297 04c1 00        		.byte	0
 2298 04c2 00        		.byte	0
 2299 04c3 F0        		.byte	-16
 2300 04c4 F8        		.byte	-8
 2301 04c5 FC        		.byte	-4
 2302 04c6 FE        		.byte	-2
 2303 04c7 FF        		.byte	-1
 2304 04c8 3F        		.byte	63
 2305 04c9 0F        		.byte	15
 2306 04ca 07        		.byte	7
 2307 04cb 07        		.byte	7
 2308 04cc 03        		.byte	3
 2309 04cd 03        		.byte	3
 2310 04ce 01        		.byte	1
 2311 04cf 01        		.byte	1
 2312 04d0 01        		.byte	1
 2313 04d1 01        		.byte	1
 2314 04d2 03        		.byte	3
 2315 04d3 03        		.byte	3
 2316 04d4 03        		.byte	3
 2317 04d5 07        		.byte	7
 2318 04d6 0F        		.byte	15
 2319 04d7 1F        		.byte	31
 2320 04d8 7F        		.byte	127
 2321 04d9 FE        		.byte	-2
 2322 04da FE        		.byte	-2
 2323 04db FC        		.byte	-4
 2324 04dc F0        		.byte	-16
 2325 04dd C0        		.byte	-64
 2326 04de 00        		.byte	0
 2327 04df 00        		.byte	0
 2328 04e0 00        		.byte	0
 2329 04e1 00        		.byte	0
 2330 04e2 00        		.byte	0
 2331 04e3 00        		.byte	0
 2332 04e4 03        		.byte	3
 2333 04e5 07        		.byte	7
 2334 04e6 0F        		.byte	15
 2335 04e7 1F        		.byte	31
 2336 04e8 3F        		.byte	63
 2337 04e9 3F        		.byte	63
 2338 04ea 7E        		.byte	126
 2339 04eb 7C        		.byte	124
 2340 04ec 7C        		.byte	124
 2341 04ed F8        		.byte	-8
 2342 04ee F8        		.byte	-8
 2343 04ef F8        		.byte	-8
 2344 04f0 78        		.byte	120
 2345 04f1 78        		.byte	120
 2346 04f2 78        		.byte	120
 2347 04f3 7C        		.byte	124
 2348 04f4 3C        		.byte	60
 2349 04f5 3E        		.byte	62
 2350 04f6 1F        		.byte	31
 2351 04f7 0F        		.byte	15
 2352 04f8 07        		.byte	7
 2353 04f9 FF        		.byte	-1
 2354 04fa FF        		.byte	-1
 2355 04fb FF        		.byte	-1
 2356 04fc FF        		.byte	-1
 2357 04fd FF        		.byte	-1
 2358 04fe 00        		.byte	0
 2359 04ff 00        		.byte	0
 2360 0500 00        		.byte	0
 2361 0501 00        		.byte	0
 2362 0502 00        		.byte	0
 2363 0503 07        		.byte	7
 2364 0504 7F        		.byte	127
 2365 0505 FF        		.byte	-1
 2366 0506 FF        		.byte	-1
 2367 0507 FF        		.byte	-1
 2368 0508 F8        		.byte	-8
 2369 0509 C0        		.byte	-64
 2370 050a 80        		.byte	-128
 2371 050b 00        		.byte	0
 2372 050c 00        		.byte	0
 2373 050d 00        		.byte	0
 2374 050e 00        		.byte	0
 2375 050f 00        		.byte	0
 2376 0510 00        		.byte	0
 2377 0511 00        		.byte	0
 2378 0512 00        		.byte	0
 2379 0513 00        		.byte	0
 2380 0514 00        		.byte	0
 2381 0515 00        		.byte	0
 2382 0516 80        		.byte	-128
 2383 0517 F0        		.byte	-16
 2384 0518 FF        		.byte	-1
 2385 0519 FF        		.byte	-1
 2386 051a FF        		.byte	-1
 2387 051b FF        		.byte	-1
 2388 051c 1F        		.byte	31
 2389 051d 01        		.byte	1
 2390 051e 00        		.byte	0
 2391 051f 00        		.byte	0
 2392 0520 00        		.byte	0
 2393 0521 00        		.byte	0
 2394 0522 00        		.byte	0
 2395 0523 00        		.byte	0
 2396 0524 00        		.byte	0
 2397 0525 00        		.byte	0
 2398 0526 00        		.byte	0
 2399 0527 00        		.byte	0
 2400 0528 00        		.byte	0
 2401 0529 00        		.byte	0
 2402 052a 00        		.byte	0
 2403 052b 00        		.byte	0
 2404 052c 00        		.byte	0
 2405 052d 00        		.byte	0
 2406 052e 00        		.byte	0
 2407 052f 00        		.byte	0
 2408 0530 00        		.byte	0
 2409 0531 FF        		.byte	-1
 2410 0532 FF        		.byte	-1
 2411 0533 FF        		.byte	-1
 2412 0534 FF        		.byte	-1
 2413 0535 FF        		.byte	-1
 2414 0536 00        		.byte	0
 2415 0537 00        		.byte	0
 2416 0538 00        		.byte	0
 2417 0539 00        		.byte	0
 2418 053a 00        		.byte	0
 2419 053b 00        		.byte	0
 2420 053c 00        		.byte	0
 2421 053d 00        		.byte	0
 2422 053e 00        		.byte	0
 2423 053f 00        		.byte	0
 2424 0540 00        		.byte	0
 2425 0541 00        		.byte	0
 2426 0542 00        		.byte	0
 2427 0543 00        		.byte	0
 2428 0544 C0        		.byte	-64
 2429 0545 E0        		.byte	-32
 2430 0546 F0        		.byte	-16
 2431 0547 F8        		.byte	-8
 2432 0548 FC        		.byte	-4
 2433 0549 FE        		.byte	-2
 2434 054a 7F        		.byte	127
 2435 054b 3F        		.byte	63
 2436 054c 1F        		.byte	31
 2437 054d 0F        		.byte	15
 2438 054e 07        		.byte	7
 2439 054f 03        		.byte	3
 2440 0550 01        		.byte	1
 2441 0551 01        		.byte	1
 2442 0552 00        		.byte	0
 2443 0553 00        		.byte	0
 2444 0554 00        		.byte	0
 2445 0555 00        		.byte	0
 2446 0556 00        		.byte	0
 2447 0557 00        		.byte	0
 2448 0558 00        		.byte	0
 2449 0559 00        		.byte	0
 2450 055a 00        		.byte	0
 2451 055b 00        		.byte	0
 2452 055c 00        		.byte	0
 2453 055d 00        		.byte	0
 2454 055e 00        		.byte	0
 2455 055f 00        		.byte	0
 2456 0560 00        		.byte	0
 2457 0561 00        		.byte	0
 2458 0562 00        		.byte	0
 2459 0563 78        		.byte	120
 2460 0564 F8        		.byte	-8
 2461 0565 FC        		.byte	-4
 2462 0566 FC        		.byte	-4
 2463 0567 FC        		.byte	-4
 2464 0568 E0        		.byte	-32
 2465 0569 80        		.byte	-128
 2466 056a 00        		.byte	0
 2467 056b 00        		.byte	0
 2468 056c 00        		.byte	0
 2469 056d 00        		.byte	0
 2470 056e 00        		.byte	0
 2471 056f 00        		.byte	0
 2472 0570 00        		.byte	0
 2473 0571 00        		.byte	0
 2474 0572 00        		.byte	0
 2475 0573 00        		.byte	0
 2476 0574 00        		.byte	0
 2477 0575 00        		.byte	0
 2478 0576 80        		.byte	-128
 2479 0577 C0        		.byte	-64
 2480 0578 F8        		.byte	-8
 2481 0579 FF        		.byte	-1
 2482 057a FF        		.byte	-1
 2483 057b FF        		.byte	-1
 2484 057c FF        		.byte	-1
 2485 057d 3F        		.byte	63
 2486 057e 00        		.byte	0
 2487 057f 00        		.byte	0
 2488 0580 00        		.byte	0
 2489 0581 0F        		.byte	15
 2490 0582 0F        		.byte	15
 2491 0583 0F        		.byte	15
 2492 0584 0F        		.byte	15
 2493 0585 0F        		.byte	15
 2494 0586 0F        		.byte	15
 2495 0587 0F        		.byte	15
 2496 0588 0F        		.byte	15
 2497 0589 0F        		.byte	15
 2498 058a 0F        		.byte	15
 2499 058b 0F        		.byte	15
 2500 058c 0F        		.byte	15
 2501 058d 0F        		.byte	15
 2502 058e 0F        		.byte	15
 2503 058f 0F        		.byte	15
 2504 0590 0F        		.byte	15
 2505 0591 0F        		.byte	15
 2506 0592 0F        		.byte	15
 2507 0593 FF        		.byte	-1
 2508 0594 FF        		.byte	-1
 2509 0595 FF        		.byte	-1
 2510 0596 FF        		.byte	-1
 2511 0597 FF        		.byte	-1
 2512 0598 0F        		.byte	15
 2513 0599 0F        		.byte	15
 2514 059a 0F        		.byte	15
 2515 059b 0F        		.byte	15
 2516 059c 0F        		.byte	15
 2517 059d 0F        		.byte	15
 2518 059e 00        		.byte	0
 2519 059f 00        		.byte	0
 2520 05a0 00        		.byte	0
 2521 05a1 00        		.byte	0
 2522 05a2 00        		.byte	0
 2523 05a3 78        		.byte	120
 2524 05a4 F8        		.byte	-8
 2525 05a5 F8        		.byte	-8
 2526 05a6 F8        		.byte	-8
 2527 05a7 F8        		.byte	-8
 2528 05a8 E0        		.byte	-32
 2529 05a9 80        		.byte	-128
 2530 05aa 00        		.byte	0
 2531 05ab 00        		.byte	0
 2532 05ac 00        		.byte	0
 2533 05ad 00        		.byte	0
 2534 05ae 00        		.byte	0
 2535 05af 00        		.byte	0
 2536 05b0 00        		.byte	0
 2537 05b1 00        		.byte	0
 2538 05b2 00        		.byte	0
 2539 05b3 00        		.byte	0
 2540 05b4 00        		.byte	0
 2541 05b5 00        		.byte	0
 2542 05b6 80        		.byte	-128
 2543 05b7 C0        		.byte	-64
 2544 05b8 F0        		.byte	-16
 2545 05b9 FF        		.byte	-1
 2546 05ba FF        		.byte	-1
 2547 05bb FF        		.byte	-1
 2548 05bc FF        		.byte	-1
 2549 05bd 1F        		.byte	31
 2550 05be 00        		.byte	0
 2551 05bf 00        		.byte	0
 2552 05c0 00        		.byte	0
 2553 05c1 00        		.byte	0
 2554 05c2 00        		.byte	0
 2555 05c3 1F        		.byte	31
 2556 05c4 7F        		.byte	127
 2557 05c5 FF        		.byte	-1
 2558 05c6 FF        		.byte	-1
 2559 05c7 FF        		.byte	-1
 2560 05c8 F8        		.byte	-8
 2561 05c9 C0        		.byte	-64
 2562 05ca 80        		.byte	-128
 2563 05cb 00        		.byte	0
 2564 05cc 00        		.byte	0
 2565 05cd 00        		.byte	0
 2566 05ce 00        		.byte	0
 2567 05cf 00        		.byte	0
 2568 05d0 00        		.byte	0
 2569 05d1 00        		.byte	0
 2570 05d2 00        		.byte	0
 2571 05d3 00        		.byte	0
 2572 05d4 00        		.byte	0
 2573 05d5 00        		.byte	0
 2574 05d6 00        		.byte	0
 2575 05d7 C0        		.byte	-64
 2576 05d8 F8        		.byte	-8
 2577 05d9 FF        		.byte	-1
 2578 05da FF        		.byte	-1
 2579 05db FF        		.byte	-1
 2580 05dc 7F        		.byte	127
 2581 05dd 1F        		.byte	31
 2582 05de 00        		.byte	0
 2583 05df 00        		.byte	0
 2584 05e0 00        		.byte	0
 2585 05e1 00        		.byte	0
 2586 05e2 00        		.byte	0
 2587 05e3 00        		.byte	0
 2588 05e4 00        		.byte	0
 2589 05e5 00        		.byte	0
 2590 05e6 00        		.byte	0
 2591 05e7 00        		.byte	0
 2592 05e8 00        		.byte	0
 2593 05e9 80        		.byte	-128
 2594 05ea FC        		.byte	-4
 2595 05eb FF        		.byte	-1
 2596 05ec FF        		.byte	-1
 2597 05ed FF        		.byte	-1
 2598 05ee FF        		.byte	-1
 2599 05ef 0F        		.byte	15
 2600 05f0 01        		.byte	1
 2601 05f1 00        		.byte	0
 2602 05f2 00        		.byte	0
 2603 05f3 00        		.byte	0
 2604 05f4 00        		.byte	0
 2605 05f5 00        		.byte	0
 2606 05f6 00        		.byte	0
 2607 05f7 00        		.byte	0
 2608 05f8 00        		.byte	0
 2609 05f9 00        		.byte	0
 2610 05fa 00        		.byte	0
 2611 05fb 00        		.byte	0
 2612 05fc 00        		.byte	0
 2613 05fd 00        		.byte	0
 2614 05fe 00        		.byte	0
 2615 05ff 00        		.byte	0
 2616 0600 00        		.byte	0
 2617 0601 00        		.byte	0
 2618 0602 0F        		.byte	15
 2619 0603 7F        		.byte	127
 2620 0604 FF        		.byte	-1
 2621 0605 FF        		.byte	-1
 2622 0606 FF        		.byte	-1
 2623 0607 FF        		.byte	-1
 2624 0608 C0        		.byte	-64
 2625 0609 80        		.byte	-128
 2626 060a 00        		.byte	0
 2627 060b 00        		.byte	0
 2628 060c 00        		.byte	0
 2629 060d 00        		.byte	0
 2630 060e 00        		.byte	0
 2631 060f 00        		.byte	0
 2632 0610 00        		.byte	0
 2633 0611 00        		.byte	0
 2634 0612 00        		.byte	0
 2635 0613 00        		.byte	0
 2636 0614 00        		.byte	0
 2637 0615 00        		.byte	0
 2638 0616 00        		.byte	0
 2639 0617 80        		.byte	-128
 2640 0618 E0        		.byte	-32
 2641 0619 FF        		.byte	-1
 2642 061a FF        		.byte	-1
 2643 061b FF        		.byte	-1
 2644 061c FF        		.byte	-1
 2645 061d 3F        		.byte	63
 2646 061e 00        		.byte	0
 2647 061f 00        		.byte	0
 2648 0620 00        		.byte	0
 2649 0621 00        		.byte	0
 2650 0622 00        		.byte	0
 2651 0623 30        		.byte	48
 2652 0624 F0        		.byte	-16
 2653 0625 F0        		.byte	-16
 2654 0626 F0        		.byte	-16
 2655 0627 F0        		.byte	-16
 2656 0628 E0        		.byte	-32
 2657 0629 00        		.byte	0
 2658 062a 00        		.byte	0
 2659 062b 00        		.byte	0
 2660 062c 00        		.byte	0
 2661 062d 00        		.byte	0
 2662 062e 00        		.byte	0
 2663 062f 00        		.byte	0
 2664 0630 00        		.byte	0
 2665 0631 00        		.byte	0
 2666 0632 00        		.byte	0
 2667 0633 00        		.byte	0
 2668 0634 00        		.byte	0
 2669 0635 00        		.byte	0
 2670 0636 C0        		.byte	-64
 2671 0637 F0        		.byte	-16
 2672 0638 FF        		.byte	-1
 2673 0639 FF        		.byte	-1
 2674 063a FF        		.byte	-1
 2675 063b 7F        		.byte	127
 2676 063c 1F        		.byte	31
 2677 063d 01        		.byte	1
 2678 063e 00        		.byte	0
 2679 063f 00        		.byte	0
 2680 0640 00        		.byte	0
 2681 0641 00        		.byte	0
 2682 0642 00        		.byte	0
 2683 0643 00        		.byte	0
 2684 0644 00        		.byte	0
 2685 0645 01        		.byte	1
 2686 0646 03        		.byte	3
 2687 0647 07        		.byte	7
 2688 0648 0F        		.byte	15
 2689 0649 1F        		.byte	31
 2690 064a 3F        		.byte	63
 2691 064b 3E        		.byte	62
 2692 064c 3E        		.byte	62
 2693 064d 3C        		.byte	60
 2694 064e 7C        		.byte	124
 2695 064f 7C        		.byte	124
 2696 0650 7C        		.byte	124
 2697 0651 7C        		.byte	124
 2698 0652 7C        		.byte	124
 2699 0653 3C        		.byte	60
 2700 0654 3E        		.byte	62
 2701 0655 3F        		.byte	63
 2702 0656 1F        		.byte	31
 2703 0657 1F        		.byte	31
 2704 0658 0F        		.byte	15
 2705 0659 07        		.byte	7
 2706 065a 01        		.byte	1
 2707 065b 00        		.byte	0
 2708 065c 00        		.byte	0
 2709 065d 00        		.byte	0
 2710 065e 00        		.byte	0
 2711 065f 00        		.byte	0
 2712 0660 00        		.byte	0
 2713 0661 00        		.byte	0
 2714 0662 00        		.byte	0
 2715 0663 00        		.byte	0
 2716 0664 00        		.byte	0
 2717 0665 00        		.byte	0
 2718 0666 00        		.byte	0
 2719 0667 00        		.byte	0
 2720 0668 00        		.byte	0
 2721 0669 00        		.byte	0
 2722 066a 00        		.byte	0
 2723 066b 00        		.byte	0
 2724 066c 00        		.byte	0
 2725 066d 00        		.byte	0
 2726 066e 00        		.byte	0
 2727 066f 00        		.byte	0
 2728 0670 00        		.byte	0
 2729 0671 3F        		.byte	63
 2730 0672 3F        		.byte	63
 2731 0673 3F        		.byte	63
 2732 0674 3F        		.byte	63
 2733 0675 3F        		.byte	63
 2734 0676 00        		.byte	0
 2735 0677 00        		.byte	0
 2736 0678 00        		.byte	0
 2737 0679 00        		.byte	0
 2738 067a 00        		.byte	0
 2739 067b 00        		.byte	0
 2740 067c 00        		.byte	0
 2741 067d 00        		.byte	0
 2742 067e 00        		.byte	0
 2743 067f 00        		.byte	0
 2744 0680 00        		.byte	0
 2745 0681 00        		.byte	0
 2746 0682 3C        		.byte	60
 2747 0683 3F        		.byte	63
 2748 0684 3F        		.byte	63
 2749 0685 3F        		.byte	63
 2750 0686 3F        		.byte	63
 2751 0687 3F        		.byte	63
 2752 0688 3F        		.byte	63
 2753 0689 3E        		.byte	62
 2754 068a 3E        		.byte	62
 2755 068b 3E        		.byte	62
 2756 068c 3E        		.byte	62
 2757 068d 3E        		.byte	62
 2758 068e 3E        		.byte	62
 2759 068f 3E        		.byte	62
 2760 0690 3E        		.byte	62
 2761 0691 3E        		.byte	62
 2762 0692 3E        		.byte	62
 2763 0693 3E        		.byte	62
 2764 0694 3E        		.byte	62
 2765 0695 3E        		.byte	62
 2766 0696 3E        		.byte	62
 2767 0697 3E        		.byte	62
 2768 0698 3E        		.byte	62
 2769 0699 3E        		.byte	62
 2770 069a 3E        		.byte	62
 2771 069b 3E        		.byte	62
 2772 069c 3E        		.byte	62
 2773 069d 3E        		.byte	62
 2774 069e 00        		.byte	0
 2775 069f 00        		.byte	0
 2776 06a0 00        		.byte	0
 2777 06a1 00        		.byte	0
 2778 06a2 00        		.byte	0
 2779 06a3 00        		.byte	0
 2780 06a4 01        		.byte	1
 2781 06a5 03        		.byte	3
 2782 06a6 07        		.byte	7
 2783 06a7 0F        		.byte	15
 2784 06a8 1F        		.byte	31
 2785 06a9 1F        		.byte	31
 2786 06aa 3F        		.byte	63
 2787 06ab 3E        		.byte	62
 2788 06ac 3C        		.byte	60
 2789 06ad 7C        		.byte	124
 2790 06ae 7C        		.byte	124
 2791 06af 7C        		.byte	124
 2792 06b0 7C        		.byte	124
 2793 06b1 7C        		.byte	124
 2794 06b2 7C        		.byte	124
 2795 06b3 3C        		.byte	60
 2796 06b4 3E        		.byte	62
 2797 06b5 3F        		.byte	63
 2798 06b6 1F        		.byte	31
 2799 06b7 1F        		.byte	31
 2800 06b8 0F        		.byte	15
 2801 06b9 07        		.byte	7
 2802 06ba 07        		.byte	7
 2803 06bb 01        		.byte	1
 2804 06bc 00        		.byte	0
 2805 06bd 00        		.byte	0
 2806 06be 00        		.byte	0
 2807 06bf 00        		.byte	0
 2808 06c0 00        		.byte	0
 2809 06c1 00        		.byte	0
 2810 06c2 00        		.byte	0
 2811 06c3 00        		.byte	0
 2812 06c4 00        		.byte	0
 2813 06c5 00        		.byte	0
 2814 06c6 00        		.byte	0
 2815 06c7 00        		.byte	0
 2816 06c8 00        		.byte	0
 2817 06c9 00        		.byte	0
 2818 06ca 00        		.byte	0
 2819 06cb 00        		.byte	0
 2820 06cc 00        		.byte	0
 2821 06cd 00        		.byte	0
 2822 06ce 00        		.byte	0
 2823 06cf 00        		.byte	0
 2824 06d0 00        		.byte	0
 2825 06d1 00        		.byte	0
 2826 06d2 00        		.byte	0
 2827 06d3 3F        		.byte	63
 2828 06d4 3F        		.byte	63
 2829 06d5 3F        		.byte	63
 2830 06d6 3F        		.byte	63
 2831 06d7 3F        		.byte	63
 2832 06d8 00        		.byte	0
 2833 06d9 00        		.byte	0
 2834 06da 00        		.byte	0
 2835 06db 00        		.byte	0
 2836 06dc 00        		.byte	0
 2837 06dd 00        		.byte	0
 2838 06de 00        		.byte	0
 2839 06df 00        		.byte	0
 2840 06e0 00        		.byte	0
 2841 06e1 00        		.byte	0
 2842 06e2 00        		.byte	0
 2843 06e3 00        		.byte	0
 2844 06e4 01        		.byte	1
 2845 06e5 03        		.byte	3
 2846 06e6 07        		.byte	7
 2847 06e7 0F        		.byte	15
 2848 06e8 1F        		.byte	31
 2849 06e9 1F        		.byte	31
 2850 06ea 3F        		.byte	63
 2851 06eb 3E        		.byte	62
 2852 06ec 3C        		.byte	60
 2853 06ed 7C        		.byte	124
 2854 06ee 7C        		.byte	124
 2855 06ef 7C        		.byte	124
 2856 06f0 7C        		.byte	124
 2857 06f1 7C        		.byte	124
 2858 06f2 3C        		.byte	60
 2859 06f3 3C        		.byte	60
 2860 06f4 3E        		.byte	62
 2861 06f5 3F        		.byte	63
 2862 06f6 1F        		.byte	31
 2863 06f7 1F        		.byte	31
 2864 06f8 0F        		.byte	15
 2865 06f9 07        		.byte	7
 2866 06fa 03        		.byte	3
 2867 06fb 01        		.byte	1
 2868 06fc 00        		.byte	0
 2869 06fd 00        		.byte	0
 2870 06fe 00        		.byte	0
 2871 06ff 00        		.byte	0
 2872 0700 00        		.byte	0
 2873 0701 00        		.byte	0
 2874 0702 00        		.byte	0
 2875 0703 00        		.byte	0
 2876 0704 00        		.byte	0
 2877 0705 01        		.byte	1
 2878 0706 03        		.byte	3
 2879 0707 07        		.byte	7
 2880 0708 0F        		.byte	15
 2881 0709 1F        		.byte	31
 2882 070a 1F        		.byte	31
 2883 070b 3F        		.byte	63
 2884 070c 3E        		.byte	62
 2885 070d 3C        		.byte	60
 2886 070e 3C        		.byte	60
 2887 070f 7C        		.byte	124
 2888 0710 7C        		.byte	124
 2889 0711 7C        		.byte	124
 2890 0712 7C        		.byte	124
 2891 0713 3C        		.byte	60
 2892 0714 3E        		.byte	62
 2893 0715 3E        		.byte	62
 2894 0716 3F        		.byte	63
 2895 0717 1F        		.byte	31
 2896 0718 0F        		.byte	15
 2897 0719 0F        		.byte	15
 2898 071a 07        		.byte	7
 2899 071b 01        		.byte	1
 2900 071c 00        		.byte	0
 2901 071d 00        		.byte	0
 2902 071e 00        		.byte	0
 2903 071f 00        		.byte	0
 2904 0720 00        		.byte	0
 2905 0721 00        		.byte	0
 2906 0722 00        		.byte	0
 2907 0723 00        		.byte	0
 2908 0724 00        		.byte	0
 2909 0725 00        		.byte	0
 2910 0726 00        		.byte	0
 2911 0727 00        		.byte	0
 2912 0728 00        		.byte	0
 2913 0729 3F        		.byte	63
 2914 072a 3F        		.byte	63
 2915 072b 3F        		.byte	63
 2916 072c 3F        		.byte	63
 2917 072d 3F        		.byte	63
 2918 072e 03        		.byte	3
 2919 072f 00        		.byte	0
 2920 0730 00        		.byte	0
 2921 0731 00        		.byte	0
 2922 0732 00        		.byte	0
 2923 0733 00        		.byte	0
 2924 0734 00        		.byte	0
 2925 0735 00        		.byte	0
 2926 0736 00        		.byte	0
 2927 0737 00        		.byte	0
 2928 0738 00        		.byte	0
 2929 0739 00        		.byte	0
 2930 073a 00        		.byte	0
 2931 073b 00        		.byte	0
 2932 073c 00        		.byte	0
 2933 073d 00        		.byte	0
 2934 073e 00        		.byte	0
 2935 073f 00        		.byte	0
 2936 0740 00        		.byte	0
 2937 0741 00        		.byte	0
 2938 0742 00        		.byte	0
 2939 0743 00        		.byte	0
 2940 0744 01        		.byte	1
 2941 0745 03        		.byte	3
 2942 0746 07        		.byte	7
 2943 0747 0F        		.byte	15
 2944 0748 1F        		.byte	31
 2945 0749 1F        		.byte	31
 2946 074a 3F        		.byte	63
 2947 074b 3E        		.byte	62
 2948 074c 3C        		.byte	60
 2949 074d 7C        		.byte	124
 2950 074e 7C        		.byte	124
 2951 074f 7C        		.byte	124
 2952 0750 7C        		.byte	124
 2953 0751 7C        		.byte	124
 2954 0752 7C        		.byte	124
 2955 0753 3C        		.byte	60
 2956 0754 3C        		.byte	60
 2957 0755 3E        		.byte	62
 2958 0756 3F        		.byte	63
 2959 0757 1F        		.byte	31
 2960 0758 1F        		.byte	31
 2961 0759 0F        		.byte	15
 2962 075a 07        		.byte	7
 2963 075b 03        		.byte	3
 2964 075c 00        		.byte	0
 2965 075d 00        		.byte	0
 2966 075e 00        		.byte	0
 2967 075f 00        		.byte	0
 2968 0760 00        		.byte	0
 2969 0761 00        		.byte	0
 2970 0762 00        		.byte	0
 2971 0763 00        		.byte	0
 2972 0764 01        		.byte	1
 2973 0765 03        		.byte	3
 2974 0766 0F        		.byte	15
 2975 0767 0F        		.byte	15
 2976 0768 1F        		.byte	31
 2977 0769 3F        		.byte	63
 2978 076a 3E        		.byte	62
 2979 076b 3C        		.byte	60
 2980 076c 7C        		.byte	124
 2981 076d 7C        		.byte	124
 2982 076e 7C        		.byte	124
 2983 076f 7C        		.byte	124
 2984 0770 7C        		.byte	124
 2985 0771 7C        		.byte	124
 2986 0772 3C        		.byte	60
 2987 0773 3E        		.byte	62
 2988 0774 3E        		.byte	62
 2989 0775 1F        		.byte	31
 2990 0776 1F        		.byte	31
 2991 0777 0F        		.byte	15
 2992 0778 07        		.byte	7
 2993 0779 03        		.byte	3
 2994 077a 01        		.byte	1
 2995 077b 00        		.byte	0
 2996 077c 00        		.byte	0
 2997 077d 00        		.byte	0
 2998 077e 00        		.byte	0
 2999 077f 00        		.byte	0
 3000               	.global	lil_one
 3003               	lil_one:
 3004 0780 00        		.byte	0
 3005 0781 00        		.byte	0
 3006 0782 C0        		.byte	-64
 3007 0783 F0        		.byte	-16
 3008 0784 F8        		.byte	-8
 3009 0785 38        		.byte	56
 3010 0786 1C        		.byte	28
 3011 0787 0C        		.byte	12
 3012 0788 0C        		.byte	12
 3013 0789 0C        		.byte	12
 3014 078a 1C        		.byte	28
 3015 078b 38        		.byte	56
 3016 078c F0        		.byte	-16
 3017 078d E0        		.byte	-32
 3018 078e 80        		.byte	-128
 3019 078f 00        		.byte	0
 3020 0790 00        		.byte	0
 3021 0791 38        		.byte	56
 3022 0792 FF        		.byte	-1
 3023 0793 FF        		.byte	-1
 3024 0794 00        		.byte	0
 3025 0795 00        		.byte	0
 3026 0796 00        		.byte	0
 3027 0797 00        		.byte	0
 3028 0798 00        		.byte	0
 3029 0799 00        		.byte	0
 3030 079a 00        		.byte	0
 3031 079b 00        		.byte	0
 3032 079c 87        		.byte	-121
 3033 079d FF        		.byte	-1
 3034 079e FF        		.byte	-1
 3035 079f 00        		.byte	0
 3036 07a0 00        		.byte	0
 3037 07a1 00        		.byte	0
 3038 07a2 0F        		.byte	15
 3039 07a3 1F        		.byte	31
 3040 07a4 3C        		.byte	60
 3041 07a5 70        		.byte	112
 3042 07a6 60        		.byte	96
 3043 07a7 E0        		.byte	-32
 3044 07a8 E0        		.byte	-32
 3045 07a9 E0        		.byte	-32
 3046 07aa 60        		.byte	96
 3047 07ab 70        		.byte	112
 3048 07ac 3F        		.byte	63
 3049 07ad 1F        		.byte	31
 3050 07ae 07        		.byte	7
 3051 07af 00        		.byte	0
 3052 07b0 00        		.byte	0
 3053 07b1 00        		.byte	0
 3054 07b2 00        		.byte	0
 3055 07b3 80        		.byte	-128
 3056 07b4 80        		.byte	-128
 3057 07b5 C0        		.byte	-64
 3058 07b6 C0        		.byte	-64
 3059 07b7 E0        		.byte	-32
 3060 07b8 70        		.byte	112
 3061 07b9 FC        		.byte	-4
 3062 07ba FC        		.byte	-4
 3063 07bb 00        		.byte	0
 3064 07bc 00        		.byte	0
 3065 07bd 00        		.byte	0
 3066 07be 00        		.byte	0
 3067 07bf 00        		.byte	0
 3068 07c0 00        		.byte	0
 3069 07c1 00        		.byte	0
 3070 07c2 00        		.byte	0
 3071 07c3 03        		.byte	3
 3072 07c4 01        		.byte	1
 3073 07c5 01        		.byte	1
 3074 07c6 00        		.byte	0
 3075 07c7 00        		.byte	0
 3076 07c8 00        		.byte	0
 3077 07c9 FF        		.byte	-1
 3078 07ca FF        		.byte	-1
 3079 07cb 00        		.byte	0
 3080 07cc 00        		.byte	0
 3081 07cd 00        		.byte	0
 3082 07ce 00        		.byte	0
 3083 07cf 00        		.byte	0
 3084 07d0 00        		.byte	0
 3085 07d1 00        		.byte	0
 3086 07d2 00        		.byte	0
 3087 07d3 00        		.byte	0
 3088 07d4 00        		.byte	0
 3089 07d5 00        		.byte	0
 3090 07d6 00        		.byte	0
 3091 07d7 00        		.byte	0
 3092 07d8 00        		.byte	0
 3093 07d9 7F        		.byte	127
 3094 07da 7F        		.byte	127
 3095 07db 00        		.byte	0
 3096 07dc 00        		.byte	0
 3097 07dd 00        		.byte	0
 3098 07de 00        		.byte	0
 3099 07df 00        		.byte	0
 3100 07e0 00        		.byte	0
 3101 07e1 00        		.byte	0
 3102 07e2 E0        		.byte	-32
 3103 07e3 F0        		.byte	-16
 3104 07e4 78        		.byte	120
 3105 07e5 18        		.byte	24
 3106 07e6 1C        		.byte	28
 3107 07e7 0C        		.byte	12
 3108 07e8 0C        		.byte	12
 3109 07e9 0C        		.byte	12
 3110 07ea 1C        		.byte	28
 3111 07eb 18        		.byte	24
 3112 07ec F8        		.byte	-8
 3113 07ed F0        		.byte	-16
 3114 07ee E0        		.byte	-32
 3115 07ef 00        		.byte	0
 3116 07f0 00        		.byte	0
 3117 07f1 00        		.byte	0
 3118 07f2 00        		.byte	0
 3119 07f3 00        		.byte	0
 3120 07f4 00        		.byte	0
 3121 07f5 00        		.byte	0
 3122 07f6 80        		.byte	-128
 3123 07f7 80        		.byte	-128
 3124 07f8 C0        		.byte	-64
 3125 07f9 E0        		.byte	-32
 3126 07fa 70        		.byte	112
 3127 07fb 38        		.byte	56
 3128 07fc 1F        		.byte	31
 3129 07fd 0F        		.byte	15
 3130 07fe 07        		.byte	7
 3131 07ff 00        		.byte	0
 3132 0800 00        		.byte	0
 3133 0801 60        		.byte	96
 3134 0802 78        		.byte	120
 3135 0803 7C        		.byte	124
 3136 0804 7E        		.byte	126
 3137 0805 6F        		.byte	111
 3138 0806 67        		.byte	103
 3139 0807 63        		.byte	99
 3140 0808 61        		.byte	97
 3141 0809 60        		.byte	96
 3142 080a 60        		.byte	96
 3143 080b 60        		.byte	96
 3144 080c 60        		.byte	96
 3145 080d 60        		.byte	96
 3146 080e 60        		.byte	96
 3147 080f 00        		.byte	0
 3148 0810 00        		.byte	0
 3149 0811 00        		.byte	0
 3150 0812 E0        		.byte	-32
 3151 0813 F0        		.byte	-16
 3152 0814 78        		.byte	120
 3153 0815 18        		.byte	24
 3154 0816 1C        		.byte	28
 3155 0817 0C        		.byte	12
 3156 0818 0C        		.byte	12
 3157 0819 0C        		.byte	12
 3158 081a 1C        		.byte	28
 3159 081b 78        		.byte	120
 3160 081c F0        		.byte	-16
 3161 081d E0        		.byte	-32
 3162 081e 00        		.byte	0
 3163 081f 00        		.byte	0
 3164 0820 00        		.byte	0
 3165 0821 00        		.byte	0
 3166 0822 00        		.byte	0
 3167 0823 00        		.byte	0
 3168 0824 00        		.byte	0
 3169 0825 00        		.byte	0
 3170 0826 00        		.byte	0
 3171 0827 18        		.byte	24
 3172 0828 18        		.byte	24
 3173 0829 18        		.byte	24
 3174 082a 1C        		.byte	28
 3175 082b 3F        		.byte	63
 3176 082c F7        		.byte	-9
 3177 082d E3        		.byte	-29
 3178 082e C0        		.byte	-64
 3179 082f 00        		.byte	0
 3180 0830 00        		.byte	0
 3181 0831 00        		.byte	0
 3182 0832 1C        		.byte	28
 3183 0833 3E        		.byte	62
 3184 0834 78        		.byte	120
 3185 0835 70        		.byte	112
 3186 0836 60        		.byte	96
 3187 0837 E0        		.byte	-32
 3188 0838 E0        		.byte	-32
 3189 0839 E0        		.byte	-32
 3190 083a 60        		.byte	96
 3191 083b 70        		.byte	112
 3192 083c 3C        		.byte	60
 3193 083d 3F        		.byte	63
 3194 083e 0F        		.byte	15
 3195 083f 00        		.byte	0
 3196 0840 00        		.byte	0
 3197 0841 00        		.byte	0
 3198 0842 00        		.byte	0
 3199 0843 00        		.byte	0
 3200 0844 00        		.byte	0
 3201 0845 00        		.byte	0
 3202 0846 80        		.byte	-128
 3203 0847 C0        		.byte	-64
 3204 0848 E0        		.byte	-32
 3205 0849 78        		.byte	120
 3206 084a FC        		.byte	-4
 3207 084b FC        		.byte	-4
 3208 084c 00        		.byte	0
 3209 084d 00        		.byte	0
 3210 084e 00        		.byte	0
 3211 084f 00        		.byte	0
 3212 0850 00        		.byte	0
 3213 0851 80        		.byte	-128
 3214 0852 E0        		.byte	-32
 3215 0853 70        		.byte	112
 3216 0854 3C        		.byte	60
 3217 0855 0E        		.byte	14
 3218 0856 07        		.byte	7
 3219 0857 03        		.byte	3
 3220 0858 00        		.byte	0
 3221 0859 00        		.byte	0
 3222 085a FF        		.byte	-1
 3223 085b FF        		.byte	-1
 3224 085c 00        		.byte	0
 3225 085d 00        		.byte	0
 3226 085e 00        		.byte	0
 3227 085f 00        		.byte	0
 3228 0860 00        		.byte	0
 3229 0861 03        		.byte	3
 3230 0862 03        		.byte	3
 3231 0863 03        		.byte	3
 3232 0864 03        		.byte	3
 3233 0865 03        		.byte	3
 3234 0866 03        		.byte	3
 3235 0867 03        		.byte	3
 3236 0868 03        		.byte	3
 3237 0869 03        		.byte	3
 3238 086a 7F        		.byte	127
 3239 086b 7F        		.byte	127
 3240 086c 03        		.byte	3
 3241 086d 03        		.byte	3
 3242 086e 03        		.byte	3
 3243 086f 00        		.byte	0
 3244 0870 00        		.byte	0
 3245 0871 00        		.byte	0
 3246 0872 00        		.byte	0
 3247 0873 E0        		.byte	-32
 3248 0874 FC        		.byte	-4
 3249 0875 FC        		.byte	-4
 3250 0876 1C        		.byte	28
 3251 0877 1C        		.byte	28
 3252 0878 1C        		.byte	28
 3253 0879 1C        		.byte	28
 3254 087a 1C        		.byte	28
 3255 087b 1C        		.byte	28
 3256 087c 1C        		.byte	28
 3257 087d 1C        		.byte	28
 3258 087e 00        		.byte	0
 3259 087f 00        		.byte	0
 3260 0880 00        		.byte	0
 3261 0881 00        		.byte	0
 3262 0882 1C        		.byte	28
 3263 0883 1F        		.byte	31
 3264 0884 1F        		.byte	31
 3265 0885 0C        		.byte	12
 3266 0886 0C        		.byte	12
 3267 0887 0E        		.byte	14
 3268 0888 0E        		.byte	14
 3269 0889 0E        		.byte	14
 3270 088a 0E        		.byte	14
 3271 088b 1C        		.byte	28
 3272 088c 7C        		.byte	124
 3273 088d F8        		.byte	-8
 3274 088e F0        		.byte	-16
 3275 088f 00        		.byte	0
 3276 0890 00        		.byte	0
 3277 0891 00        		.byte	0
 3278 0892 1C        		.byte	28
 3279 0893 3C        		.byte	60
 3280 0894 78        		.byte	120
 3281 0895 70        		.byte	112
 3282 0896 60        		.byte	96
 3283 0897 E0        		.byte	-32
 3284 0898 E0        		.byte	-32
 3285 0899 60        		.byte	96
 3286 089a 60        		.byte	96
 3287 089b 70        		.byte	112
 3288 089c 3C        		.byte	60
 3289 089d 1F        		.byte	31
 3290 089e 0F        		.byte	15
 3291 089f 00        		.byte	0
 3292 08a0 00        		.byte	0
 3293 08a1 00        		.byte	0
 3294 08a2 C0        		.byte	-64
 3295 08a3 E0        		.byte	-32
 3296 08a4 F0        		.byte	-16
 3297 08a5 38        		.byte	56
 3298 08a6 1C        		.byte	28
 3299 08a7 0C        		.byte	12
 3300 08a8 0C        		.byte	12
 3301 08a9 0C        		.byte	12
 3302 08aa 1C        		.byte	28
 3303 08ab 18        		.byte	24
 3304 08ac 78        		.byte	120
 3305 08ad 70        		.byte	112
 3306 08ae 40        		.byte	64
 3307 08af 00        		.byte	0
 3308 08b0 00        		.byte	0
 3309 08b1 FC        		.byte	-4
 3310 08b2 FF        		.byte	-1
 3311 08b3 FF        		.byte	-1
 3312 08b4 70        		.byte	112
 3313 08b5 18        		.byte	24
 3314 08b6 0C        		.byte	12
 3315 08b7 0C        		.byte	12
 3316 08b8 0C        		.byte	12
 3317 08b9 0C        		.byte	12
 3318 08ba 0C        		.byte	12
 3319 08bb 1C        		.byte	28
 3320 08bc 78        		.byte	120
 3321 08bd F8        		.byte	-8
 3322 08be E0        		.byte	-32
 3323 08bf 00        		.byte	0
 3324 08c0 00        		.byte	0
 3325 08c1 00        		.byte	0
 3326 08c2 0F        		.byte	15
 3327 08c3 1F        		.byte	31
 3328 08c4 3C        		.byte	60
 3329 08c5 70        		.byte	112
 3330 08c6 60        		.byte	96
 3331 08c7 60        		.byte	96
 3332 08c8 E0        		.byte	-32
 3333 08c9 E0        		.byte	-32
 3334 08ca 60        		.byte	96
 3335 08cb 70        		.byte	112
 3336 08cc 3C        		.byte	60
 3337 08cd 3F        		.byte	63
 3338 08ce 0F        		.byte	15
 3339 08cf 00        		.byte	0
 3340 08d0 00        		.byte	0
 3341 08d1 00        		.byte	0
 3342 08d2 1C        		.byte	28
 3343 08d3 1C        		.byte	28
 3344 08d4 1C        		.byte	28
 3345 08d5 1C        		.byte	28
 3346 08d6 1C        		.byte	28
 3347 08d7 1C        		.byte	28
 3348 08d8 1C        		.byte	28
 3349 08d9 1C        		.byte	28
 3350 08da 9C        		.byte	-100
 3351 08db FC        		.byte	-4
 3352 08dc FC        		.byte	-4
 3353 08dd 7C        		.byte	124
 3354 08de 1C        		.byte	28
 3355 08df 00        		.byte	0
 3356 08e0 00        		.byte	0
 3357 08e1 00        		.byte	0
 3358 08e2 00        		.byte	0
 3359 08e3 00        		.byte	0
 3360 08e4 00        		.byte	0
 3361 08e5 00        		.byte	0
 3362 08e6 C0        		.byte	-64
 3363 08e7 F0        		.byte	-16
 3364 08e8 FC        		.byte	-4
 3365 08e9 3F        		.byte	63
 3366 08ea 0F        		.byte	15
 3367 08eb 03        		.byte	3
 3368 08ec 00        		.byte	0
 3369 08ed 00        		.byte	0
 3370 08ee 00        		.byte	0
 3371 08ef 00        		.byte	0
 3372 08f0 00        		.byte	0
 3373 08f1 00        		.byte	0
 3374 08f2 00        		.byte	0
 3375 08f3 00        		.byte	0
 3376 08f4 00        		.byte	0
 3377 08f5 7E        		.byte	126
 3378 08f6 7F        		.byte	127
 3379 08f7 1F        		.byte	31
 3380 08f8 01        		.byte	1
 3381 08f9 00        		.byte	0
 3382 08fa 00        		.byte	0
 3383 08fb 00        		.byte	0
 3384 08fc 00        		.byte	0
 3385 08fd 00        		.byte	0
 3386 08fe 00        		.byte	0
 3387 08ff 00        		.byte	0
 3388 0900 00        		.byte	0
 3389 0901 00        		.byte	0
 3390 0902 C0        		.byte	-64
 3391 0903 F0        		.byte	-16
 3392 0904 F8        		.byte	-8
 3393 0905 38        		.byte	56
 3394 0906 1C        		.byte	28
 3395 0907 0C        		.byte	12
 3396 0908 0C        		.byte	12
 3397 0909 0C        		.byte	12
 3398 090a 1C        		.byte	28
 3399 090b 38        		.byte	56
 3400 090c F8        		.byte	-8
 3401 090d F0        		.byte	-16
 3402 090e 00        		.byte	0
 3403 090f 00        		.byte	0
 3404 0910 00        		.byte	0
 3405 0911 00        		.byte	0
 3406 0912 C1        		.byte	-63
 3407 0913 E7        		.byte	-25
 3408 0914 77        		.byte	119
 3409 0915 3E        		.byte	62
 3410 0916 1C        		.byte	28
 3411 0917 18        		.byte	24
 3412 0918 18        		.byte	24
 3413 0919 18        		.byte	24
 3414 091a 1C        		.byte	28
 3415 091b 3E        		.byte	62
 3416 091c F7        		.byte	-9
 3417 091d E3        		.byte	-29
 3418 091e C0        		.byte	-64
 3419 091f 00        		.byte	0
 3420 0920 00        		.byte	0
 3421 0921 03        		.byte	3
 3422 0922 1F        		.byte	31
 3423 0923 3F        		.byte	63
 3424 0924 78        		.byte	120
 3425 0925 70        		.byte	112
 3426 0926 60        		.byte	96
 3427 0927 E0        		.byte	-32
 3428 0928 E0        		.byte	-32
 3429 0929 E0        		.byte	-32
 3430 092a 60        		.byte	96
 3431 092b 70        		.byte	112
 3432 092c 78        		.byte	120
 3433 092d 3F        		.byte	63
 3434 092e 0F        		.byte	15
 3435 092f 00        		.byte	0
 3436 0930 00        		.byte	0
 3437 0931 00        		.byte	0
 3438 0932 E0        		.byte	-32
 3439 0933 F0        		.byte	-16
 3440 0934 78        		.byte	120
 3441 0935 38        		.byte	56
 3442 0936 1C        		.byte	28
 3443 0937 0C        		.byte	12
 3444 0938 0C        		.byte	12
 3445 0939 0C        		.byte	12
 3446 093a 1C        		.byte	28
 3447 093b 38        		.byte	56
 3448 093c F0        		.byte	-16
 3449 093d E0        		.byte	-32
 3450 093e C0        		.byte	-64
 3451 093f 00        		.byte	0
 3452 0940 00        		.byte	0
 3453 0941 03        		.byte	3
 3454 0942 1F        		.byte	31
 3455 0943 3F        		.byte	63
 3456 0944 78        		.byte	120
 3457 0945 E0        		.byte	-32
 3458 0946 E0        		.byte	-32
 3459 0947 C0        		.byte	-64
 3460 0948 C0        		.byte	-64
 3461 0949 C0        		.byte	-64
 3462 094a 60        		.byte	96
 3463 094b 70        		.byte	112
 3464 094c 3F        		.byte	63
 3465 094d FF        		.byte	-1
 3466 094e FF        		.byte	-1
 3467 094f 00        		.byte	0
 3468 0950 00        		.byte	0
 3469 0951 00        		.byte	0
 3470 0952 1C        		.byte	28
 3471 0953 3C        		.byte	60
 3472 0954 78        		.byte	120
 3473 0955 60        		.byte	96
 3474 0956 E0        		.byte	-32
 3475 0957 E0        		.byte	-32
 3476 0958 E0        		.byte	-32
 3477 0959 60        		.byte	96
 3478 095a 60        		.byte	96
 3479 095b 78        		.byte	120
 3480 095c 3F        		.byte	63
 3481 095d 1F        		.byte	31
 3482 095e 07        		.byte	7
 3483 095f 00        		.byte	0
 3484               	.global	menu
 3487               	menu:
 3488 0960 80        		.byte	-128
 3489 0961 80        		.byte	-128
 3490 0962 80        		.byte	-128
 3491 0963 80        		.byte	-128
 3492 0964 EF        		.byte	-17
 3493 0965 C9        		.byte	-55
 3494 0966 FB        		.byte	-5
 3495 0967 80        		.byte	-128
 3496 0968 FF        		.byte	-1
 3497 0969 89        		.byte	-119
 3498 096a 8F        		.byte	-113
 3499 096b 80        		.byte	-128
 3500 096c FF        		.byte	-1
 3501 096d C9        		.byte	-55
 3502 096e C1        		.byte	-63
 3503 096f 80        		.byte	-128
 3504 0970 FF        		.byte	-1
 3505 0971 C9        		.byte	-55
 3506 0972 C1        		.byte	-63
 3507 0973 80        		.byte	-128
 3508 0974 FF        		.byte	-1
 3509 0975 C1        		.byte	-63
 3510 0976 BE        		.byte	-66
 3511 0977 80        		.byte	-128
 3512 0978 80        		.byte	-128
 3513 0979 80        		.byte	-128
 3514 097a 80        		.byte	-128
 3515 097b 80        		.byte	-128
 3516 097c C0        		.byte	-64
 3517 097d F0        		.byte	-16
 3518 097e FF        		.byte	-1
 3519 097f 80        		.byte	-128
 3520 0980 80        		.byte	-128
 3521 0981 80        		.byte	-128
 3522 0982 80        		.byte	-128
 3523 0983 80        		.byte	-128
 3524 0984 FF        		.byte	-1
 3525 0985 C1        		.byte	-63
 3526 0986 BE        		.byte	-66
 3527 0987 80        		.byte	-128
 3528 0988 C1        		.byte	-63
 3529 0989 FF        		.byte	-1
 3530 098a C1        		.byte	-63
 3531 098b 80        		.byte	-128
 3532 098c EF        		.byte	-17
 3533 098d C9        		.byte	-55
 3534 098e FB        		.byte	-5
 3535 098f 80        		.byte	-128
 3536 0990 81        		.byte	-127
 3537 0991 FF        		.byte	-1
 3538 0992 81        		.byte	-127
 3539 0993 80        		.byte	-128
 3540 0994 80        		.byte	-128
 3541 0995 80        		.byte	-128
 3542 0996 80        		.byte	-128
 3543 0997 80        		.byte	-128
 3544 0998 C0        		.byte	-64
 3545 0999 F0        		.byte	-16
 3546 099a FF        		.byte	-1
 3547 099b 80        		.byte	-128
 3548 099c 80        		.byte	-128
 3549 099d 80        		.byte	-128
 3550 099e 80        		.byte	-128
 3551 099f 80        		.byte	-128
 3552 09a0 FF        		.byte	-1
 3553 09a1 89        		.byte	-119
 3554 09a2 FF        		.byte	-1
 3555 09a3 80        		.byte	-128
 3556 09a4 BE        		.byte	-66
 3557 09a5 C1        		.byte	-63
 3558 09a6 A2        		.byte	-94
 3559 09a7 80        		.byte	-128
 3560 09a8 BE        		.byte	-66
 3561 09a9 C1        		.byte	-63
 3562 09aa A2        		.byte	-94
 3563 09ab 80        		.byte	-128
 3564 09ac FF        		.byte	-1
 3565 09ad C9        		.byte	-55
 3566 09ae C1        		.byte	-63
 3567 09af 80        		.byte	-128
 3568 09b0 FF        		.byte	-1
 3569 09b1 C0        		.byte	-64
 3570 09b2 E0        		.byte	-32
 3571 09b3 80        		.byte	-128
 3572 09b4 80        		.byte	-128
 3573 09b5 80        		.byte	-128
 3574 09b6 80        		.byte	-128
 3575 09b7 80        		.byte	-128
 3576 09b8 C0        		.byte	-64
 3577 09b9 F0        		.byte	-16
 3578 09ba FF        		.byte	-1
 3579 09bb 80        		.byte	-128
 3580 09bc 80        		.byte	-128
 3581 09bd 80        		.byte	-128
 3582 09be 80        		.byte	-128
 3583 09bf 80        		.byte	-128
 3584 09c0 C0        		.byte	-64
 3585 09c1 F0        		.byte	-16
 3586 09c2 FF        		.byte	-1
 3587 09c3 80        		.byte	-128
 3588 09c4 80        		.byte	-128
 3589 09c5 80        		.byte	-128
 3590 09c6 C0        		.byte	-64
 3591 09c7 F0        		.byte	-16
 3592 09c8 FF        		.byte	-1
 3593 09c9 80        		.byte	-128
 3594 09ca C0        		.byte	-64
 3595 09cb F0        		.byte	-16
 3596 09cc FF        		.byte	-1
 3597 09cd 80        		.byte	-128
 3598 09ce C0        		.byte	-64
 3599 09cf F0        		.byte	-16
 3600 09d0 FF        		.byte	-1
 3601 09d1 80        		.byte	-128
 3602 09d2 C0        		.byte	-64
 3603 09d3 F0        		.byte	-16
 3604 09d4 FF        		.byte	-1
 3605 09d5 80        		.byte	-128
 3606               	.global	mode
 3607               	.global	mode
 3608               		.section .bss
 3611               	mode:
 3612 0000 00        		.skip 1,0
 3617               		.text
 3619               	.Letext0:
 3620               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 biCycles.c
     /tmp/ccBgKahP.s:2      *ABS*:0000003f __SREG__
     /tmp/ccBgKahP.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccBgKahP.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccBgKahP.s:5      *ABS*:00000034 __CCP__
     /tmp/ccBgKahP.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccBgKahP.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccBgKahP.s:98     .text:00000000 lcd_spi_init
     /tmp/ccBgKahP.s:129    .text:0000000e lcd_spi_command
     /tmp/ccBgKahP.s:166    .text:0000001e lcd_spi_data
     /tmp/ccBgKahP.s:202    .text:0000002e lcd_init
     /tmp/ccBgKahP.s:359    .text:000000a8 lcd_draw
     /tmp/ccBgKahP.s:408    .text:000000de lcd_col
     /tmp/ccBgKahP.s:440    .text:000000f8 lcd_clear
     /tmp/ccBgKahP.s:491    .text:00000120 lcd_draw_menu
     /tmp/ccBgKahP.s:3611   .bss:00000000 mode
     /tmp/ccBgKahP.s:3487   .progmem.data:00000960 menu
     /tmp/ccBgKahP.s:668    .text:000001d0 main
     /tmp/ccBgKahP.s:800    .text:00000222 __vector_5
     /tmp/ccBgKahP.s:871    .text:00000284 lcd_draw_bignum
     /tmp/ccBgKahP.s:1079   .progmem.data:00000000 big_one
     /tmp/ccBgKahP.s:975    .text:000002fe lcd_draw_lilnum
     /tmp/ccBgKahP.s:3003   .progmem.data:00000780 lil_one

UNDEFINED SYMBOLS
__divmodhi4
__do_clear_bss
